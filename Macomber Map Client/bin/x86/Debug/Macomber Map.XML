<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Macomber Map</name>
    </assembly>
    <members>
        <member name="T:Macomber_Map.User_Interface_Components.Startup_Form">
            <summary>
            This class holds the start-up form, which will determine the appropriate databases and their parameters
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Startup_Form.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Startup_Form.MapReady">
            <summary>An indication when Macomber Map is </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Startup_Form.Map">
            <summary>The newly created Macomber Map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Startup_Form.Connectors">
            <summary>The full list of available connectors</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Startup_Form.ConnectionAttempt">
            <summary>The ConnectionAttempt counter to track what 'ok' press .this is from to ensure old threds are closed properly</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Startup_Form.Coordinates">
            <summary>The coordinates to be used in starting up the map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Startup_Form.MapStart">
            <summary>Our callback to start up the map</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.ShowDialog(System.Threading.WaitCallback)">
            <summary>
            Offer a startup dialog
            </summary>
            <param name="MapStart"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.#ctor">
            <summary>
            Initialize a new startup form
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.CreateMap">
            <summary>
            Create a new Macomber Map instance
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.WaitForMap">
            <summary>
            Wait for MM to be online and ready
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            When our form closes, kill the processes if our login wasn't completely successful.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.OnShown(System.EventArgs)">
            <summary>
            If we're set to only use defaults, hide everything and simulate the connect button.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.SignIn(System.String,System.String)">
            <summary>
            Sign in automatically with username and password
            </summary>
            <param name="UserName"></param>
            <param name="Password"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.btnOK_Click(System.Object,System.EventArgs)">
            <summary>        
            Handle the user clicking the 'connect' button
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.LogEvent(System.String)">
            <summary>
            Log an event to the progess bar
            </summary>
            <param name="EventText">The text of the event</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.btnSavecase_Click(System.Object,System.EventArgs)">
            <summary>
            Load a one-line from savecase
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.UpdateDataSources(System.Object,System.EventArgs)">
            <summary>
            Update the list of data sources, by providing the list of available data connections
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.chkSpeakViolations_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Update our speech preferences
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.tmrUpdate_Tick(System.Object,System.EventArgs)">
            <summary>
            Handle the update timer by checking for new events
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.chkLog_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handle the updating of the log status
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.chkPipe_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            When the pipe checkbox is changed, update the integration information
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.picLogo_Click(System.Object,System.EventArgs)">
            <summary>
            If the user clicks on the about window, show our dialog
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.btnRemoveSensitiveInformation_Click(System.Object,System.EventArgs)">
            <summary>
            Remove sensitive information from our model
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.Startup_Form.LoginBounds">
            <summary>
            Report the bounds of components needed for logging in.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Startup_Form.ThreadSafeOpenFileDialog">
            <summary>
            This class provides a thread-safe way of offering a open file dialog
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Startup_Form.ThreadSafeOpenFileDialog.OpenFileDialogThread">
            <summary>The thread in which the dialog is presented</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Startup_Form.ThreadSafeOpenFileDialog.ResultPath">
            <summary>The outgoing path of the query</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Startup_Form.ThreadSafeOpenFileDialog.ResultOneLineDirectory">
            <summary>The path of the one-lines</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Startup_Form.ThreadSafeOpenFileDialog.Result">
            <summary>The outgoing result of the query</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.ThreadSafeOpenFileDialog.ShowDialog(System.String@)">
            <summary>
            Show the open file dialog, and return the path (if selected - none if not)
            </summary>
            <returns>The result of the query</returns>
            <param name="ResultOneLineDirectory"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Startup_Form.ThreadSafeOpenFileDialog.PresentDialog">
            <summary>
            Present the dialog in its own thread.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_TransformerWinding">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc. All Rights Reserved.
            This class holds information on a transformer winding
            </summary>    
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Serializable">
            <summary>
            This class offers the interface to saving and loading an element's XML.
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Serializable.UnmatchedTypes">
            <summary>The collection of unmatched types for debugging</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.#ctor">
            <summary>
            Create a new serializable element
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Create a new serializable element
            </summary>
            <param name="ElementSource">The element source for the data</param>        
            <param name="AddIfNew">Whether to add new elements to the main repository</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize an element from a data reader
            </summary>
            <param name="dRd"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.AssignValue(System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            Assign a value to a specific element
            </summary>
            <param name="ColName">The column name</param>
            <param name="ColValue">The column value</param>
            <param name="Target">The target</param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.WriteXML(System.Xml.XmlTextWriter)">
            <summary>
            Write the boundary information to the XML Text writer
            </summary>
            <param name="xW">The outgoing text writer</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.ReadDatabase(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Go through all columns and load in the values
            </summary>
            <param name="dRd"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.ReadXML(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Go through all attributes and sub-elements within this element, and load in the values
            </summary>
            <param name="XmlToRead">The Xml Element to be read</param>
            <param name="AddIfNew">Whether to add a new element to our master repository</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.ReadXml(System.Xml.XmlElement,System.Object,System.Boolean)">
            <summary>
            Go through all attributes and sub-elements within the target object, and load in the values
            </summary>
            <param name="XmlToRead">The XML to be read</param>
            <param name="TargetObject">The target object</param>
            <param name="AddIfNew">Whether to add the element into our master repository</param>        
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.AssignValue(System.Reflection.MemberInfo,System.Object,System.Object)">
            <summary>
            Assign a particular value to a field/property
            </summary>
            <param name="fpI">The field/property's information</param>
            <param name="OutgoingValue">The outgoing value</param>
            <param name="Target">The target to receive the new value</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.RetrieveConvertedValue(System.Type,System.Object,System.Object,System.Boolean)">
            <summary>
            Convert a value into a specified type
            </summary>
            <param name="OutgoingType">The outgoing value's type</param>
            <param name="OutgoingValue">The value in string form</param>
            <param name="Target">The recipient of the data</param>
            <param name="AddIfNew">Whether to add a new element to our master repository</param>        
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.IsNumeric(System.Object)">
            <summary>
            Determine whether an object is numeric (e.g., int, decimal)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.ConvertAndStoreValue(System.Reflection.MemberInfo,System.Type,System.String,System.Boolean)">
            <summary>
            Convert and store a value from XML into its appropriate format
            </summary>
            <param name="fpI">The field or property info</param>
            <param name="OutgoingType">The outgoing type of the variable</param>
            <param name="OutgoingValue">The outgoing value (in string format)</param>
            <param name="AddIfNew">Whether to add a new element to our master repository</param>        
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Serializable.WriteXMLData(System.String,System.Object,System.Xml.XmlTextWriter)">
            <summary>
            Write an XML snippet to the text writer
            </summary>
            <param name="Name">The name of the attribute</param>
            <param name="Value">The value of the attribute</param>
            <param name="xW">The output XML text writer</param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_TransformerWinding.Orientation">
            <summary>The orientation of the winding</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_TransformerWinding.Bounds">
            <summary>The bounds of the transformer winding</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_TransformerWinding.BaseWinding">
            <summary>The winding associated with our view</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_TransformerWinding.BaseRow">
            <summary>The data row for this line.</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_TransformerWinding.#ctor(System.Xml.XmlElement,System.Boolean,Macomber_Map.Data_Elements.MM_TransformerWinding[])">
            <summary>
            Initialize our new element
            </summary>
            <param name="xElem"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
            <param name="Windings"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node">
            <summary>
            This class holds a node's indicator
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element">
            <summary>
            This class holds the information for an individual one-line element
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawBrush">
            <summary>The drawing brush</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DescriptorRectangle">
            <summary>The rectangle in which our descriptor is rendered</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.Values">
            <summary>Our collection of values for our element</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.ParentElement">
            <summary>The parent element of a descriptor, poke point, or pricing vector</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.Image">
            <summary>The image of our element, if any</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.BaseElement">
            <summary>The base element for this one-line rendering</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.ForePen">
            <summary>The foreground color and pen width</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.TextFont">
            <summary>The font to draw text in (if applicable)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.Title">
            <summary>The title of the one-line element</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.TextPosition">
            <summary>The position (relative to the origin) of text</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.Points">
            <summary>If a polyline, etc., the series of points</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.OneLineViewer">
            <summary>The one-line viewer holding this element</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.Orientation">
            <summary>The current orientation of the element</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.ConnectedElements">
            <summary>The elements connected to the current element, if a node or bus.</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.ViolViewer">
            <summary>The violation viewer</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.Guid">
            <summary>The GUID of the element</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.xElement">
            <summary>
            The XML configuration element for this item.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.BaseRow">
            <summary>The data row for this line.</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.OtherRow">
            <summary>If a line, the data row for the other side</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.#ctor(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer)">
            <summary>
            Initialize a new one-line element from a CIM element
            </summary>
            <param name="BaseElement">The element upon which the one-line element is based</param>        
            <param name="Orientation">The orientation of the element</param>
            <param name="olView"></param>
            <param name="ViolView"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.#ctor(System.Xml.XmlElement,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer)">
            <summary>
            Initialize a new one line element
            </summary>
            <param name="xE">The XML configuration element for this one-line element</param>
            <param name="ViolViewer">The violation viewer</param>
            <param name="olView">The associated one-line viewer</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.#ctor(Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element,System.Xml.XmlElement,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer)">
            <summary>
            Initialize the descriptor
            </summary>
            <param name="ParentElement"></param>
            <param name="ElemConfig"></param>
            <param name="violViewer"></param>
            <param name="olView"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle the painting of the display
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawTransformer(System.Drawing.Graphics,Macomber_Map.Data_Elements.MM_AlarmViolation_Type)">
            <summary>
            Draw a transformer winding
            </summary>
            <param name="g"></param>                                        
            <param name="WorstViolation"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawEndCap(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            Draw an endcap
            </summary>
            <param name="g"></param>
            <param name="ForeColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.ShiftRectangle(System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Return an appropriately-shifted rectangle.
            </summary>
            <param name="InRectangle"></param>
            <param name="ShiftPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Brush)">
            <summary>
            Draw an arrow from the corner of one rectangle to a point in another
            </summary>
            <param name="g"></param>
            <param name="SourceBounds"></param>
            <param name="TargetBounds"></param>
            <param name="DrawBrush"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.BuildArrowPath(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Point@,System.Drawing.Point@)">
            <summary>
            Determine the path from element to arrow target
            </summary>
            <param name="SourceBounds"></param>
            <param name="TargetBounds"></param>
            <param name="SourcePt"></param>
            <param name="TargetPt"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.CheckSCADAMismatch(System.Single,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Determine if there's a SCADA mismatch        
            </summary>
            <param name="AnalogTolerance"></param>
            <param name="IgnoreNAN"></param>
            <param name="ShowBreaker"></param>
            <param name="ShowSwitch"></param>
            <param name="AnalogsToSearch"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawBreakerSwitchLabel(System.Drawing.Graphics)">
            <summary>
            Draw the breaker/switch label
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawBreaker(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            Draw a breaker
            </summary>
            <param name="g">Graphics connector</param>
            <param name="ThisColor">Color to draw the element</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawSwitch(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            Draw a switch
            </summary>
            <param name="g">Graphics connector</param>
            <param name="ThisColor">Color to draw the element</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawNode(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            Draw a connectivity node
            </summary>
            <param name="g"></param>
            <param name="ThisColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawPokePoint(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            Draw a poke point
            </summary>
            <param name="g"></param>
            <param name="ThisColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawPricingVector(System.Drawing.Graphics,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw a pricing vector
            </summary>
            <param name="g"></param>
            <param name="IsPositive"></param>
            <param name="DrawColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.ComputeAlignment(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.StringAlignment@,System.Drawing.StringAlignment@)">
            <summary>
            Compute the alignment between an element and its label
            </summary>
            <param name="ElementBounds"></param>
            <param name="LabelBounds"></param>
            <param name="vAlign"></param>
            <param name="hAlign"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawDescriptor(System.Drawing.Graphics)">
            <summary>
            Draw a descriptor or secondary descriptor
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawCapacitor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw a capactior
            </summary>
            <param name="g"></param>
            <param name="ThisColor"></param>
            <param name="Bounds"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawReactor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw a reactor
            </summary>
            <param name="g"></param>
            <param name="Bounds"></param>
            <param name="ThisColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawResistor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw a resistor
            </summary>
            <param name="g"></param>
            <param name="Bounds"></param>
            <param name="DrawColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawResistorCapacitor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw a resistor/reactor hybrid
            </summary>
            <param name="g"></param>
            <param name="Bounds"></param>
            <param name="DrawColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawResistorReactor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw a resistor/reactor hybrid
            </summary>
            <param name="g"></param>
            <param name="Bounds"></param>
            <param name="DrawColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawStaticVarCompensator(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            Draw a static var compensator
            </summary>
            <param name="g"></param>
            <param name="ForeColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawUnit(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            Draw a unit
            </summary>
            <param name="g"></param>
            <param name="ThisColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.IntToPoints(System.Int32[])">
            <summary>
            Convert a series of integers into a series of points
            </summary>
            <param name="Points"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawLine(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            Draw a line graphic and text on the screen
            </summary>
            <param name="g"></param>
            <param name="ThisColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.SetNumericValue(System.Windows.Forms.Control,Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.TelemComparer,System.String)">
            <summary>
            Set the appropriately-arrowed flow direction
            </summary>
            <param name="inValue">The numeric value</param>
            <param name="FlowCharacters">The two characters used for flow (out then in)</param>
            <param name="OutText">The text box to be written to</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.CheckTelemetry(System.String[],System.String,System.Data.DataRow)">
            <summary>
            Pull in the specified telemetry. If none is available, return NAN. If SCADA is available, compare it.
            </summary>
            <param name="splStr">The data lookups</param>
            <param name="SourceCol">The source column name</param>
            <param name="BaseRow">The line's current station telemetry</param>                
            <returns>Whether this telemetry differs from SCADA</returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.PercentageDiff(System.Single,System.Single)">
            <summary>
            Returns true if the two values are sufficiently different
            </summary>
            <param name="Val1">The first value</param>
            <param name="Val2">The second value</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.BuildPoints(System.Int32[])">
            <summary>
            Build a series of points, in the format (x,y,x,y,x,y)
            </summary>
            <param name="inNumbers">The collection of numbers</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawLaaR(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            Draw a LaaR
            </summary>
            <param name="g"></param>
            <param name="DrawColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DrawLoad(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            Draw a load
            </summary>
            <param name="g"></param>
            <param name="ThisColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.HandleFloat(System.Object)">
            <summary>
            Return an appropriately-formatted float
            </summary>
            <param name="InValue"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.TryFindVal(System.String,System.Object@)">
            <summary>
            Attempt to find a value in our table
            </summary>
            <param name="ColumnName"></param>
            <param name="Result"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.OrientArrow(System.Single,Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations,System.Boolean)">
            <summary>
            Return a string corresponding to an orientation
            </summary>
            <param name="InVal"></param>
            <param name="ParentOrientation"></param>
            <param name="IsInDirection"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.AssignValues(System.String,System.Type)">
            <summary>
            Pull out an object's information by XML, and return the appropriate response
            </summary>
            <param name="XmlText"></param>
            <param name="OutType"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.ToString">
            <summary>
            Return some information on the element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.OnFrameChanged(System.Object,System.EventArgs)">
            <summary>
            Update a frame change
            </summary>
            <param name="o"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.OnClick(System.EventArgs)">
            <summary>
            When the user clicks on an element, let's refresh it, just to be sure.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.CenterRect(System.Drawing.Rectangle)">
            <summary>
            Return the center point of a rectangle
            </summary>
            <param name="Rect"></param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.CenterFormat">
            <summary>The string format that makes text centered</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.TEID">
            <summary>The TEID of this item</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.KVLevel">
            <summary>
            Retrieve the KV level of the element
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.ElemType">
            <summary>The element type</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DescriptorArrow">
            <summary>
            Whether an arrow should be drawn from descriptor to this element
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.Descriptor">
            <summary>The descriptor label associated with the element</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.SecondaryDescriptor">
            <summary>The descriptor label associated with the element</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.DescriptorText">
            <summary>
            Retrieve the image text for the item
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.Center">
            <summary>
            Return the center of the item
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes">
            <summary>
            The collection of element types
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.None">
            <summary>No elements</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Image">
            <summary>An image</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Transformer">
            <summary>A transformer</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Descriptor">
            <summary>A primary descriptor</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.SecondaryDescriptor">
            <summary>A secondary descriptor (resource node name)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Breaker">
            <summary>A circuit breaker</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Switch">
            <summary>A disconnector</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Unit">
            <summary>A generating unit</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Line">
            <summary>A transmission line</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Reactor">
            <summary>A reactor</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Load">
            <summary>A reactor</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.LAAR">
            <summary>A load acting as a resource (LaaR)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.EndCap">
            <summary>An end cap</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Capacitor">
            <summary>A capacitor</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.StaticVarCompensator">
            <summary>A static var compensator</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Node">
            <summary>A node</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.PokePoint">
            <summary>A poke point</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.PricingVector">
            <summary>A pricing vector</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Label">
            <summary>A static label</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Circle">
            <summary>A circle with no element linkage</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Rectangle">
            <summary>A rectangle</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.Resistor">
            <summary>A resistor</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.ResistorReactor">
            <summary>A component with resistance and reactance</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.ResistorCapacitor">
            <summary>A component with resistance and capacitance</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumElemTypes.ArrowLine">
            <summary>A line with an arrow</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations">
            <summary>
            The collection of orientations possible for an element
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations.Unknown">
            <summary>Type unknown</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations.Horizontal">
            <summary>Facing horizontally</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations.Vertical">
            <summary>Facing vertically</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations.Up">
            <summary>Facing up</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations.Down">
            <summary>Facing down</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations.Left">
            <summary>Facing left</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations.Right">
            <summary>Facing right</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations.Node">
            <summary>A node (no direction)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations.Bus">
            <summary>A bus (direction determined by its points)</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.TelemComparer">
            <summary>
            This structure returns a floating-point value and a flag as to whether it's significantly different from SCADA.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.TelemComparer.Value">
            <summary>The value retrieved from the table</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.TelemComparer.Diff">
            <summary>Whether the value is different</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.TelemComparer.#ctor(System.Single,System.Boolean)">
            <summary>
            Instantiate a new telemetry/estimated value
            </summary>
            <param name="Value">The incoming value</param>
            <param name="Diff">Whether the value is different from SCADA</param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node._ConnectionPoints">
            <summary>The collection of elements and our sub-points to which they're connected</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node._GraphicsPaths">
            <summary>The graphics path for a series of points</summary>        
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node._ResourceNode">
            <summary>
            The resource node name, if any
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node._BusbarSection">
            <summary>The TEID for the busbar section component, if any</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node.BaseNode">
            <summary>The node to which the node is connected</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node.#ctor(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer)">
            <summary>
            Initialize a new node
            </summary>
            <param name="BaseNode"></param>
            <param name="Orientation"></param>
            <param name="olView"></param>
            <param name="ViolView"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node.#ctor(System.Xml.XmlElement,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer)">
            <summary>
            Initialize a new node
            </summary>
            <param name="xE"></param>
            <param name="violViewer"></param>
            <param name="olView"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node.RebuildPaths(System.Drawing.Point)">
            <summary>
            Rebuild the graphics paths for the elements
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node.GetStraightLine(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point@,System.Drawing.Point@,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a straight line
            </summary>
            <param name="FromRect"></param>
            <param name="ToRect"></param>
            <param name="Center1"></param>
            <param name="Center2"></param>
            <param name="MaintainCenter1"></param>
            <param name="MaintainCenter2"></param>
            <param name="OffsetPoint"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node.OffsetRectangle(System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Offset a rectangle by a set point
            </summary>
            <param name="InRect">The original rectangle</param>
            <param name="OffsetPoint">The offset point</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node.DrawConnectingLines(System.Drawing.Graphics)">
            <summary>
            Draw connecting lines between this node and its other components
            </summary>
            <param name="g">The graphics connector</param>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node.ConnectionPoints">
            <summary>The collection of elements and our sub-points to which they're connected</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node.GraphicsPaths">
            <summary>The graphics path for a series of points</summary>        
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node.ResourceNode">
            <summary>
            The name of the resource node
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node.BusbarSection">
            <summary>The TEID for the busbar section component, if any</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Island_View">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc.
            This class provides a view into our collection of islands
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Form">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D., Electrical Reliability Council of Texas, Inc. All Rights Reserved.
            This class provides a generic form 
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Form.WM_SYSCOMMAND">
            Define our Constants we will use
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Form.#ctor">
            <summary>
            Initialize a new form.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Form.SafeActivate">
            <summary>
            Safely activate a new window
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Form.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Handle a message
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Form.CompareTo(Macomber_Map.User_Interface_Components.MM_Form)">
            <summary>
            Compare two MM Forms
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Form.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Form.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Form.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.MM_Form.Title">
            <summary>The title of the application</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Island_View.MainMap">
            <summary>Our main network map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Island_View.IslandMaps">
            <summary>Our collection of islands</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Island_View.IslandUpdater">
            <summary>The thread for updating island information</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Island_View.#ctor(Macomber_Map.User_Interface_Components.NetworkMap.Network_Map)">
            <summary>
            Initialize our island view
            </summary>
            <param name="MainMap"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Island_View.UpdateIsland(System.Object)">
            <summary>
            Update our island information
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Island_View.GenerateMap(Macomber_Map.Data_Elements.MM_Island)">
            <summary>
            Generate a new map
            </summary>
            <param name="Island"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Island_View.RemoveMiniMap(Macomber_Map.User_Interface_Components.Mini_Map)">
            <summary>
            Remove a mini-map control
            </summary>
            <param name="MapToRemove"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Island_View.tmrUpdate_Tick(System.Object,System.EventArgs)">
            <summary>
            When our timer kicks off, make sure everything shows up/is refreshed        
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Island_View.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Handle the closing of the form (to hide instead of shut down)
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Island_View.OnSizeChanged(System.EventArgs)">
            <summary>
            Go through our collection of mini-maps, and update the sizes as appropriate
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Island_View.MM_Island_View_VisibleChanged(System.Object,System.EventArgs)">
            <summary>
            When display becomes visiable ensure that size is proper, otherwise, 
            screen calls while not visible will not repost properly as we never destroy this window,
            only hide it when not wanted.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Island_View.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Island_View.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Island_View.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Macomber_Map.MacomberMap">
            <summary>
            This is the main UI for the Macomber Map system
            </summary>
        </member>
        <member name="F:Macomber_Map.MacomberMap.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.MacomberMap.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.MacomberMap.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.MacomberMap.ctlNetworkMap">
            <summary>Our network map</summary>
        </member>
        <member name="F:Macomber_Map.MacomberMap.ctlMiniMap">
            <summary>Our mini-map</summary>
        </member>
        <member name="F:Macomber_Map.MacomberMap.ctlViolationViewer">
            <summary>Our violation viewer</summary>
        </member>
        <member name="F:Macomber_Map.MacomberMap.ctlKeyIndicators">
            <summary>Our key indicators</summary>
        </member>
        <member name="F:Macomber_Map.MacomberMap.ViolationsShowing">
            <summary>Whether the violations are currently being shown</summary>
        </member>
        <member name="F:Macomber_Map.MacomberMap.Starter">
            <summary>Our startup form</summary>
        </member>
        <member name="F:Macomber_Map.MacomberMap.ViolationForm">
            <summary>Our hidden form for showing violations</summary>
        </member>
        <member name="F:Macomber_Map.MacomberMap.ResultsHelper">
            <summary>Our search results helper</summary>
        </member>
        <member name="M:Macomber_Map.MacomberMap.InitNetworkMap(Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            Initialize the network map
            </summary>        
            <param name="Coordinates">The coordinates to be used for the map</param>
        </member>
        <member name="M:Macomber_Map.MacomberMap.ViolationForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Abort the X button on our form, hide instead
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.MacomberMap.SwitchMMView(System.Boolean,System.Boolean)">
            <summary>
            Switch the MM view to the intended view
            </summary>
            <param name="ShowViolations"></param>
            <param name="ViolationsInSeparateWindow"></param>
        </member>
        <member name="M:Macomber_Map.MacomberMap.#ctor(Macomber_Map.Data_Elements.MM_Coordinates,Macomber_Map.User_Interface_Components.Startup_Form)">
            <summary>
            Initialize the Macomber Map
            </summary>
            <param name="Coordinates">The coordinates to be used in the map</param>
            <param name="Starter">Our startup form</param>
        </member>
        <member name="M:Macomber_Map.MacomberMap.ResizeLeftSlider(System.Object,System.EventArgs)">
            <summary>Resize the violations and overview map size</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.MacomberMap.MacomberMap_Resize(System.Object,System.EventArgs)">
            <summary>
            Handle the resizing of the main window display
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.MacomberMap.ResetNetworkMap">
            <summary>
            Reset the network map
            </summary>
        </member>
        <member name="M:Macomber_Map.MacomberMap.ShutdownNetworkMap">
            <summary>
            Close the network map component
            </summary>
        </member>
        <member name="M:Macomber_Map.MacomberMap.OnShown(System.EventArgs)">
            <summary>
            When the Macomber Map is first shown, flip our integration flag that initialization is complete.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.MacomberMap.OnResizeBegin(System.EventArgs)">
            <summary>
            Stop the network map from constantly resizing when the control is still being resized
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.MacomberMap.OnResizeEnd(System.EventArgs)">
            <summary>
            Return the network map to standard operating
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.MacomberMap.MacomberMap_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            When the user proceeds to shut down the form, automatically kill the process
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Display">
            <summary>
            The parameters for the overall display
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Display.BlackstartDim(System.Drawing.Color)">
            <summary>
            Return a blackstart dimming color
            </summary>
            <param name="InColor"></param>
            <returns></returns>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display._DisplayCompany">
            <summary>The company to display, if any</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Display.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Load the overall display parameters for the Macomber Map
            </summary>
            <param name="ElementSource">The XML source for our elements</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.MultipleLineWidthAddition">
            <summary>
            Whether lines should be grouped voltage level, and then in/out
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.GroupLinesByVoltage">
            <summary>
            Whether lines should be grouped voltage level, and then in/out
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.StationZoomLevel">
            <summary>
            The zoom level one wants to be at when zeroing in on a substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.SplitBusesByVoltage">
            <summary>
            Whether buses should be split by voltage level
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.SystemValueCount">
            <summary>
            The number of points to be displayed on the graph
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.NetworkMapFont">
            <summary>
            The font for text on the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.KeyIndicatorLabelFont">
            <summary>
            The font for the label on a key indicator
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.KeyIndicatorValueFont">
            <summary>
            The font for the value on a key indicator
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.KeyIndicatorSimpleFont">
            <summary>
            The simple font for a key indicator (used for measurements)
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.SmoothingMode">
            <summary>
            The smoothing mode
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.CompositingQuality">
            <summary>
            The compositing quality
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.TextRenderingHint">
            <summary>
            The text rendering hint
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.TextContrast">
            <summary>
            The text contrast
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.PixelOffsetMode">
            <summary>
            The pixel offset mode
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.InterpolationMode">
            <summary>
            The interpolation mode
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.CompositingMode">
            <summary>
            The compositing mode
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.ContourThreshold">
            <summary>
            The threshold (above/below mean) needed for the contour to be shown
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.ContourBrightness">
            <summary>
            The brightness for the contour
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.Contour">
            <summary>
            The contour (by county) to be shown
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.FlowInterval">
            <summary>
            The interval at which the network flow arrows
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.UseLongNames">
            <summary>
            Whether the long names should be used for substations (e.g., West Batesville vs. w_batesv)
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.Name">
            <summary>
            Return the name of the element
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.FPS">
            <summary>
            Whether the number of frames per second should be displayed in the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.DisplayCounties">
            <summary>
            Whether counties should be displayed in the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.DisplayStateBorder">
            <summary>
            Whether counties should be displayed in the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.StationNames">
            <summary>
            The zoom level at which the substation names become visible
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.StationMW">
            <summary>
            The zoom level at which the substation MWs (generation and/or load) become visible
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.LineFlows">
            <summary>
            The zoom level at which the line flow graphics become visible
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.LineText">
            <summary>
            The zoom level at which the line flow text becomes visible
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.EnergizationThreshold">
            <summary>
            The MVA value at which an element is seen as energized
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.BlackstartMode">
            <summary>
            The blackstart mode of the main map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.BlackstartDimmingFactor">
            <summary>
            The percentage (0-100) of full color a color is dimmed for non-blackstart elements.
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.BackgroundColor">
            <summary>
            The background color for the map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.ForegroundColor">
            <summary>
            The foreground color for the map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.WarningColor">
            <summary>
            The Warning color for the map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.WarningBackground">
            <summary>
            The Warning background color for the map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.ErrorColor">
            <summary>
            The Error color for the map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.ErrorBackground">
            <summary>
            The Error background color for the map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.NormalColor">
            <summary>
            The Normal color for the map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.NormalBackground">
            <summary>
            The Normal background color for the map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.HighValue">
            <summary>
            The color to be used for above-average values
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.MapTransparency">
            <summary>
            Our map transparency level
            </summary>
        </member>
        <member name="E:Macomber_Map.Data_Elements.MM_Display.MapTransparencyChanged">
            <summary>
            Our event handler for the map transparency changing
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.MapTileSize">
            <summary>The size of our map tile</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.LowValue">
            <summary>
            The color to be used for below-average values
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.MapTiles">
            <summary>Whether map tiles should be displayed</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.MapTileCache">
            <summary>The path where map tiles should be cached (leave blank for no cacheing)</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display.DisplayCompany">
            <summary>The company to display</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Display.MM_Contour_Enum">
            <summary>
            The collection of contours available
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.MM_Contour_Enum.BusVoltage">
            <summary>Show bus voltages</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.MM_Contour_Enum.BusAngle">
            <summary>Show standard deviation of bus angle</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.MM_Contour_Enum.LMPMaximum">
            <summary>Show maximum locational market prices</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.MM_Contour_Enum.LMPAverage">
            <summary>Show average locational market prices</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.MM_Contour_Enum.LMPStdDev">
            <summary>Show standard deviation of locational market prices</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.MM_Contour_Enum.LMPMinimum">
            <summary>Show minimium locational market prices</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.MM_Contour_Enum.WeatherZones">
            <summary>The weather zones</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.MM_Contour_Enum.LoadZones">
            <summary>The load zones</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.MM_Contour_Enum.None">
            <summary>No contours</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Display.enumBlackstartMode">
            <summary>Our collection of blackstart modes</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.enumBlackstartMode.ShowAll">
            <summary>Show all elements</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.enumBlackstartMode.DimNonBlackstartElements">
            <summary>Dim non-blackstar elements</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.enumBlackstartMode.HideNonBlackstartElements">
            <summary>Hide non-blackstart elements</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.enumBlackstartMode.DimNonOperatorElements">
            <summary>Dim non-blackstar elements</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display.enumBlackstartMode.HideNonOperatorElements">
            <summary>Hide non-blackstart elements</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Electrical_Bus">
            <summary>
            This class contains information on an electrical bus
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Element">
            <summary>
            This is the generic class for all CIM elements, which can be referenced by TEID. Every element can have violations.
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.TEID">
            <summary>
            The TEID of the element
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.Mismatches">
            <summary>
            Our collection of mismatches, so we don't keep on flagging the user
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.Name">
            <summary>The name of the element</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.Owner">
            <summary>The owner of the company</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.Operator">
            <summary>The operator of the company</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.Contingencies">
            <summary>The name of the contingencies/breaker-to-breakers associated with the element</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.ElemType">
            <summary>The type of element this is</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.UnknownElements">
            <summary>Our collection of unknown elements that need to be adjusted</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.BusNumber">
            <summary>The bus number associated with the element</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.KVLevel">
            <summary>The KV level of the element</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.Substation">
            <summary>The substation in which the element resides (null for lines and substations)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.MenuDeactivatedColor">
            <summary>The color for a non-active menu item</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.RASs">
            <summary>The remedial action schemes associated with the element</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element.PUNElement">
            <summary>Whether the element is inside a PUN</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.#ctor">
            <summary>
            Parameter-free constructor
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM element based on an XML element
            </summary>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
            <param name="ElementSource">The XML element containing the TEID, name, owner and operator for the element in question</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new CIM element based on a data reader element
            </summary>
            <param name="ElementSource">The data reader containing the TEID, name, owner and operator for the element in question</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.MenuDescription">
            <summary>
            Return a menu one-line description for this element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.ElementDescription">
            <summary>
            Return a  description for this element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.WorstViolation(Macomber_Map.Data_Elements.MM_AlarmViolation_Type)">
            <summary>
            Determine the worst violation for an element, against the tally of the worst and the current
            </summary>
            <param name="CurrentViolation"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.ToString">
            <summary>
            Override the ToString function, so that the data tables are sorting by TEID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.WorstVisibleViolation(System.Collections.Generic.Dictionary{Macomber_Map.Data_Elements.MM_AlarmViolation,System.Windows.Forms.ListViewItem},System.Object)">
            <summary>
            Determine the worst violation type within the substation
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.FindNotes">
            <summary>
            Determine the available notes for our element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.CompareTo(System.Object)">
            <summary>
            Handle comparing the two elements
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.TriggerValueChange">
            <summary>
            Trigger the value change event
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.CreateElement(System.Int32,System.Type,System.Boolean,Macomber_Map.Data_Elements.MM_Element,System.Reflection.MemberInfo)">
            <summary>
            Create a new element
            </summary>
            <param name="TEID"></param>
            <param name="ElemType"></param>
            <param name="AddIfNew"></param>
             <param name="BaseElement"></param>
             <param name="mI"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.CreateElement(System.Int32,MM_Communication.Elements.MM_Element.enumElementType,System.Boolean)">
            <summary>
            Create a new element
            </summary>
            <param name="TEID"></param>
            <param name="ElemType"></param>
            <param name="AddIfNew"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.ReplaceElement(System.Int32,MM_Communication.Elements.MM_Element.enumElementType,System.Boolean,Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Replace instances of one element with another.
            </summary>
            <param name="TEID"></param>
            <param name="ElemType"></param>
            <param name="AddIfNew"></param>
            <param name="FoundElem"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.ProcessValue(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.Data_Connections.MM_Server.MM_Server_ValueUpdate)">
            <summary>
            Process a value, inserting it into our element
            </summary>
            <param name="Elem"></param>
            <param name="ValueUpdate"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element.CreateElement(System.Xml.XmlElement,System.String,System.Boolean)">
            <summary>
            Create a new element based on its definition
            </summary>
            <param name="xElem">The definition for the element</param>
            <param name="Prefix">The prefix for the element, if any</param>
            <param name="AddIfNew">Whether to add a new element to our master repository</param>        
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Element.Bus">
            <summary>
            Report the bus associated with our element, if we can
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Element.Island">
            <summary>Report the unit's island</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Element.Violations">
            <summary>
            The collection of violations occuring within the element
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Element.Notes">
            <summary>
            The collection of notes occuring within the element
            </summary>
        </member>
        <member name="E:Macomber_Map.Data_Elements.MM_Element.ValuesChanged">
            <summary>Report a line's measurement change </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Element.WorstViolationOverall">
            <summary>
            Return the worst violation overall, regardless of its visibility
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Element.WorstViolationImage">
            <summary>
            Retrieve the image corresponding to the worst violation type
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Element.Permitted">
            <summary>
            Whether this substation can be displayed, given its permission levels
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Element.ValuesChangedDelegate">
            <summary>
            Report a value change in the element, leading to its being recomputed
            </summary>
            <param name="Element">The changed element</param>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Electrical_Bus.AssociatedNode">
            <summary>The node with which the EB is associated</summary>    
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Electrical_Bus.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM Electrical Bus
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Electrical_Bus.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new CIM Substation
            </summary>
            <param name="ElementSource">The data source for this substation</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Electrical_Bus.#ctor">
            <summary>
            Initialize a blank electrical bus
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Connectivity_Viewer">
            <summary>
            This class displays the connectivity between various elements from within CIM
            (aka CIM Browser)
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Connectivity_Viewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Connectivity_Viewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Connectivity_Viewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Connectivity_Viewer.#ctor">
            <summary>
            Initialize the connectivity viewer
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Converter">
            <summary>
            This class is responsible for performing core conversions
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Converter.ToSingle(System.Object)">
            <summary>
            Retrieve a single-precision number, first checking for NaN
            </summary>
            <param name="Incoming">The incoming value</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Converter.ToInt32(System.Object,System.Int32@)">
            <summary>
            Convert an object to a Int32 (needed for TEIDs) if possible
            </summary>
            <param name="InValue">Our incoming value</param>
            <param name="OutVal">Our outgoing value</param>
            <returns>Whether the import was succesful</returns>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Communication_Linkage">
            <summary>
            This class holds the communication links between the EMS systems
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Communication_Linkage.Name">
            <summary>The name of the linkage</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Communication_Linkage.Good">
            <summary>Our good value</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Communication_Linkage.SDIS">
            <summary>Our SDIS value</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Communication_Linkage.ConnectionState">
            <summary>The connection state of the linkage</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Communication_Linkage.Group">
            <summary>The group of the ICCP link</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Communication_Linkage.SCADAName">
            <summary>The name for the comm link from SCADA</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Communication_Linkage.CommStatus">
            <summary>The associated value with the link</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Communication_Linkage.Critical">
            <summary>Whether this link is considered a critical one.</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Communication_Linkage.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initialize a new communications linkage
            </summary>
            <param name="Name">The name of the communication linkage</param>
            <param name="Group">The group to which the comm link is assigned</param>
            <param name="Good">Whether the communications linkage is good or not</param>
            <param name="SDIS">Whether the communications linkage is active</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Communication_Linkage.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new communications linkage
            </summary>
            <param name="ElementSource">The XML element source</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Communication_Linkage.SetStatus(System.Boolean,System.Boolean)">
            <summary>
            Set the status of our ICCP link
            </summary>
            <param name="Good">Whether the link is good</param>
            <param name="SDIS">Whether the link is active</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Communication_Linkage.UpdateStatus(System.Int32@)">
            <summary>
            Update the status of our communications item
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Communication_Linkage.ConnectionStateEnum">
            <summary>The collection of possible connection states</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Communication_Linkage.ConnectionStateEnum.Unknown">
            <summary>Unknown state</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Communication_Linkage.ConnectionStateEnum.Bad">
            <summary>Bad state</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Communication_Linkage.ConnectionStateEnum.Good">
            <summary>Good state</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.Training.MM_Level">
            <summary>
            This class holds information on a level
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Level.ID">
            <summary>The ID of our level</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Level.xConfig">
            <summary>The XML configuration of our element</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Level.Substations">
            <summary>The collection of substations that can be selected from</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Level.#ctor(System.Data.Common.DbDataReader)">
            <summary>
            Initialize a new level
            </summary>
            <param name="dRd"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Level.#ctor(System.Xml.XmlElement)">
            <summary>
            Initialize a new level
            </summary>
            <param name="xElem">The XML configuration for our level</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Level.DeSerialize">
            <summary>
            Deserialize our component off XML.
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Level.#ctor">
            <summary>
            Initialize a new empty level 
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.Title">
            <summary>The title of the level</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.PointsByDistance">
            <summary>The collection of radiuses and their associated points</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.ExitThresholdScore">
            <summary>The point threshold to exit the level succesfully</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.FailureThreshold">
            <summary>The point threshold after which the # of questions has been exceeded and failed</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.NumberOfQuestions">
            <summary>The number of questions the user is presented with before the failure threshold is checked</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.QuestionTimeout">
            <summary>The number of seconds after which the question is considered timed out</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.WaitBetweenQuestions">
            <summary>The number of seconds after which the question is considered timed out</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.AllowZoom">
            <summary>Whether the user is allowed to zoom at this level</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.TopLeftLatLong">
            <summary>The top left lat/long</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.BottomRightLatLong">
            <summary>The bottom right lat/long</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.InstructionText">
            <summary>The instructions that will be presented to the user (in HTML)</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.County">
            <summary>The county to restrict to</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.KVLevel">
            <summary>The KV level to restrict to</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.ElemType">
            <summary>The element type to restrict to</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.QuestionFormat">
            <summary>The format of the question being asked (to use string.format)</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Level.BooleanToCheck">
            <summary>The boolean that should checked, and included if true</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Property_Page">
            <summary>
            The property page displays detailed information about a particular element (line, unit, load, breaker, switch, etc.)
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Property_Page.Element">
            <summary>The element whose information should be displayed in the property page</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Property_Page.DefaultStyle">
            <summary>The default style for the listview</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Property_Page.RightClickMenu">
            <summary>The right-click item handler</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Property_Page.nMap">
            <summary>The network map associated with the large display (for zooming/panning the map on right-click</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Property_Page.violView">
            <summary>The violation viewer associated with this display</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Property_Page.miniMap">
            <summary>The mini-map associated with this display</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Property_Page.#ctor(Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.Mini_Map)">
            <summary>
            Create a new property page
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Property_Page.#ctor(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Create a new property page
            </summary>
            <param name="Element">The element in question</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Property_Page.DetermineDefaultStyle">
            <summary>
            Go through all our display styles, and add those ones that are set to our collection
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Property_Page.SetElement(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Assign a new element to the property page
            </summary>
            <param name="Element"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Property_Page.OnSelected(System.Windows.Forms.TabControlEventArgs)">
            <summary>
            Handle the changing of the tab page to handle the orientation switch
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Property_Page.AddValue(System.String,System.Object,System.Windows.Forms.TreeNodeCollection,Macomber_Map.Data_Elements.MM_AlarmViolation_Type@)">
            <summary>
            Add a value to our elements
            </summary>
            <param name="Title"></param>
            <param name="OutObj"></param>
            <param name="Nodes"></param>
            <param name="OutViolation"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Property_Page.GetName(System.Object)">
            <summary>
            Return the name for an object
            </summary>
            <param name="inObj"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Property_Page.NewView_NodeMouseClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <summary>
            Handle a node mouse click event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Property_Page.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Check to see when the tab page changes, in order to refresh the data
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Property_Page.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw the background of the image to a black color
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation">
            <summary>
            This class holds all of the relevant information on a substation
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.Visible">
            <summary>Whether or not the object is visible on the screen</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.ConnectorVisible">
            <summary>Whether something connecting to this line is visible</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.ViolationVisible">
            <summary>Whether the substation is visible due to a violation</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.GenStnIsDiamond">
            <summary>Whether stations with units should be shown as diamonds, not squares.</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.SubstationCenter">
            <summary>The center of the substation</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.StandardDisplayParameter">
            <summary>The standard display parameter for the element</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.AlternateDisplayParameter">
            <summary>The worst violation display parameter</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.SubstationImageName">
            <summary>The image for rendering the substation</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.SubstationImageFull">
            <summary>The image for rendering the substation</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.SubstationTextName">
            <summary>The name-only text to be drawn for the substation</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.SubstationTextFull">
            <summary>The full text to be drawn for the substation</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.OwnerForm">
            <summary>The network map owning this substation</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.AutoTransformers">
            <summary>The collection of auto-transformers</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.#ctor(Macomber_Map.Data_Elements.MM_Coordinates,Macomber_Map.Data_Elements.MM_Substation,System.Collections.Generic.Dictionary{Macomber_Map.Data_Elements.MM_AlarmViolation,System.Windows.Forms.ListViewItem},Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI)">
            <summary>
            Compute the parameters for drawing the substation
            </summary>
            <param name="Coordinates">Our system coordinates</param>
            <param name="Sub">The actual substation</param>
            <param name="ShownViolations">Our collection of shown violations</param>
            <param name="CallingObject">Our calling object</param>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.Sub_ValuesChanged(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Handle the value changes for a substation
            </summary>
            <param name="Element"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.ComputeSubstation(Macomber_Map.Data_Elements.MM_Coordinates,Macomber_Map.Data_Elements.MM_Substation,System.Collections.Generic.Dictionary{Macomber_Map.Data_Elements.MM_AlarmViolation,System.Windows.Forms.ListViewItem},Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI,System.Boolean)">
            <summary>
            Compute the parameters for drawing the substation
            </summary>
            <param name="Coordinates">Our system coordinates</param>
            <param name="Sub">The actual substation</param>
            <param name="ShownViolations">Our collection of shown violations</param>
            <param name="CallingForm">Our calling object</param>        
            <param name="RedrawText">Whether the text should be redrawn</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.CreateBitmap(System.String,System.Drawing.Font,System.Drawing.Graphics)">
            <summary>
            Create a new bitmap with the specified text
            </summary>
            <param name="TextToDraw">The text to draw</param>
            <param name="TextFont">The font to draw with</param>
            <param name="BaseGraphics">The base graphics (for string measurement)</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.RelativeColor(System.Single)">
            <summary>
            Return a color corresponding to the value (0 is average)
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.DrawSubstation(Macomber_Map.Data_Elements.MM_Substation,Macomber_Map.Data_Elements.MM_Coordinates,System.Drawing.Graphics,System.Collections.Generic.Dictionary{Macomber_Map.Data_Elements.MM_AlarmViolation,System.Windows.Forms.ListViewItem},Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI,System.Boolean)">
            <summary>
            Draw the substation
            </summary>
            <param name="Substation">The substation upon which the image is based</param>
            <param name="Coordinates">The current coordinates</param>
            <param name="g">The graphics connector</param>
            <param name="ShownViolations">The collection of shown violations</param>
            <param name="CallingForm">The network map calling the line</param>
            <param name="DisplayAlternate">Display the alternate view if blinking on standard</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.HitTest(System.Drawing.Point,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Test whether a clicked point is over a substation
            </summary>
            <param name="ClickedPoint">The point clicked by the user</param>
            <param name="UseAlternateIfAvailable">Whether or not to use the alternate display means</param>        
            <param name="BaseSize">The base multiplier (when width =1)</param>        
            <param name="HasGen">Whether this subsatation has a unit</param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation.OutagedTransformer">
            <summary>
            Determine if an auto-transformer is outaged.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope">
            <summary>
            This class presnts a synchroscope form 
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.TMax">
            <summary>Number of time slots</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.State">
            <summary>The state of our synchroscope</summary>        
            <remarks>
            1 - Same Island
            2 - Different Island
            3 - Data Missing (Near)
            4 - Data Missing (Far)
            5 - Data Missing (Both)
            6 - Unit Offline, GCP Near Side
            7 - Unit Offline, GCP Far Side
            </remarks>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.ControlPanel">
            <summary>The control panel associated with our display</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.SourceElement">
            <summary>The element associated with the control panel</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.#ctor(Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element,System.Xml.XmlElement,System.String,Macomber_Map.Data_Connections.Generic.MM_Data_Source,Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel)">
            <summary>
            Initialize a new synchroscope displays
            </summary>
            <param name="Breaker">The breaker to be displayed</param>
            <param name="SourceApplication"></param>
            <param name="xConfig"></param>
            <param name="DataSource"></param>
            <param name="ControlPanel"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.Synchroscope_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paint the synchroscope
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.Offset(System.Single,System.Single)">
            <summary>
            Offset a point against angle/radius
            </summary>
            <param name="Radius"></param>
            <param name="Angle"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.CalculatePhase(System.Single,System.Single)">
            <summary>
            Calculate the phase angle based on the current phase, frequency and dt
            </summary>
            <param name="Phase"></param>
            <param name="Frequency"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.Modd(System.Single,System.Single)">
            <summary>
            Perform the mod function while allowing for decimal values
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.WriteText(System.Drawing.Graphics,System.Single,System.Single,System.String)">
            <summary>
            Write a text label
            </summary>
            <param name="g"></param>
            <param name="Radius"></param>
            <param name="Angle"></param>
            <param name="Text"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.LabelCB_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle the painting of the breaker
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.tmrUpdate_Tick(System.Object,System.EventArgs)">
            <summary>
            Handle the timer tick   
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.cmbDataSource_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            When the data source changes, refresh.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.DataUpdated">
            <summary>
            Refresh our data, update our synchroscope. This carries out the 'Sync' function in the original EMS display
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.enumSynchroscopeState">
            <summary>The collection of states of the synchroscope</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.enumSynchroscopeState.Unknown">
            <summary>State is not yet known/initialized</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.enumSynchroscopeState.SameIsland">
            <summary>The nodes of the breaker are on the same island</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.enumSynchroscopeState.DifferentIsland">
            <summary>The nodes of the breaker are on different islands</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.enumSynchroscopeState.DataMissingNear">
            <summary>Data is missing from the near node side</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.enumSynchroscopeState.DataMissingFar">
            <summary>Data is missing from the far node side</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.enumSynchroscopeState.DataMissingBoth">
            <summary>Data is missing from the both sides</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.enumSynchroscopeState.NearUnitOffline">
            <summary>The unit on the near node side is offline</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Synchroscope.enumSynchroscopeState.FarUnitOffline">
            <summary>The unit on the far node side is offline</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Game">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc.
            This form offers the user a situation-awareness enhancing game
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Game.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Game.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Game.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Game.CorrectQuestions">
            <summary>The number of questions answered correctly</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Game.TotalQuestions">
            <summary>The total number of questions asked</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Game.IsAnswered">
            <summary>Whether the user answered the questions</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Game.RightClickMenu">
            <summary>The right click menu for the game</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Game.NetworkMap">
            <summary>The network map to handle mouse movements</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Game.#ctor(Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI)">
            <summary>
            Initialize a new game form
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Game.Answer_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Highlight our rectangle when the user moves the mouse into it
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Game.Answer_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Remove our rectangle's highlight when the mouse leaves it.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Game.AskNextQuestion">
            <summary>
            Ask our next question
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Game.AnswerQuestion(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Answer our question
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Game.tmrQuestion_Tick(System.Object,System.EventArgs)">
            <summary>
            Handle a question being shown
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Excel_Exporter">
            <summary>
            This class provides a user interface for exporting to Excel
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.pbToExcel">
            <summary>
            The progress bar showing Excel loading
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.ExportThread">
            <summary>The thread to be used for data export</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.OutSet">
            <summary>The data set to be exported</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.FileName">
            <summary>The output file name</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.CurrentRow">
            <summary>Tracking of the current row</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.UpdateTimer">
            <summary>The update timer</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.#ctor(System.Data.DataSet,System.String)">
            <summary>
            Create a new Excel exporter window
            </summary>
            <param name="OutSet">The outgoing data set</param>
            <param name="FileName">The outgoing filename</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.OnShown(System.EventArgs)">
            <summary>
            When the progress bar is shown, kick off the process.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.UpdateTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handle the timer tick
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Excel_Exporter.CompleteExcelExport">
            <summary>
            This is the full export function.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.About_Form.AboutText">
            <summary>Our text for our about field</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.About_Form.YOffset">
            <summary>How many pixels to offset Y</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.About_Form.YStep">
            <summary>The number of pixels to step every timer tick</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.About_Form.tmrInterval">
            <summary>The number of ms between ticks</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.About_Form.AboutTextSize">
            <summary>The size of our about text window</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.About_Form.DisplayForm">
            <summary>
            Display the about form in its own thread
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.About_Form.DisplayAboutForm(System.Object)">
            <summary>
            Display an about form in its own thread
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.About_Form.#ctor">
            <summary>
            Initialize our about form
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.About_Form.picDescription_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle the repaint of our about window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.About_Form.tmrScroll_Tick(System.Object,System.EventArgs)">
            <summary>
            Every interval, update our location
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.About_Form.okButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handle the OK button
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.About_Form.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.About_Form.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.About_Form.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Macomber_Map.Misc.AnimatedGifEncoder">
            <summary>
            This class returns a dynamically created multiple-image GIF file.    
            The code for creating a GIF color pallete is based on http://support.microsoft.com/kb/319061
            The code for creating an animated GIF is based on http://bloggingabout.net/blogs/rick/archive/2005/05/10/3830.aspx
            </summary>
        </member>
        <member name="F:Macomber_Map.Misc.AnimatedGifEncoder.mS">
            <summary>The output memory stream for our item</summary>
        </member>
        <member name="F:Macomber_Map.Misc.AnimatedGifEncoder.FrameRate">
            <summary>The number of seconds between frame incrementing</summary>
        </member>
        <member name="F:Macomber_Map.Misc.AnimatedGifEncoder.Frames">
            <summary>The total number of frames in the image</summary>
        </member>
        <member name="F:Macomber_Map.Misc.AnimatedGifEncoder.Terminated">
            <summary>Whether the image has been terminated by a semicolon</summary>
        </member>
        <member name="M:Macomber_Map.Misc.AnimatedGifEncoder.#ctor(System.Int32)">
            <summary>
            Initialize a new Gif Encoder
            </summary>
            <param name="FrameRate">The frame rate of the image</param>
        </member>
        <member name="M:Macomber_Map.Misc.AnimatedGifEncoder.AddFrame(System.Drawing.Bitmap,System.Drawing.Color[])">
            <summary>
            Add an additional frame to the GIF image
            </summary>
            <param name="Img">The image to add to the GIF image</param>
            <param name="inColors">Colors used in the image</param>
        </member>
        <member name="M:Macomber_Map.Misc.AnimatedGifEncoder.GetColorPallete(System.Drawing.Bitmap)">
            <summary>
            Create a new color pallete consisting of the specified colors
            </summary>
            <param name="inImage">The incoming image</param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Misc.AnimatedGifEncoder.Image">
            <summary>
            Retrieve the animated GIF.
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_ScheduledOutage">
            <summary>
            This class contains upcoming outages
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_ScheduledOutage.OutageStart">
            <summary>The outage's start</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_ScheduledOutage.OutageEnd">
            <summary>The outage's end</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_ScheduledOutage.OutageDescription">
            <summary>The description of the outage</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.ErrorForm">
            <summary>
            This class holds a simple window showing all errors
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.ErrorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.ErrorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.ErrorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.ErrorForm.#ctor">
            <summary>
            Initialize the error form
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.ErrorForm.LogError(System.String)">
            <summary>
            Log an error to the console window
            </summary>
            <param name="ErrorMessage">The text of the error</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.ErrorForm.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Handle the user's closing of the form by making it invisible instead
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.Acknowledge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.Acknowledgements">
             <summary>
               Looks up a localized string similar to © 2009 - 2013, Michael E. Legatt, Ph.D., 
            Electric Reliability Council of Texas (ERCOT)
            
            The Macomber Map provides high to low-level 
            situation awareness, pulling data from a variety 
            of systems, integrated around a CIM model.
            
            The Macomber Map is named to honor the memory of 
            Gary Macomber, Ph.D., who initated the research 
            that lead to this product&apos;s development.
            
            Developer and architect: Michael E. Legatt, Ph.D.
            
            Director, EMMS Development: Diran Obadina, Ph.D.
            
            Manager, Nodal EMS Developm [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.Archive">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.ERCOT_Logo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.ERCOTLogo_Small_Blue">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.ErcotRound">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.Excel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.FindNextHS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.MoveMap">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.NoteHS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.OneLine">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.openHS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.PauseHS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.PlayHS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.PropertiesHS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.RefreshDocViewHS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.Search">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.SearchWebHS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.StopHS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Macomber_Map.Properties.Resources.StopHS1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_EPSMeter">
            <summary>
            This class holds information on an EPS Meter
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_EPSMeter.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new node from a data reader
            </summary>
            <param name="AddIfNew"></param>
            <param name="ElementSource"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_EPSMeter.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new node from an XML document
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_EPSMeter.#ctor">
            <summary>
            Initialize a parameterless node
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_EPSMeter.RID">
            <summary>The resource ID of the pricing vector</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Blackstart_Corridor">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc. All Rights Reserved.
            This class holds the information needed for a blackstart corridor.
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Blackstart_Corridor.Description">
            <summary>The description of the blackstart corridor</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Blackstart_Corridor.Blackstart_Targets">
            <summary>Our collection of blackstart targets</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Blackstart_Corridor.#ctor">
            <summary>
            Initialize a new blackstart corridor
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Blackstart_Corridor.#ctor(System.Xml.XmlElement)">
            <summary>
            Initialize a new blackstart corridor
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Blackstart_Corridor.ToString">
            <summary>
            Report the name of the blackstart corridor
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Note_Viewer">
            <summary>
            This class contains the viewer for intra-operator/engineer notes
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Note_Viewer.KeyIndicators">
            <summary>The key indicators for the system</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Note_Viewer.RightClickMenu">
            <summary>The menu for handling right-click events</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Note_Viewer.nMap">
            <summary>The associated network map (for zooming/panning)</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Viewer.#ctor(Macomber_Map.User_Interface_Components.Key_Indicators,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map)">
            <summary>
            Initialize a new note viewer
            </summary>
            <param name="KeyIndicators">The key indicators (for notifications of new notes)</param>
            <param name="nMap">The associated network map</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Viewer.Note_Viewer_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Override the form's closing to handle hiding if the user clicks on the 'X'
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Viewer.NoteRemoved(Macomber_Map.Data_Elements.MM_Note)">
            <summary>
            Remove a note from the display
            </summary>
            <param name="Note">The note to be handled</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Viewer.NoteModified(Macomber_Map.Data_Elements.MM_Note)">
            <summary>
            Handle the modification of a note
            </summary>
            <param name="Note">The note to be handled</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Viewer.NoteAdded(Macomber_Map.Data_Elements.MM_Note)">
            <summary>
            Add a new note to our display
            </summary>
            <param name="Note">The note to be handled</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Viewer.lvNotes_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the right-click option on a note
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Viewer.tmrUpdate_Tick(System.Object,System.EventArgs)">
            <summary>
            Every timer interval, if we're visible, update everything.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Viewer.lvNotes_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handle the clicking on an item, by marking it as "acknowledged" or seen.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Note_Viewer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Viewer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Viewer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.Note_Viewer.NoteText">
            <summary>Whether any new violations are in place</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Note_Viewer.SafeNoteHandler">
            <summary>
            A thread-safe delegate for handling a note
            </summary>
            <param name="Note">The note to be handled</param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Blackstart_Display">
            <summary>
            This class displays blackstart corridors
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.nMap">
            <summary>The main network map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.BaseData">
            <summary>Our base data handler</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.mnuMain">
            <summary>Our popup menu</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.#ctor(Macomber_Map.User_Interface_Components.NetworkMap.Network_Map)">
            <summary>
            Initialize our blackstart corridor display
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.AddLineElements(Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Element[],System.String,System.Windows.Forms.TreeNode)">
            <summary>
            Add in our information on line elements
            </summary>
            <param name="OutElems"></param>
            <param name="Title"></param>
            <param name="ParentNode"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.OneLine_OneLineElementClicked(Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the user's clicking on a one-line element
            </summary>
            <param name="ClickedElement"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.OnShown(System.EventArgs)">
            <summary>
            Whent the form is first shown, hide it.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Handle the closing event by instead hiding the window
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.CreateInstanceInSeparateThread(System.Windows.Forms.ToolStripMenuItem,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map)">
            <summary>
            Create a seperate thread to run the communications viewer, and run it.
            </summary>
            <param name="nMap"></param>
            <param name="MenuItem"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.InstantiateForm(System.Object)">
            <summary>
            Instantiate a comm viewer
            </summary>
            <param name="state">The state of the form</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.cmbCorridor_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            When the corridor button is checked, alter our corridor view
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.cmbCorridorTarget_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            When the corridor target changes, update the primary/secondary
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.cmbPrimarySecondary_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            When the primary/secondary path is selected, display all of our elements
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.lvItems_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handle the selecting of an index to open up a one-line
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.lvItems_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle a mouse right-click event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.tmrUpdate_Tick(System.Object,System.EventArgs)">
            <summary>
            Every four seconds, update our element status
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Blackstart_Display.tvSummary_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Handle a node selection change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Display_Options">
            <summary>
            This form allows for customization of the display options, by allowing for a default view, and then deltas from the normal based on parameters.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Display_Options.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Display_Options.networkMap">
            <summary>The network map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Display_Options.miniMap">
            <summary>The mini-map associated with the network map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Display_Options.violViewer">
            <summary>The violation viewer associated with the network map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Display_Options.ViewMenu">
            <summary>The menu strip for the views right-click menu</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Display_Options.Initializing">
            <summary>Our flag for initializing the quick view</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.#ctor(Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,Macomber_Map.User_Interface_Components.Mini_Map,Macomber_Map.User_Interface_Components.Violation_Viewer)">
            <summary>
            Create the property view of display options
            </summary>
            <param name="networkMap">The network map</param>
            <param name="miniMap">The mini-map</param>    
            <param name="violViewer">The violation viewer</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.Repository_ViewChanged(Macomber_Map.Data_Elements.MM_Display_View)">
            <summary>
            Handle a view change by updating our display accordingly.
            </summary>
            <param name="ActiveView"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.FindActivateView(Macomber_Map.Data_Elements.MM_Display_View,System.Windows.Forms.TreeNode)">
            <summary>
            Recursively look through all of the nodes, and find any matches
            </summary>
            <param name="ActiveView">The active view</param>
            <param name="RootNode">The tree node to test</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.pgMain_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Handle when a value is changed. If the value is one that we need to refresh the network and mini-map for, do so.
            </summary>
            <param name="s"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.UpdateNodeSelection(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            When the node selection changes, adjust the property page accordingly.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.Display_Options_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Handle the form close event - if the user tried to close it, flag a cancel and hide.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.AddTextBox(System.String,System.Drawing.Point@,System.Object,System.String,System.Windows.Forms.Control)">
            <summary>
            Add a button to the parent control
            </summary>
            <param name="Title">The title of the button</param>
            <param name="Location">The location of the button (y is updated when completed)</param>
            <param name="ParentControl">The control in which this button should be placed</param>
            <param name="AssociatedObject">The object associated with the placement</param>
            <param name="Property"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.AddCombo(System.String,System.Drawing.Point@,System.Object,System.String,System.Windows.Forms.Control)">
            <summary>
            Add a combo box to the display
            </summary>
            <param name="Location"></param>
            <param name="AssociatedObject"></param>
            <param name="Property"></param>
            <param name="ParentControl"></param>
            <param name="Title"></param>        
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.AddCheckbox(System.String,System.Drawing.Point@,System.Object,System.String,System.Windows.Forms.Control)">
            <summary>
            Add a checkbox to the parent control
            </summary>
            <param name="Title"></param>
            <param name="Location"></param>
            <param name="AssociatedObject"></param>
            <param name="Property"></param>
            <param name="ParentControl"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.AddButton(System.String,System.Drawing.Point@,System.Object,System.String,System.Windows.Forms.Control)">
            <summary>
            Add a button to the parent control
            </summary>
            <param name="Title">The title of the button</param>
            <param name="Location">The location of the button (y is updated when completed)</param>
            <param name="ParentControl">The control in which this button should be placed</param>
            <param name="AssociatedObject">The object holding the value</param>
            <param name="Property">The property to be shown and updated</param>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.AddLabel(System.String,System.Drawing.Point@,System.Object,System.String,System.Windows.Forms.Control)">
            <summary>
            Add a label to the parent control
            </summary>
            <param name="Title">The title of the label</param>
            <param name="Location">The location of the label (y is updated when completed)</param>
            <param name="ParentControl">The control in which this label should be placed</param>
            <param name="AssociatedObject">The object holding the value</param>
            <param name="Property">The property to be shown and updated</param>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.ChangeValue(System.Object,System.EventArgs)">
            <summary>
            Change a button value
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.UpdateControls">
            <summary>
            Update the values of all controls
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.ResetViews">
            <summary>
            Reset the collection of views
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.UpdateDisplay">
            <summary>
            Update our display depending on what's shown
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.SelectNode(System.String,System.Windows.Forms.TreeNodeCollection)">
            <summary>
            Select a node based on its text
            </summary>
            <param name="Node">The node to search for</param>
            <param name="Collection"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.AddView(System.Windows.Forms.TreeNode,System.Xml.XmlElement)">
            <summary>
            Add a view to the tvViews node collection
            </summary>
            <param name="tvNode">The parent node for this item (or null for the whole view)</param>
            <param name="xView">The XML element to add</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.Menu_ItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            Handle a menu item click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.AddNode(System.Windows.Forms.TreeNode,System.String,System.Object)">
            <summary>
            Add a new node to the tree, and make sure it's visible
            </summary>
            <param name="ParentNode">The parent node of the new node</param>
            <param name="Title">The title for the node</param>
            <param name="Tag">The object to associate with the node</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.ChangeLineVisibility(System.Object,System.EventArgs)">
            <summary>
            Change the visibility of a transmission line
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.BulkUpdateByEnergizedState(System.Object,System.EventArgs)">
            <summary>
            Update all lines by the requested energized state
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.chkLineMVAAnimation_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Update the visibility of a transmission line
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.tbLineAnimation_Scroll(System.Object,System.EventArgs)">
            <summary>
            Handel the scroll change of a line animation threshold
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.UpdateLineVisibility(System.Object,System.EventArgs)">
            <summary>
            Handle the scroll change of a line visibility threshold
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Display_Options.tvViews_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Go through the selected item's properties, and add them to the display.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_RemedialActionScheme">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D.
            This class holds information on a remedial action scheme
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_RemedialActionScheme.Contingency">
            <summary>The contingency associated with our remedial action scheme</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_RemedialActionScheme.Elements">
            <summary>The elements associated with our remedial action scheme</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_RemedialActionScheme.Description">
            <summary>
            The long name of the RAS
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_RemedialActionScheme.#ctor">
            <summary>
            Initialize a new CIM Contingency Definition
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_RemedialActionScheme.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new remedial action scheme against an XML element
            </summary>
            <param name="xElem"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_RemedialActionScheme.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Intialize a new remedial action scheme against a database entry
            </summary>
            <param name="dRd"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_RemedialActionScheme.ToString">
            <summary>
            Report the name of the contingency
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_PricingVector">
            <summary>
            This class holds information on a pricing vector and its orientation
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_PricingVector.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new node from a data reader
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_PricingVector.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new node from an XML document
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_PricingVector.#ctor">
            <summary>
            Initialize a parameterless node
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_PricingVector.NodeElement">
            <summary>The node to which the vector is connected</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_PricingVector.OtherElement">
            <summary>The element to which the vector is connected</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_PricingVector.IsPositive">
            <summary>Whether the flow towards the associated node is positive</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_PricingVector.EPSMeter">
            <summary>The EPS meter associated with the vector</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_PricingVector.RID">
            <summary>
            The resource ID of the pricing vector
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector">
            <summary>
            This class provides an interface to the historic connector
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.MM_DataConnector">
            <summary>
            This class is the base for a data connector
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataConnector.ConnectorName">
            <summary>The name of the connector (e.g., Real-time EMS)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataConnector.Queries">
            <summary>The collection of EMS commands</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataConnector.Active">
            <summary>Whether the data connector is active</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataConnector.#ctor(System.String)">
            <summary>
            Initialize the data connector, and assign it a name
            </summary>
            <param name="ConnectorName"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataConnector.ExecuteCommand(System.String)">
            <summary>
            Send a command text to a data connector
            </summary>
            <param name="CommandText">The text to be processed</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataConnector.Disconnect">
            <summary>
            Disconnect from the server
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataConnector.Query(Macomber_Map.Data_Connections.Generic.MM_Query_Configuration,Macomber_Map.Data_Connections.Generic.MM_Data_Source)">
            <summary>
            Initiate a data query 
            </summary>
            <param name="QueryConfiguration">The configuration of the query</param>
            <param name="DataSource">The data source to be used for the query</param>
            <returns>The GUID of the query</returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataConnector.RemoveQuery(System.Guid)">
            <summary>
            Close down and remove a query
            </summary>
            <param name="QueryGuid">The GUID of the query to remove</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataConnector.AddToQuery(Macomber_Map.Data_Connections.Generic.MM_Query_Configuration,System.Data.DataSet,System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Add an element to a data table, as appropriate
            </summary>
            <param name="qConfig">The query configuration</param>
            <param name="qDs">The query data set</param>
            <param name="DbLinkage">The database linkage XML element</param>
            <param name="Application">The target application</param>        
            <param name="TargetTable">The name of the table</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataConnector.SetNetworkSource(Macomber_Map.Data_Connections.Generic.MM_Data_Source)">
            <summary>
            Change the query's network source (e.g., StateEstimator, StudySystem, QKNET, SCADA)
            </summary>
            <param name="value">The new network source</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataConnector.Reexecute(Macomber_Map.Data_Connections.MM_DataQuery)">
            <summary>
            Re-execute a query
            </summary>
            <param name="Query">The query to execute</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataConnector.PauseQueries">
            <summary>Pause all running queries</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataConnector.RefreshQueries">
            <summary>Refresh all study/non-automatically running queries</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataConnector.ResumeQueries">
            <summary>Resume all paused queries</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.MM_DataConnector.State">
            <summary>The current state of the connector</summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.MM_DataConnector.QueryResultHandler">
            <summary>
            The delegate to handle the results of the query
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.MM_DataConnector.ActiveState">
            <summary>
            The state of the system
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataConnector.ActiveState.Inactive">
            <summary>The data connector is inactive</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataConnector.ActiveState.Active">
            <summary>The data connector is active and running</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataConnector.ActiveState.Paused">
            <summary>The data connector is active but paused</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataConnector.ActiveState.Quitting">
            <summary>The data connector is quitting</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.HistoricConnection">
            <summary>Our connection to a historic system</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.ConnectionString">
            <summary>Our connection string to our historic database</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.TagQueryString">
            <summary>Our query string to search for tags</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.ValuesQueryString">
            <summary>Our query string to search for values</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.TagTitleReference">
            <summary>The reference to our tag title</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.TagDescriptionReference">
            <summary>The reference to our tag description</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.PointTagReference">
            <summary>The reference to our point tag</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.PointValueReference">
            <summary>The reference to our point tag</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.PointDateReference">
            <summary>The reference to our point date</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.#ctor(System.Xml.XmlElement)">
            <summary>
            Intiailize a new historic connector
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.QueryTags(System.String,Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.TagAssignmentDelegate,Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.TagQueryCompleted)">
            <summary>
            Attempt to locate tags that fit a particular criteria
            </summary>
            <param name="TagSQL">The paramters to pass to the query</param>
            <param name="AddTag">The delegate to flag if found</param>       
            <param name="CompletedDelegate">The delegate for completion of all historic tags</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.ExecuteCommand(System.String)">
            <summary>Execute a command against the historic connector</summary>
            <param name="CommandText"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.Disconnect">
            <summary>Disconnect from the historic query</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.Query(Macomber_Map.Data_Connections.Generic.MM_Query_Configuration,Macomber_Map.Data_Connections.Generic.MM_Data_Source)">
            <summary>
            Initiate a new historic query
            </summary>
            <param name="QueryConfiguration"></param>
            <param name="DataSource"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.RemoveQuery(System.Guid)">
            <summary>
            Remove a query from the active queue
            </summary>
            <param name="QueryGuid"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.AddToQuery(Macomber_Map.Data_Connections.Generic.MM_Query_Configuration,System.Data.DataSet,System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Add a component to our query
            </summary>
            <param name="qConfig"></param>
            <param name="qDs"></param>
            <param name="DbLinkage"></param>
            <param name="Application"></param>
            <param name="TargetTable"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.SetNetworkSource(Macomber_Map.Data_Connections.Generic.MM_Data_Source)">
            <summary>
            Determine our network source from our historic system
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.Reexecute(Macomber_Map.Data_Connections.MM_DataQuery)">
            <summary>
            Re-execute a query
            </summary>
            <param name="Query"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.PauseQueries">
            <summary>
            Pause all queries
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.RefreshQueries">
            <summary>
            Refresh queries
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.ResumeQueries">
            <summary>
            Resume queries
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.State">
            <summary>Report the state of our historic connector</summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.TagAssignmentDelegate">
            <summary>
            The delegate for handling tag assignments
            </summary>
            <param name="Tag"></param>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Historic.MM_Historic_Connector.TagQueryCompleted">
            <summary>The delegate for handling a tag query completion</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Log_Viewer">
            <summary>Provide user access to the system logs</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Log_Viewer.#ctor">
            <summary>
            Initialize the log viewer
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Log_Viewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Log_Viewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Log_Viewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI">
            <summary>
            This class renders the network map using GDI.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map">
            <summary>
            This class holds the abstract class for the network map.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.Coordinates">
            <summary>The current view on the network map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.FPS">
            <summary>FPS Count (for debugging)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.MousePos">
            <summary>The x/y position of the left mouse press (for panning)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.RightClickMenu">
            <summary>The menu handling right-click actions</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.MapMoved">
            <summary>Wheter or not the map has been moved, and elements need to be recalculated</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.OngoingZoomPan">
            <summary>Whether or not an ongoing zoom/pan action is occurring, requiring constant redraws</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.BlinkTimer">
            <summary>The timer that handles blinking events</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.IsBlinking">
            <summary>Whether or not the worst state should be shown (for handling blinking events)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.FlowTimer">
            <summary>The timer that handles MW/MVAR flows</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.miniMap">
            <summary>The mini-map associated with the network map (for zoom/pan activity)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.IsRendering">
            <summary>Whether the map is in the midst of rendering</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.Resizing">
            <summary>Whether the control is resizing</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.LastFPS">
            <summary>FPS at last second interval</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.PanPoint">
            <summary>The number of pixels to shift the display every 100 ms</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.ShiftDown">
            <summary>Whether the user is holding the shift key down while drawing a lasso</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.violViewer">
            <summary>The violation viewer associated with the network map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.tmrFPS">
            <summary>Debug timer, if requested</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.#ctor(Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            Initialize a new network map
            </summary>
            <param name="Coordinates"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.CreateMap(Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            Create a new network map control
            </summary>
            <param name="Coordinates">The coordinates to be used</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.ResetDisplayCoordinates">
            <summary>
            Reset the display coordinates
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.SetDisplayCoordinates(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Set the map's display coordinates to fit particular top/left and bottom/right components
            </summary>
            <param name="TopLeft"></param>
            <param name="BottomRight"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.UpdateSubstationInformation">
            <summary>
            Recompute critical information about a particular substation.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.UpdateSubstationInformation(Macomber_Map.Data_Elements.MM_Substation)">
            <summary>
            Recompute critical information about a particular substation.
            </summary>
            <param name="Substation">The substation to be recomputed</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.UpdateLineInformation">
            <summary>
            Recompute critical information about a particular line.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.UpdateLineInformation(Macomber_Map.Data_Elements.MM_Line,System.Boolean)">
            <summary>
            Recompute critical information about a particular line.
            </summary>
            <param name="Line">The line to be recomputed</param>
            <param name="AllowAdd">Whether lines should be added</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.ResetMap">
            <summary>Reset our network map</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.SetControls(Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.Mini_Map,System.Int32)">
            <summary>
            Set the controls and data sources associated with the network map
            </summary>
            <param name="violViewer">The violation viewer</param>
            <param name="miniMap">The mini-map to be associated with the network map</param>
            <param name="resetZoom">Whether to reset the zoom levels</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.IsVisible(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Determine whether an element is visible on the network map
            </summary>
            <param name="Element">The substation or line to test</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.IsConnectorVisible(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Determine whether an element's connector is visible on the network map
            </summary>
            <param name="Element">The substation or line to test</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.ResizeComplete">
            <summary>
            Report the completion of a resize event
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.tmrFPS_Elapsed(System.Object,System.EventArgs)">
            <summary>
            Handle the elapsing of the FPS timer by resetting and doing background events.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.NetworkMap.Network_Map.MouseLatLng">
            <summary>
            Return the current mouse position upon request
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.Counties">
            <summary>Our collection of counties</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.Lines">
            <summary>Our collection of lines</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.Substations">
            <summary>Our collection of substations</summary>        
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.MultipleLines">
            <summary>Our collection of multiple lines</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.State">
            <summary>Our state boundary</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.StatePath">
            <summary>Our state boundary path</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.RenderState">
            <summary>Our current rendering state</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.DrawAttributes">
            <summary>Our Image Attributes for drawing the map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.HandlingMouse">
            <summary>Whether the application is handling the mouse activity</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.HitTestPen">
            <summary>The pen for hit-testing elements</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI._LockForDataUpdate">
            <summary>The flag to ensure that operations do not occur with partially loaded data sets</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.UpdatingElement">
            <summary>The element currently being updated</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.ActivelyMovingElement">
            <summary>The actively moving element</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.#ctor(Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            Initialize our network map control
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.BlinkTimer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Handle the blink timer
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.FlowTimer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Handle the flow timer
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.UpdateSubstationInformation">
            <summary>
            Update information on all substations
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.UpdateSubstationInformation(Macomber_Map.Data_Elements.MM_Substation)">
            <summary>
            Update information on a particular substation
            </summary>
            <param name="Substation">The substation to be updated</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.UpdateLineInformation">
            <summary>
            Update information on all lines
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.UpdateLineInformation(Macomber_Map.Data_Elements.MM_Line,System.Boolean)">
            <summary>
            Update information on a particular line
            </summary>
            <param name="Line">The line to be updated</param>
            <param name="AllowAdd">Whether to add new elements</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.ResetMap">
            <summary>
            Reset the network map
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.SetControls(Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.Mini_Map,System.Int32)">
            <summary>
            Set the controls and data sources associated with the network map
            </summary>
            <param name="violViewer">The violation viewer</param>
            <param name="miniMap">The mini-map to be associated with the network map</param>
            <param name="resetZoom">Whether to reset our zoom</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.Data_Integration_NetworkSourceChanged(System.Object,System.EventArgs)">
            <summary>
            When our network source changes, update the map location to simulate object replacement
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.Repository_ViewChanged(Macomber_Map.Data_Elements.MM_Display_View)">
            <summary>
            Handle the updating of the repository view, by updating the graphics paths
            </summary>
            <param name="ActiveView"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.Coordinates_Panned(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Handle the map pan event - find our pixel difference between the two points, and adjust everything linearly.
            </summary>
            <param name="OldCenter">The old center of the screen</param>
            <param name="NewCenter">The new center of the screen</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.Coordinates_Zoomed(System.Single,System.Single)">
            <summary>
            Handle the zoom event - rebuild all points.
            </summary>
            <param name="OldZoom"></param>
            <param name="NewZoom"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.ResetDisplayCoordinates">
            <summary>
            Reset the display controls
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.SetDisplayCoordinates(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Set display coordiantes to a target value
            </summary>
            <param name="TopLeft"></param>
            <param name="BottomRight"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.ResizeComplete">
            <summary>
            Handle the size change by updating our graphics paths
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.UpdateGraphicsPaths(System.Boolean,System.Boolean)">
            <summary>
            Update our graphics paths for all images
            </summary>
            <param name="RedrawText">Whether our text needs to be withdrawn</param>
            <param name="AllowAdd">Whether to add new elements in to our repository</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.CreateGraphicsPath(System.Drawing.PointF[])">
            <summary>
            Turn a series of latitude/longitude points into a unique graphics path
            </summary>
            <param name="LatLongs">The collection of latitudes/longitudes that define the path</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.OnResize(System.EventArgs)">
            <summary>
            Update all components following a resize event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.DisplayOptions_MapTransparencyChanged(System.Object,System.EventArgs)">
            <summary>
            When our map transparency options change, update our color matrix
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle the refresh of the map
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.DrawCrosshair(System.Drawing.Pen,System.Drawing.Point,System.Int32,System.Drawing.Graphics,System.String)">
            <summary>
            Draw a crosshair of our target size
            </summary>
            <param name="DrawPen"></param>
            <param name="Location"></param>
            <param name="Radius"></param>
            <param name="g"></param>
            <param name="TextToDraw"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.Line_ValueChanged(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Check a line after its value has changed
            </summary>
            <param name="Line"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.CheckLineVisibility(System.Collections.Generic.KeyValuePair{Macomber_Map.Data_Elements.MM_Line,Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line})">
            <summary>
            Determine whether a line should be visible.
            </summary>
            <param name="Line"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.CheckDrawSubstation(System.Collections.Generic.KeyValuePair{Macomber_Map.Data_Elements.MM_Substation,Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation},System.Drawing.Graphics)">
            <summary>
            Check to see whether a substation should be drawn. If so, draw it.
            </summary>
            <param name="Substation">The substation to test</param>
            <param name="g">The graphics connector</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.CheckDrawLine(System.Collections.Generic.KeyValuePair{Macomber_Map.Data_Elements.MM_Line,Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line},System.Drawing.Graphics)">
            <summary>
            Check to see whether a substation should be drawn. If so, draw it.
            </summary>
            <param name="Line">The line to test</param>
            <param name="g">The graphics connector</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.DrawLine(System.Collections.Generic.KeyValuePair{Macomber_Map.Data_Elements.MM_Line,Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line},System.Drawing.Graphics)">
            <summary>
            If the appropriate criteria are met, draw the line
            </summary>
            <param name="Line">the line to be drawn</param>
            <param name="g">The GDI+ graphics connector</param>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.CheckSubstationVisibility(System.Collections.Generic.KeyValuePair{Macomber_Map.Data_Elements.MM_Substation,Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Substation})">
            <summary>
            Determine whether a substation should be visible
            </summary>
            <param name="Substation"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.DrawCounty(System.Collections.Generic.KeyValuePair{Macomber_Map.Data_Elements.MM_Boundary,Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_County},System.Drawing.Graphics)">
            <summary>
            Draw the state and/or county boundary
            </summary>
            <param name="Boundary">The boundary to be drawn</param>        
            <param name="g">The graphics connector</param>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.RelativeColor(System.Single)">
            <summary>
            Return a color corresponding to the value (0 is average)
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.DrawLassoPoints(System.Collections.Generic.List{System.Drawing.PointF},System.Drawing.Graphics)">
            <summary>
            Draw all lasso points
            </summary>
            <param name="LassoPoints"></param>
            <param name="g"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.DrawLasso(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Graphics)">
            <summary>
            Draw a lasso on the screen
            </summary>
            <param name="Start">The first coordinate for the lasso</param>
            <param name="End">The last coordinate for the lasso</param>
            <param name="g">The graphics connector</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.IsVisible(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Determine whether a line or substation is visible
            </summary>
            <param name="Element"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.IsConnectorVisible(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Determine whether a line or substation's connector is visible.
            </summary>
            <param name="Element"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the left and mouse button down events
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle left and right mouse movement
            </summary>        
            <param name="e"></param>    
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the left and right mouse up events
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.OnLostFocus(System.EventArgs)">
            <summary>
            Handle the map's losing focus
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.HitTestAndPopup(System.Drawing.Point)">
            <summary>
            Check to see whether a user has clicked on a substation or line
            </summary>
            <param name="MousePosition">The position of the mouse</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.HitTest(System.Drawing.Point)">
            <summary>
            Hit test the map to find substations and/or lines that fit our coordinates
            </summary>
            <param name="PixelLocation"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.PopupMenu(System.Collections.Generic.List{Macomber_Map.Data_Elements.MM_Element},System.Drawing.Point)">
            <summary>
            Popup a menu offering a list of elements to be shown
            </summary>
            <param name="ElemToPopup"></param>
            <param name="MousePosition">The current mouse position</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse wheel
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Handle a key press event. Current keys include:
            r - reset the display to zoom all the way out to the state of Texas
            +/-  Zoom in and out
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Pick up the control key being pressed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Pick up the control key being released
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.LockForDataUpdate">
            <summary>Lock Interaction and Key operations during switch from data types //MN//20130607 added this function</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.DCUpdateTotal">
            <summary>Lock Interaction and Key operations during switch from data types //MN//20130607 added this function</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI.enumRenderState">
            <summary>The render state (ready to be drawn, building for drawing, drawn.</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_MultipleLine">
            <summary>
            This class holds information on a multiple line (multiple lines between the same two substations) 
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_MultipleLine.LineCollection">
            <summary>The collection of visible lines</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_MultipleLine.MaxWidth">
            <summary>The maximum width for any of the lines</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_MultipleLine.#ctor(Macomber_Map.Data_Elements.MM_Line,Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line,Macomber_Map.Data_Elements.MM_Line,Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line)">
            <summary>
            Initialize a new multiple line collection
            </summary>
            <param name="FirstLine"></param>
            <param name="SecondLine"></param>
            <param name="FirstLineGDI"></param>
            <param name="SecondLineGDI"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_MultipleLine.AddLine(Macomber_Map.Data_Elements.MM_Line,Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line)">
            <summary>
            Add a new line to the collection
            </summary>
            <param name="NewLine"></param>
            <param name="NewLineGDI"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_MultipleLine.DrawMultipleLine(System.Drawing.Graphics)">
            <summary>
            Draw the underpinning highlight
            </summary>
            <param name="g"></param>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_MultipleLine.Visible">
            <summary>
            Determine if any of the lines are visible
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_MultipleLine.ViolationVisible">
            <summary>
            Determine if any of the lines are violation visible
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_MultipleLine.BestLine">
            <summary>
            Determine the line that best represents the multiple line, based on voltage, energization state, etc.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PricingVector">
            <summary>
            This class holds information on a pricing vector
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PokePoint">
            <summary>
            This class holds the poke point information
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PokePoint._IsJumper">
            <summary>Whether the poke point is a jumper</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PokePoint._IsVisible">
            <summary>Whether the box should be drawn for this poke point</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PokePoint.#ctor(System.Xml.XmlElement,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer)">
            <summary>
            Initialize a new poke point
            </summary>
            <param name="xE"></param>
            <param name="violViewer"></param>
            <param name="olViewer"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PokePoint.#ctor(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node,Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations,System.Boolean,System.Boolean,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer)">
            <summary>
            Initialize a poke point with a rectangle, for a jumper
            </summary>
            <param name="OwnerNode"></param>
            <param name="BaseNode">The node that owns this poke point</param>
            <param name="Orientation">The orientation of the poke point</param>
            <param name="IsJumper">Whether the poke point is a jumper</param>
            <param name="IsVisible">whether the poke point is visible</param>
            <param name="olView"></param>
            <param name="violView"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PokePoint.ToString">
            <summary>
            Report the information on the poke point
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PokePoint.IsJumper">
            <summary>Whether the poke point is a jumper</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PokePoint.IsVisible">
            <summary>Whether the box should be drawn for this poke point</summary>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PricingVector.#ctor(System.Xml.XmlElement,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer)">
            <summary>
            Initialize a new pricing vector
            </summary>
            <param name="xE"></param>
            <param name="violViewer"></param>
            <param name="olView"></param>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PricingVector.EPSMeter">
            <summary>The EPS meter associated with the vector</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PricingVector.RID">
            <summary>
            The resource ID of the pricing vector
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_PricingVector.IsPositive">
            <summary>Whether the flow towards the associated node is positive</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Data_Entry">
            <summary>
            (C) 2013, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc.
            This class provides a data entry form for updating the status of a piece of equipment, adding in a violation, etc.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Data_Entry.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Data_Entry.SelectedElement">
            <summary>The selected element</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Data_Entry.NewViolation">
            <summary>Our new violation</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Data_Entry.DisplayItems">
            <summary>Our collection of display items for binding purposes</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.#ctor">
            <summary>
            Initialize a new data entry form
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.LoadOptionsTable(System.Type)">
            <summary>
            Load a data table with all the appropriate options
            </summary>
            <param name="TargetType"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.AddComponent(System.String,System.Type,System.Object,System.Int32@,System.Windows.Forms.Label@,System.Windows.Forms.Control@)">
            <summary>
            Add in a label and control
            </summary>
            <param name="Name"></param>
            <param name="CurTop"></param>
            <param name="TargetType"></param>
            <param name="Value"></param>
            <param name="NewControl"></param>
            <param name="NewLabel"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.AssignValue(System.Object,System.String,System.Object)">
            <summary>
            Assign a value that we've specified
            </summary>
            <param name="TargetObject"></param>
            <param name="FieldName"></param>
            <param name="TargetValue"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.ChangeType(System.Object,System.Type)">
            <summary>
            Change the type of our object
            </summary>
            <param name="Value"></param>
            <param name="TargetType"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.TextBoxTextChanged(System.Object,System.EventArgs)">
            <summary>
            Handle a key press
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.CheckBoxValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handle a check box value change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.DateTimePickerValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handle a combo box index change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.ComboValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handle a combo box value change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.SubmitButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handle the submission of a new violation
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.SelectElement(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Select an element after updating our search form
            </summary>
            <param name="SelectedElement"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.srMain_ItemSelectionChanged(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Handle the selection of an item
            </summary>
            <param name="SelectedElement"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Data_Entry.TriggerUpdate(System.Object,System.EventArgs)">
            <summary>
            Trigger a value update event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Constraint_Viewer">
            <summary>
            Display detailed information on a constraint
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Constraint_Viewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Constraint_Viewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Constraint_Viewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Constraint_Viewer.#ctor">
            <summary>
            Initialize the constraint viewer
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Permissions">
            <summary>
            This class holds the permissions restrictions on the Macomber Map.
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowCommands">
            <summary>Whether the user can execute commands</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowOwnership">
            <summary>Whether ownership information should be shown</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowDUNS">
            <summary>Whether DUNS information should be shown</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.AllowModelSwitching">
            <summary>Whether the user can switch different models</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowTelephone">
            <summary>Whether telephone information should be shown</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ConnectionTimeoutThreshold">
            <summary>The connection threshold in seconds for a timeout event to be considered</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.LineVoltageLimit">
            <summary>The voltage limits for alarms to flag (when auto-generated in simulation mode</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.BusLowLimit">
            <summary>The lower limit for bus voltage (when auto-generated in simulation mode</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.BusHighLimit">
            <summary>The upper limit for bus voltage (when auto-generated in simulation mode</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.OTS">
            <summary>OTS vs RT net Flags</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.PublicUser">
            <summary>Whether the user is public, and thus limited information should be shown</summary>        
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.runDevOptions">
            <summary>Dev options such as second disconnect statement or other options to allow for alternate run modes if required/// </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowViolations">
            <summary>For future implementation of no-violations start up mode/// </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.showRTHist">
            <summary>Temp Option to turn things off that are not working quite right</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowProcesses">
            <summary>Whether Processes should be shown</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowViews">
            <summary>Whether views should be shown</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowHistory">
            <summary>Whether the user can show history</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowBreakerToBreakers">
            <summary>Whether breaker-to-breakers should be shown</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowRASs">
            <summary>Whether RAP/SPSs should be shown</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowUnits">
            <summary>Whether units are shown (right-click menu or search)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowLoads">
            <summary>Whether loads are shown (right-click menu or search)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowShuntCompensators">
            <summary>Whether shunt compensators are shown (right-click menu or search)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowTransformers">
            <summary>Whether transformers are shown (right-click menu or search)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowBuses">
            <summary>Whether buses are shown (right-click menu or search)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowEstMVAs">
            <summary>Whether estimated MVAs are displayed (on network map, or right-click menu)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowEstVs">
            <summary>Whether estimated voltages and pUs are displayed (on network map, or right-click menu)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowTelVs">
            <summary>Whether telemetered voltages and pUs are displayed (on network map, or right-click menu)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowTelMVAs">
            <summary>Whether telemetered MVAs are displayed (on network map, or right-click menu)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowEstMVARs">
            <summary>Whether estimated MVARs are displayed (on network map, or right-click menu)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowTelMVARs">
            <summary>Whether telemetered MVARs are displayed (on network map, or right-click menu)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowEstMWs">
            <summary>Whether estimated MWs are displayed (on network map, or right-click menu)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowTelMWs">
            <summary>Whether telemetered MWs are displayed (on network map, or right-click menu)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowLimits">
            <summary>Whether limits are displayed (on network map, or right-click menu)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowPercentageLoading">
            <summary>Whether loading percentages (MVA/Normal limit) are displayed (on network map, or right-click menu)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowOneLines">
            <summary>Whether the user  call up one-lines</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowMoveMap">
            <summary>Whether the user can move the map around elements</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowNotes">
            <summary>Whether the user  Show notes</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowPropertyPage">
            <summary>Whether the user can call up the property page</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ProcessViolations">
            <summary>Whether the user  Show violations</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.SuggestCoordinateUpdates">
            <summary>Whether the user can suggest coordinate updates</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.PlayGame">
            <summary>Whether the user can play the situation awareness game</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowElementTypes">
            <summary>Whether the user  Show the list of elements within a substation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowKVLevels">
            <summary>Whether the user  Show the list of KV Levels within a substation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowDistance">
            <summary>Whether the user can see a line's distance</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowCounties">
            <summary>Whether counties are shown on substation displays</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowWebsite">
            <summary>Whether the website option is shown on substation displays</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowTEIDs">
            <summary>Whether TEIDs are shown</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.CreateNotes">
            <summary>Whether the user  create notes</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.SearchAvailable">
            <summary>Whether the search feature is available to the user</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.LassoStandard">
            <summary>Whether the user  draw a standard lasso</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.LassoInvisible">
            <summary>Whether the user  create an lasso including invisible elements</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.DisplayICCPISDLinks">
            <summary>Whether the user  Show EMS ICCP/ISD links</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.DisplayMMCommLinks">
            <summary>Whether the user  Show the communications status between MM and connected systems</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowEnergizedLines">
            <summary>Whether the user  Show energized lines</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowDeenergizedLines">
            <summary>Whether the user  Show de-energized lines</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowPartiallyEnergizedLines">
            <summary>Whether the user  Show partially energized lines</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.HistoricalTime">
            <summary>How far back the user  go in history</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.FutureTime">
            <summary>How far into the future the user  go</summary>        
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.MaxSpan">
            <summary>The maximum timespan for a query</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.HistoricalSelection">
            <summary>Whether the user can see mouseover details on a historical view</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.BoilerplateText">
            <summary>Whether boilerplate text needs to be added</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.LogActivity">
            <summary>Whether the user's activity should be logged</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.ShowUnitGenerationType">
            <summary>Whether the unit's generation type is shown</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.DefaultConnectors">
            <summary>Whether the default connectors should be used</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.CreateSavecase">
            <summary>Whether the user can create a savecase</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.DisplayProperties">
            <summary>Whether the user can access the display properties page</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.MaxZoom">
            <summary>The maximum zoom level for the network map</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Permissions.MinZoom">
            <summary>The miniumum zoom level for the network map.</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Permissions.#ctor(System.Xml.XmlElement)">
            <summary>
            Initialize the MM permissions
            </summary>
            <param name="xConfig">The configuration element for this permissions.</param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Generation_Type">
            <summary>
            Store information on generation types
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Generation_Type.EMSName">
            <summary>The EMS name for the type</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Generation_Type.Units">
            <summary>The collection of units of this generation type</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Generation_Type.Physical">
            <summary>Whether the generation type is physical</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Generation_Type.EMS">
            <summary>Whether the generation type is referenced in EMS</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Generation_Type.#ctor(System.String)">
            <summary>
            Create a new generation type
            </summary>
            <param name="Name">The name of the generation type</param>    
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Generation_Type.#ctor">
            <summary>
            Initialize a new generation type
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Generation_Type.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new generation type from an XML element
            </summary>
            <param name="xConfig"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Generation_Type.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new generation type from an XML element
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Generation_Type.ToString">
            <summary>
            Report the name of the generation type
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Generation_Type.MW">
            <summary>The MW rating for this generation type</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Generation_Type.Remaining">
            <summary>The MW remaining for this generation type</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Generation_Type.Capacity">
            <summary>The capacity for the generation type</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Generation_Type.ReadMW">
            <summary>
            Return the total MW output of all units of this class
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta">
            <summary>
            (C) 2013, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc.
            This class displays a form for editing deltas
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.Suggestions">
            <summary>Our collection of suggestions</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.nMap">
            <summary>Our pointer to the network map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.ActiveChanges">
            <summary>Our list of active changes</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.LineCoordinates">
            <summary>Our collection of line coordinates</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.#ctor(Macomber_Map.User_Interface_Components.NetworkMap.Network_Map)">
            <summary>
            Initialize our coordinate delta viewer
            </summary>
            <param name="nMap"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.HandleElementSelection(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.Data_Elements.MM_Coordinates,System.Drawing.Point,Macomber_Map.Data_Elements.MM_Element@)">
            <summary>
            Hanlde our element selection on our mouse down. If no element has been selected, just make sure the element is highlighted.
            </summary>
            <param name="SelectedElement"></param>
            <param name="Coordinates"></param>
            <param name="PixelLocation"></param>
            <param name="HighlightedElement"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.UpdateElement(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Update the status of our element
            </summary>
            <param name="SelectedElement"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.LookupCounty(System.Drawing.PointF)">
            <summary>
            Locate a substation's county by its latitude/longitude
            </summary>
            <param name="LatLng"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.ComputeAngle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Determine the angle between two lat/lng points
            </summary>
            <param name="LatLng1"></param>
            <param name="LatLng2"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.btnEmail_Click(System.Object,System.EventArgs)">
            <summary>
            Send out an email with our requested changes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.btnClose_Click(System.Object,System.EventArgs)">
            <summary>
            Close out our form, keeping all requested changes visible
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Handle our cancel button, restoring all values
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Override the closing of our form to hide it
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Coordinate_Delta.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Reserve">
            <summary>
            This class holds information on an MM Reserve element
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Reserve.Category">
            <summary>The category for this reserve</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Reserve.Name">
            <summary>The title of this element</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Reserve.EMSValue">
            <summary>The field for this value in the EMS system</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Reserve.DisplayItem">
            <summary>The display item for this element</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Reserve.Value">
            <summary>The current value for our element</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Reserve.#ctor(System.Xml.XmlElement,System.Windows.Forms.ListView,System.Boolean)">
            <summary>
            Initialize a new reserve element
            </summary>
            <param name="xElem"></param>
            <param name="Parent"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Reserve.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new reserve element
            </summary>
            <param name="xElem"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Reserve.#ctor(System.String,System.String)">
            <summary>
            Initialize a new reserve element
            </summary>
            <param name="Category"></param>
            <param name="Name"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Reserve.CreateDisplayItem(System.Windows.Forms.ListView)">
            <summary>
            Create a listview item for our element
            </summary>
            <param name="Parent"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Reserve.UpdateValue(System.Object)">
            <summary>        
            Update our value for this reserve item
            </summary>
            <param name="InValue"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Historical_Viewer_Date_SelectionForm">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D., ERCOT, Inc. All Rights Reserved
            This form provides a date/time popup for the user
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer_Date_SelectionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer_Date_SelectionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer_Date_SelectionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer_Date_SelectionForm.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initialize our viewer form
            </summary>
            <param name="EndTime"></param>
            <param name="StartTime"></param>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.Historical_Viewer_Date_SelectionForm.StartDate">
            <summary>
            Get/set the from: date
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.Historical_Viewer_Date_SelectionForm.EndDate">
            <summary>
            Get/set the to: date
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Substation_Display">
            <summary>
            This class holds the display parameters for a substation
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_DisplayParameter">
            <summary>
            This class covers the parameters by which a particular type is displayed
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_DisplayParameter.Permitted">
            <summary>Whether the user is permitted to see these violations</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_DisplayParameter.Name">
            <summary>The name of the display parameter</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DisplayParameter.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize the display parameter
            </summary>
            <param name="ElementSource">The XML element containing the parameter's information</param>        
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DisplayParameter.#ctor(System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            Initialize a display parameter by color and thickness
            </summary>
            <param name="ForeColor">The foreground color of the line</param>
            <param name="Thickness">The thickness of the line</param>
            <param name="Blinking">Whether the parameter is blinking</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DisplayParameter.#ctor">
            <summary>
            Initialize a display parameter 
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DisplayParameter.ToString">
            <summary>
            Return the name of the display parameter
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_DisplayParameter.ForeColor">
            <summary>The foreground color to display this event</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_DisplayParameter.Width">
            <summary>When drawing a substation or line of this type, what width/size should be shown</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_DisplayParameter.Blink">
            <summary>When drawing a substation or line of this type, should it blink?</summary>        
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_DisplayParameter.ForePen">
            <summary>Retrieve a pen for the view</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_DisplayParameter.DashStyle">
            <summary>The pen type for the line</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation_Display.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Create a new substation display parameter
            </summary>
            <param name="ElementSource">The XML Configuration element for the substation</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.ShowSubsOnLines">
            <summary>
            Whether substations should be shown if they're connected to a visible line
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.ShowSubstationVoltages">
            <summary>
            Whether substations should be drawn to show voltages
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.ShowSubstations">
            <summary>
            Whether substations should be shown on the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.GenerationColor">
            <summary>
            The color for a substation with generation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.LoadColor">
            <summary>
            The color for a substation with Load
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.ShowTotalGeneration">
            <summary>
            Whether the total generation should be displayed under a substation with generation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.ShowTotalHSL">
            <summary>
            Whether the total HSL should be displayed under a substation with HSL
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.ShowRemainingCapacity">
            <summary>
            Whether the remaining capacity should be displayed under a substation with generation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.ShowTotalLoad">
            <summary>
            Whether the total load should be displayed under a substation with loads
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.Name">
            <summary>
            Return the name of the variable
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.ShowAutoTransformersOut">
            <summary>
            Show auto-transformers that are out of service on the map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.ShowFrequencyControl">
            <summary>
            Show substations with frequency-controlled units
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.ShowSynchroscopes">
            <summary>
            Show substations with synchroscopes
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation_Display.HighlightMultipleLines">
            <summary>
            Highlight multiple lines (two or more lines connecting the same two substations)
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum">
            <summary>
            The collection of possible options for viewing the substation
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.All">
            <summary>Show all substations</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.Units">
            <summary>Show only substations with units</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.Loads">
            <summary>Show only substations with loads</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.LAARs">
            <summary>Show only substations with LAARs</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.Transformers">
            <summary>Show only substations with transformers</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.Capacitors">
            <summary>Show only substations with capacitors</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.CapacitorsOnline">
            <summary>Show only substations with capacitors that are online</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.CapacitorsAvailable">
            <summary>Show only substations with capacitors that are available</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.Reactors">
            <summary>Show only substations with reactors</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.ReactorsOnline">
            <summary>Show only substations with reactors that are online</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.ReactorsAvailable">
            <summary>Show only substations with reactors that are available</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.StaticVarCompensators">
            <summary>Show only substations with static var compensators</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation_Display.SubstationViewEnum.None">
            <summary>Show no substations</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Contingency">
            <summary>
            This class contains contingency definitions, and the collection of violations associated with it.
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Contingency.Description">
            <summary>
            The long name of the contingency definition
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Contingency.KVLevels">
            <summary>
            The collection of KV levels found within the contingency definition
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Contingency.Counties">
            <summary>
            The counties which are traversed by elements within the contingency definition
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Contingency.Substations">
            <summary>
            The substations that are included in the contingency definition
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Contingency.Position">
            <summary>
            The position of the contingency definition
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Contingency.Active">
            <summary>Whether the contingency is active</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Contingency.#ctor">
            <summary>
            Initialize a new CIM Contingency Definition
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Contingency.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM Contingency Definition
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Contingency.RollUpCountiesAndVoltages">
            <summary>
            Roll up our counties and voltages
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Contingency.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new CIM Substation
            </summary>
            <param name="ElementSource">The data source for this substation</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Contingency.#ctor(System.String)">
            <summary>
            Initialize a new contiengency
            </summary>
            <param name="ContingencyName">The name of the contingency</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Contingency.#ctor(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Initialize a new contiengency
            </summary>
            <param name="ContingencyName">The name of the contingency</param>
            <param name="ContingencyDescription">The description of the contingency</param>
            <param name="ContingencyPosition">The contingency position</param>
            <param name="Active">Whether the contingency is active</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Contingency.ToString">
            <summary>
            Report the name of the contingency
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_LogicalUnit">
            <summary>
            This class holds information on a logical unit
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Unit">
            <summary>
            This class defines a generator/unit
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.UnitType">
            <summary>The type of generating unit this is</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.UpcomingOutage">
            <summary>The next scheduled outage, if any</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.SCED_Basepoint">
            <summary>SCED base point</summary>       
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.LMP">
            <summary>Locational marginal price</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.MaxCapacity">
            <summary>The maximal capacity of the unit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.SPP">
            <summary>Settlement point price</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.HASL">
            <summary>High ancillary service limit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.HEL">
            <summary>High emergency limit </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.HSL">
            <summary>High sustained limit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.HDL">
            <summary>High dispatch limit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.LASL">
            <summary>Low ancillary service limit</summary>        
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.LEL">
            <summary>Low emergency limit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.LSL">
            <summary>Low sustained limit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.LDL">
            <summary>Low dispatch limit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.Estimated_MW">
            <summary>Estimated MW flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.Estimated_MVAR">
            <summary>Estimated MVAR flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.Estimated_MVA">
            <summary>Estimated MVA flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.Telemetered_MW">
            <summary>Telemetered MW flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.Telemetered_MVAR">
            <summary>Telemetered MVAR flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.Telemetered_MVA">
            <summary>The derived telemetered MVA of the load</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.Spinning_Capacity">
            <summary>The spinning capacity of the unit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.Physical_Responsive_Online">
            <summary>The online PRC of the unit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.Physical_Responsive_Sync">
            <summary>The PR sync</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.Blackstart_Capacity">
            <summary>The blackstart capacity of the unit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.RMR_Capacity">
            <summary>The RMR capacity of the unit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.LogicalUnits">
            <summary>Our collection of logical units</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.IsRC">
            <summary>Whether the unit is linked to a combined cycle unit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.UnitTEID">
            <summary>The TEID of the physical unit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.FrequencyControl">
            <summary>Whether the unit is on frequency control</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.IslandFreqCtrl">
            <summary>Whether the unit's island is on frequency control</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Unit.Frequency">
            <summary>The unit's frequency</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Unit.#ctor">
            <summary>
            Initialize a new CIM Unit
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Unit.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM Transformer
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Unit.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new CIM Unit
            </summary>
            <param name="ElementSource">The data source for this Unit</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Unit.UnitPercentageTextFromValues(System.Single)">
            <summary>
            Return the percentage this unit is loaded
            </summary>
            <param name="MW">The MW of the unit</param>        
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Unit.CompareUnits(Macomber_Map.Data_Elements.MM_Unit)">
            <summary>
            Compare two units
            </summary>
            <param name="Unit">The other unit</param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Unit.IsPhysical">
            <summary>Determine whether the unit is physical</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Unit.UnitPercentageText">
            <summary>
            Return the percentage this unit is running at
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Unit.UnitPercentage">
            <summary>
            Return the percentage of the unit
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_LogicalUnit.PhysicalUnit">
            <summary>The physical unit attached to this logical one</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_LogicalUnit.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new logical unit
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_LogicalUnit.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new logical unit
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_LogicalUnit.#ctor">
            <summary>
            Initialize a new logical unit
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_AlarmViolation_Type">
            <summary>
            This class covers the various types of alarms, events, violations, etc., including their display parameters and aggregate numbers
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.Violations">
            <summary>The collection of violations of this particular type</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.ViolationsByVoltage">
            <summary>The collection of violations of this particular type sorted by voltage</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.ViolationsByElementType">
            <summary>The collection of violations of this particular type sorted by element type</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.ViolationIndex">
            <summary>The index/priority of the violation (for use with the ImageList)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.Name">
            <summary>The name of the violation type</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation_Type._Acronym">
            <summary>The acronym of the violation</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize the violation type
            </summary>
            <param name="xE">The XML Element to parse for the violation</param>
            <param name="AddIfNew">Whether to add the new elements</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.RebuildViolationGraphic">
            <summary>
            Rebuild the graphic for a violation when its color changes
            </summary>       
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.ToString">
            <summary>
            Return the name of the violation type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.WorstViolation(Macomber_Map.Data_Elements.MM_AlarmViolation_Type[])">
            <summary>
            Determine the worst violation of a collection
            </summary>
            <param name="InViolations"></param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.ViolationViewer">
            <summary>
            How the violation type should be displayed in the violation viewer
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.SpeakViolation">
            <summary>
            Whether this violation should be spoken aloud
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.ViolationViewerDefault">
            <summary>
            Whether the violation is on in the violation viewer by default
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.MiniMap">
            <summary>
            How the violation should be displayed in the mini-map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.NetworkMap_Substation">
            <summary>
            Whether the violation type should be shown by its substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.NetworkMap_Line">
            <summary>
            Whether the violation type should be shown by its Line
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.OneLineElement">
            <summary>
            Whether the violation type should be shown in a one-line diagram
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.Acronym">
            <summary>
            The acronym for the violation type
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.Priority">
            <summary>
            The priority of the alarm
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.SimpleVisibility">
            <summary>
            The overall visibility of the alarm. If any are "when shown" or "always", return true.
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.DisplayModeEnum">
            <summary>The possible modes of display for a violation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.DisplayModeEnum.Never">
            <summary>Never display the violation</summary> 
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.DisplayModeEnum.WhenSelected">
            <summary>Display the violation when selected in the violation viewer</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation_Type.DisplayModeEnum.Always">
            <summary>Display the violation regardless of selection in the violation viewer</summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Historic.MM_Historic_DataPoint">
            <summary>
            This class provides an interface to a historic data point
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_DataPoint.Conn">
            <summary>Our historic connector</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_DataPoint.#ctor(Macomber_Map.Data_Connections.Historic.MM_Historic_Connector,System.String,System.String)">
            <summary>
            Initialize a new data point
            </summary>
            <param name="Conn"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_DataPoint.InterpolateValues(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Interpolate a number of points over a specified time range
            </summary>
            <param name="StartTime"></param>
            <param name="EndTime"></param>
            <param name="NumVariables"></param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Historic.MM_Historic_DataPoint.Title">
            <summary>The title of our historic data point</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Historic.MM_Historic_DataPoint.Description">
            <summary>The description for our historic data point</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Zone">
            <summary>
            This class holds zonal information (weather and load)
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Zone.Index">
            <summary>The integer locator for SQL CIM Servers</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Zone.Name">
            <summary>The name of the zone</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Zone.ElemType">
            <summary>The type of wone</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Zone.Substations">
            <summary>The collection of substations within this zone</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Zone.DrawColor">
            <summary>The drawing color for the zone</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Zone.RandomColor">
            <summary>Our random color generator</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Zone.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new weather or load zone.
            </summary>
            <param name="ElementSource">The data row containing the source</param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Zone.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Create a new zone from XML
            </summary>
            <param name="ZoneSource">The XML configuration element for the zone</param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Zone.#ctor(System.String,System.Int32)">
            <summary>
            Create a new zone with specified integer value and name
            </summary>
            <param name="Name">The name</param>
            <param name="Index">The integer value</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Zone.ToString">
            <summary>
            Return an easy-to-read name for our zone
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Zone.WorstViolationOverall">
            <summary>
            Return the worst violation overall, regardless of its visibility
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Boundary">
            <summary>
            This class contains information on a boundary/region (e.g., State, County)
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.Max">
            <summary>The largest points within the boundary</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.Min">
            <summary>The smallest points within the boundary</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.Centroid">
            <summary>The centroid of the boundary</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.Coordinates">
            <summary>The series of coordinates that comprise the boundary</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.Website">
            <summary>The website (if any) for the boundary</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.HitTestPath">
            <summary>The graphics path used for hit testing</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.StateDisplay">
            <summary>The display settings to be used for drawing the state</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.CountyDisplay">
            <summary>The display settings to be used for drawing the county</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.WeatherStations">
            <summary>The collection of weather stations within the county</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.WeatherAlerts">
            <summary>Weather alerts for the location</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.WeatherForecast">
            <summary>The weather forecast for the region</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.Index">
            <summary>The SQL-based locator for the boundary.</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Boundary.Substations">
            <summary>The collection of substations within this boundary.</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Boundary.#ctor">
            <summary>
            Initialize a new boundary
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Boundary.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
             <summary>
             Create a boundary using a data reader
             </summary>
            <param name="sRd">SQL Data reader</param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Boundary.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new boundary
            </summary>
            <param name="xE"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Boundary.RoundedPoint(System.String,System.String,System.Int32)">
            <summary>
            Convert a string to a rounded decimal point
            </summary>
            <param name="X">The X coordinate</param>
            <param name="Y">The Y coordinate</param>
            <param name="NumDecPlaces">The number of decimal places</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Boundary.BoundaryToXML(System.Xml.XmlDocument)">
            <summary>
            Convert the boundary into an XML element
            </summary>
            <param name="xDoc">The XML Document used to create the element</param>
            <returns>The newly-created element</returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Boundary.HitTest(System.Drawing.PointF)">
            <summary>
            Test to see whether the specified lat/long is within this boundary
            </summary>
            <param name="TestPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Boundary.HitTest(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Determine whether a line is contained within, or intersects the hit test path
            </summary>
            <param name="StartLine"></param>
            <param name="EndLine"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Boundary.ToString">
            <summary>
            Retrieve the name of the boundary
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Boundary.CheckVisibility(Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            Determine whether the boundary is visible
            </summary>
            <param name="Coord">The coordinates to check against</param>
            <returns>Whether or not the boundary could possibly be visible on the screen</returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.Max_X">
            <summary>The largest X within the boundary</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.Max_Y">
            <summary>The largest Y within the boundary</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.Min_X">
            <summary>The smallest X within the boundary</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.Min_Y">
            <summary>The smallest Y within the boundary</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.Centroid_X">
            <summary>The centroid X within the boundary</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.Centroid_Y">
            <summary>The centroid Y within the boundary</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.Average_pU">
            <summary>
            Return the average voltage deviation 
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.LargestAngle">
            <summary>
            Determine the largest absolute angle in the county
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.AngleStdDev">
            <summary>
            Determine the standard deviation of angle differentials in the county
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.LMPStdDev">
            <summary>
            Determine the standard deviation of angle differentials in the county
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.LMPAverage">
            <summary>
            Determine the average LMP        
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.LMPMaximum">
            <summary>
            Determine the average LMP        
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.LMPMinimum">
            <summary>
            Determine the average LMP        
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.Worst_pU">
            <summary>
            Retrieve the worst pU for the boundary
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Boundary.DisplayParameter">
            <summary>
            Return the appropriate display parameters for the boundary
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Load">
            <summary>
            This class defines a generator/unit
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Load.UpcomingOutage">
            <summary>Any upcoming outages</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Load.Estimated_MW">
            <summary>The estimated MW of the load/// </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Load.Estimated_MVAR">
            <summary>The estimated MVAR of the load/// </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Load.Estimated_MVA">
            <summary>The estimated MVA of the load</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Load.Telemetered_MW">
            <summary>The telemetered MW of the load</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Load.Telemetered_MVAR">
            <summary>The telemetered MVAR of the load</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Load.Telemetered_MVA">
            <summary>The derived telemetered MVA of the load</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Load.#ctor">
            <summary>
            Initialize a new CIM load
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Load.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM Transformer
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Load.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new CIM Load
            </summary>
            <param name="ElementSource">The data source for this load</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Load.CompareLoads(Macomber_Map.Data_Elements.MM_Load)">
            <summary>
            Compare two loads, first by their current MW
            </summary>
            <param name="Ld"></param>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Communication_Status">
            <summary>
            This class displays a communications status button that will update depending on the state of events
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Communication_Status.EMSStatus">
            <summary>The connection between the EMS system and downstream systems</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Communication_Status.QueryStatus">
            <summary>The connection between Macomber Map and its queries</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Communication_Status.ServerStatus">
            <summary>The worst state of the connections</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Status.#ctor">
            <summary>
            Initialize a new communications status box
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Status.SetEMSStatus(System.Int32)">
            <summary>
            Update the EMS status
            </summary>
            <param name="EMSStatus"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Status.SetServerStatus(System.Int32)">
            <summary>
            Update the Server status
            </summary>
            <param name="ServerStatus"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Status.SetQueryAndServerStatus(System.Int32,System.Int32)">
            <summary>
            Update the query status
            </summary>
            <param name="QueryStatus"></param>
            <param name="ServerStatus"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Status.DrawLetter(System.Drawing.Graphics,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw a status letter
            </summary>
            <param name="g"></param>
            <param name="Letter"></param>
            <param name="Left"></param>
            <param name="Top"></param>
            <param name="Width"></param>
            <param name="Height"></param>
            <param name="Status"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Status.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle painting of the comm status
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Status.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle the background painting
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Communication_Status.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Status.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Status.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Communication_Status.SafeRefresh">
            <summary>Safely refresh the communication window</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.Training.MM_Training">
            <summary>
            (C) 2013, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc. All Rights Reserved
            This class provides the central training interface
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.rnd">
            <summary>Our random number generator</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.Levels">
            <summary>The collection of training levels</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.CurrentLevel">
            <summary>The current level</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.PriorLevel">
            <summary>The prior level for training</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.TargetElement">
            <summary>The target element the user should be shown</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.QuestionText">
            <summary>The instructions to be presented to the user</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.AnswerText">
            <summary>The response to the user's click</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.Score">
            <summary>The user's current score</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.LevelScore">
            <summary>The user's current score</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.TimePlayStart">
            <summary>When the user stared playing the game</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.TimeQuestionPresented">
            <summary>The time the question was presented</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.nMap">
            <summary>The network map</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.QuestionsAnswered">
            <summary>The current question being presented to the user</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.QuestionsRight">
            <summary>The current number of questions the user has gotten right</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.QuestionsWrong">
            <summary>The current number of questions the user has gotten wrong</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.QuestionFont">
            <summary>The font for questions</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.AnswerFont">
            <summary>The font for questions</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.QuestionTextColor">
            <summary>The color for the question text</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.CorrectAnswerColor">
            <summary>The color for the question text</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.IncorrectAnswerColor">
            <summary>The color for the question text</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.TrainingMode">
            <summary>The current training mode</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.AvailableElements">
            <summary>The collection of available elements to be chosen from</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.CorrectAnswer">
            <summary>The correct lat/long the user should see</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.UserAnswer">
            <summary>The lat/long the user answered.</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Training.#ctor(System.Xml.XmlElement)">
            <summary>
            Initialize our training application from a configuration
            </summary>
            <param name="xElem"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Training.#ctor(System.Data.Common.DbCommand,System.Data.Common.DbDataReader)">
            <summary>
            Initialize our traning from a database command that will retrieve all levels
            </summary>
            <param name="dCmd"></param>
            <param name="dRd"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Training.InitiateTraining(Macomber_Map.User_Interface_Components.NetworkMap.Network_Map)">
            <summary>
            Start a training session
            </summary>
            <param name="nMap">The network map</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Training.StartLevel">
            <summary>
            Start a level by doing all the right things
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Training.PrepareLevel">
            <summary>
            Prepare our level for questions.
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Training.NextQuestion">
            <summary>
            Determine our next question
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Training.CheckTimes">
            <summary>
            If we're currently training, check to see whether our time requires a notification, shift to next, etc.
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Training.MM_Training.HandleResponse(System.Drawing.PointF)">
            <summary>
            Handle the user's response
            </summary>
            <param name="LatLng"></param>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Training.MM_Training.TimeSincePresentation">
            <summary>Report how many seconds it's been since a question was presented</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.Training.MM_Training.enumTrainingMode">
            <summary>The current status of training</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.enumTrainingMode.NotTraning">
            <summary>Training is not currently happening</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.enumTrainingMode.QuestionAsked">
            <summary>The question has been asked, and the countdown timer is going</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.enumTrainingMode.AnswerCorrect">
            <summary>The user answered correctly, and are being presented with the response</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.enumTrainingMode.AnswerWrong">
            <summary>The user answered incorrectly, and are being shown the correct response</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.enumTrainingMode.UserFailed">
            <summary>The user failed the training</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Training.MM_Training.enumTrainingMode.UserWon">
            <summary>The user won the training</summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.MM_Type_Finder">
            <summary>
            This class allows any types within MM to be located
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Type_Finder.LocateType(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Locate a type by its name
            </summary>
            <param name="TypeName">The type to search for</param>
            <param name="Enums">Any custom enumerations (if any)</param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Connections.MM_Type_Finder.Namespaces">
            <summary>
            The list of connected namespaces
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.MM_Pipe">
            <summary>
            This class establishes a named pipe for inter-process communication
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Pipe.CreateNamedPipe(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Create a named pipe for communications between Macomber Map and other processes
            </summary>
            <param name="pipeName"></param>
            <param name="dwOpenMode"></param>
            <param name="dwPipeMode"></param>
            <param name="nMaxInstances"></param>
            <param name="nOutBufferSize"></param>
            <param name="nInBufferSize"></param>
            <param name="nDefaultTimeOut"></param>
            <param name="lpSecurityAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Pipe.ConnectNamedPipe(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IntPtr)">
            <summary>
            Connect to a named pipe
            </summary>
            <param name="hNamedPipe"></param>
            <param name="lpOverlapped"></param>
            <returns></returns>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Pipe.Map">
            <summary>The map to be interfaced with</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Pipe.CreateFile(System.String,System.UInt32,System.UInt32,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Create a file handle using native functions
            </summary>
            <param name="pipeName"></param>
            <param name="dwDesiredAccess"></param>
            <param name="dwShareMode"></param>
            <param name="lpSecurityAttributes"></param>
            <param name="dwCreationDisposition"></param>
            <param name="dwFlagsAndAttributes"></param>
            <param name="hTemplate"></param>
            <returns></returns>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Pipe.CommandToParse">
            <summary>The command to be parsed by the pipe</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Pipe.Initialize(Macomber_Map.MacomberMap)">
            <summary>
            Initialize the pipe handler to prepare for input
            </summary>
            <param name="Map">The map to interface with</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Pipe.SendCommand(System.String)">
            <summary>
            Attempt to establish a pipe and send a command.
            </summary>
            <param name="Command"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Pipe.PipeHandler(System.Object)">
            <summary>
            This thread processes the pipe
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Pipe.ProcessCommand(System.String[])">
            <summary>
            Process the command
            </summary>
            <param name="InLine"></param>
        </member>
        <member name="T:Macomber_Map.Data_Connections.MM_DataQuery">
            <summary>
            This abstract class contains the collection of data queries, including their refresh time and last refresh.
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataQuery.Guid">
            <summary>The GUID of the query</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataQuery.RefreshTime">
            <summary>How often the query should be refreshed (in seconds)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataQuery.QueryStatus">
            <summary>The current status of the query</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataQuery.LastRefresh">
            <summary>The time of the item's last refresh</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataQuery.LastSpan">
            <summary>How much time the data query took last time</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataQuery.QueryName">
            <summary>The name of the query</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_DataQuery.Priority">
            <summary>The priority of the query. The lower the number, the higher the priority.</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataQuery.ToString">
            <summary>
            Return the name of the query on conversion
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_DataQuery.#ctor(System.Int32)">
            <summary>
            Create a new data query
            </summary>
            <param name="Priority">The priority for the query</param>
        </member>
        <member name="P:Macomber_Map.Data_Connections.MM_DataQuery.SinceLast">
            <summary>The amount of time since the last refresh</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.UserInteraction_Viewer">
            <summary>
            This class holds information on a series of events associated with a user switch
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.UserName">
            <summary>The name of the user engaging in switching actions</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.AssociatedEvent">
            <summary>The event associated with our user</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.PriorEvent">
            <summary>Track a prior event being triggered</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.PopupMenu">
            <summary>Our popup menu</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.#ctor(System.String,System.DateTime)">
            <summary>
            Initialize a new user event tracking window
            </summary>
            <param name="UserName"></param>
            <param name="EventTime"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Handle the closing of our form to hide instead
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.ShowForm">
            <summary>
            Safely show our display
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.OnLostFocus(System.EventArgs)">
            <summary>
            Handle the UI viewer losing focus
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.AddEventWithoutNotification(System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add an event without updating the core system (just paste in display)
            </summary>
            <param name="EventTime"></param>
            <param name="Station"></param>
            <param name="ElemType"></param>
            <param name="Name"></param>
            <param name="Action"></param>
            <param name="OldValue"></param>
            <param name="NewValue"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.AddEvent(System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add an event to our user space
            </summary>
            <param name="EventTime"></param>
            <param name="Station"></param>
            <param name="ElemType"></param>
            <param name="Name"></param>
            <param name="Action"></param>
            <param name="NewValue"></param>
            <param name="OldValue"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.OnResize(System.EventArgs)">
            <summary>
            Handle the resizing of our user interaction viewer display
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.lvHistory_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the mouse click on our component
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.lvHistory_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the left mouse double-click by opening up our one-line
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.UserInteraction_Sorter">
            <summary>
            This class holds infromation on a comparer for user interaction items
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.UserInteraction_Sorter.SortColumn">
            <summary>Our column used for sorting</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.UserInteraction_Sorter.Ascending">
            <summary>Ascending/descending</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.UserInteraction_Sorter.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initialize a new user interaction sorter
            </summary>
            <param name="SortColumn"></param>
            <param name="Ascending"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.UserInteraction_Sorter.ColumnClick(System.Int32)">
            <summary>
            Handle a column click event
            </summary>
            <param name="ColumnNumber"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.UserInteraction_Sorter.Compare(System.Object,System.Object)">
            <summary>
            Compare two columns
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.UserInteraction_Viewer.UserInteraction">
            <summary>
            This class holds information on the user interaction
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator">
            <summary>
            This structure holds information on a value locator for an element, by attribute and index
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator.Attribute">
            <summary>The attribute associated with our element</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator.Index">
            <summary>The index of our attribute (e.g., first/second substation for a line, voltage for a winding)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator.ValueType">
            <summary>The attribute associated with our element</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator.#ctor(MM_Communication.Elements.MM_Element.enumAttributes,System.Byte,MM_Communication.Elements.MM_Element.enumValueType)">
            <summary>
            Intiialize a new value locator
            </summary>
            <param name="Attribute"></param>
            <param name="Index"></param>
            <param name="ValueType"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator.Equals(Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator)">
            <summary>
            Determine whether two value locators are equal
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator.Equals(System.Object)">
            <summary>
            Determine whether two value locators are equal
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator.CompareTo(Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator)">
            <summary>
            Compare two element types
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator.CompareTo(System.Object)">
            <summary>
            Compare two value locators
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator.GetHashCode">
            <summary>
            Report a hash code for our item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_Value_Locator.ToString">
            <summary>
            Report a human-readable string for our element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc. All Rights Reserved
            This class provides a holder for value items on an element, and autosizes them to fit in a standard menu
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.ShowEstimates">
            <summary>Whether to show estimated values</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.ShowTelemetry">
            <summary>Whether to show telemetered values</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.Fields">
            <summary>The name of our fields (e.g., MW, MVA)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.Headers">
            <summary>The name of our headers (e.g., Stn1, Stn2)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.EstValues">
            <summary>Our collection of estimated values</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.TelemValues">
            <summary>Our collection of telemetered values</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.ParentMenu">
            <summary>Our MM parent menu instance</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.SpaceWidth">
            <summary>The width of our space</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.#ctor(Macomber_Map.User_Interface_Components.MM_Popup_Menu)">
            <summary>
            Initialize a new popup menu item collector
            </summary>
            <param name="ParentMenu"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.AddValue(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Add our value in as necessary, and update our fields as present
            </summary>
            <param name="Field"></param>
            <param name="Header"></param>
            <param name="IsEst"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.AddMenuItems(System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Add our menu items out to the display
            </summary>
            <param name="ItemCollection"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.GetSpaces(System.Double)">
            <summary>
            Determine the number of spaces needed to meet our target point
            </summary>
            <param name="TargetWidth"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu_ValueItems.GetString(System.String,System.Int32)">
            <summary>
            Return a string of the proper length
            </summary>
            <param name="InText"></param>
            <param name="TargetWidth"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Form_Builder">
            <summary>
            This class contains the holding form for a display, including its building and architectural parameters
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.BaseElement">
            <summary>The element at the seed of the display</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.nMap">
            <summary>Access to the network map, if desired</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.FormThread">
            <summary>The thread in which the form should be run</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.BaseData">
            <summary>The base data for the display</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.grpMiniMap">
            <summary>The group boxes holding some standard controls on the left</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.grpSummary">
            <summary>The group boxes holding some standard controls on the left</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.grpViolations">
            <summary>The group boxes holding some standard controls on the left</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.viewMiniMap">
            <summary>The mini-map control</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.viewSummary">
            <summary>The element summary control</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.viewViolations">
            <summary>The violation viewer control</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.viewDataTable">
            <summary>The data table </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.viewPropertyPage">
            <summary>The property page</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.SearchText">
            <summary>The search text </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.viewOneLine">
            <summary>The one-line viewer</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.#ctor">
            <summary>
            Initialize the form builder and its components
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.CompleteForm(System.Collections.Generic.List{Macomber_Map.Data_Elements.MM_Line},Macomber_Map.Data_Elements.MM_Element[],System.Drawing.PointF,System.Drawing.PointF,System.Windows.Forms.Control)">
            <summary>
            Complete the elements for the form.
            </summary>
            <param name="BorderingLines">Lines bordering around the substation or region</param>
            <param name="BaseElements">The base elements that comprise this view</param>
            <param name="BorderTopLeft">The top-left coordinate from the lassoed region</param>
            <param name="BorderBottomRight">The bottom-right coordinate from the lassoed region</param>
            <param name="MiddlePaneControl">The control to be drawn in the middle pane</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Lasso_Display(Macomber_Map.Data_Elements.MM_Boundary,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,System.Boolean)">
            <summary>
            Create a new lasso display, by going through all substations and lines within a county
            </summary>
            <param name="County"> The County to be rendered</param>
            <param name="nMap">The network map that called the lasso display</param>        
            <param name="ControlDown">Whether the control key was down when the lasso was called</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Lasso_Display(System.Drawing.PointF,System.Drawing.PointF,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,System.Boolean)">
            <summary>
            Create a new lasso display, by going through all substations and lines within the region
            </summary>
            <param name="TopLeft">The top-left coordinate</param>
            <param name="BottomRight">The bottom-right coordinate</param>
            <param name="nMap">The network map that called the lasso display</param>        
            <param name="ControlDown">Whether the control key was down when the lasso was called</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Lasso_Display(System.Collections.Generic.List{System.Drawing.PointF},Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,System.Boolean)">
            <summary>
            Create a new lasso display, by going through all substations and lines within the region
            </summary>
            <param name="LassoPoints">The collection of lasso points</param>
            <param name="nMap">The network map that called the lasso display</param>        
            <param name="ControlDown">Whether the control key was down when the lasso was called</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Lasso_Build(System.Object)">
            <summary>
            Initiate a new lasso view in the thread
            </summary>
            <param name="Parameters">Parameters for the display</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Lasso_Complete(Macomber_Map.Data_Elements.MM_Boundary,System.Boolean)">
            <summary>
            Complete the lasso rendering
            </summary>
            <param name="Boundary">The county to be checked for </param>
            <param name="ControlDown">Whether the control key is down</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Lasso_Complete(Macomber_Map.Data_Elements.MM_Island,System.Boolean)">
            <summary>
            Complete the lasso rendering
            </summary>
            <param name="Island">The island to be checked for </param>
            <param name="ControlDown">Whether the control key is down</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Lasso_Complete(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Complete the lasso rendering
            </summary>
            <param name="StartPoint">The starting lat/lng</param>
            <param name="EndPoint">The ending lat/lng</param>
            <param name="ControlDown">Whether the control key is down</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Lasso_GetMoreElements">
            <summary>
            For the lasso, when the user clicks (get more...), go into the database to retrieve all elements we haven't gotten already.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Lasso_Complete(System.Collections.Generic.List{System.Drawing.PointF},System.Boolean)">
            <summary>
            Complete the lasso rendering
            </summary>
            <param name="LassoPoints">The collection of lasso points</param>
            <param name="ControlDown">Whether the control key is down</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.CheckPoint(System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Make sure pt1 is always less than pt2, and if not, swap them.
            </summary>
            <param name="pt1">The first point</param>
            <param name="pt2">The second point</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.PropertyPage(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map)">
            <summary>
            Initiate a new property page display, and show
            </summary>
            <param name="BaseElement">The root element of the one-line</param>
            <param name="nMap">The network map</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.PropertyPage_Build(System.Object)">
            <summary>
            Initiate a new one-line display in the thread
            </summary>
            <param name="Parameters">Parmeters for the display</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.PropertyPage_Complete(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map)">
            <summary>
            Complete the steps to completing the one-line UI.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.OneLine_Display(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map)">
            <summary>
            Initiate a new one-line display, and show.
            </summary>
            <param name="BaseElement">The root element of the one-line</param>
            <param name="nMap">The network map associated with the one-line</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.OneLine_Build(System.Object)">
            <summary>
            Initiate a new one-line display in the thread
            </summary>
            <param name="Parameters">Parmeters for the display</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.OneLine_Complete(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.Data_Connections.Generic.MM_Data_Source)">
            <summary>
            Complete the steps to completing the one-line UI.
            </summary>
            <param name="DataSource">The active data source for our element</param>
            <param name="BaseElement">The base element for the one-line</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.viewOneLine_OneLineLoadCompleted(System.Object,System.EventArgs)">
            <summary>
            When a one-line has finished loading, update our data base
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Handle closing by shutting down all queries
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.viewOneLine_OneLineDataUpdated(System.Data.DataSet)">
            <summary>
            Handle the updated data coming in
            </summary>
            <param name="OutData">The incoming data set</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.OneLine_OneLineElementClicked(Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the user's clicking on a one-line element
            </summary>
            <param name="ClickedElement"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.viewSummary_TypeSelected(System.Data.DataTable,Macomber_Map.Data_Elements.MM_KVLevel)">
            <summary>
            Handle a new selection for the type summary
            </summary>
            <param name="SelectedTable">The table selected</param>
            <param name="SelectedKVLevel">The KV Level selected</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.LassoOneLine_SplitterMoved(System.Object,System.EventArgs)">
            <summary>
            Handle the splitter moving for the one-line and lasso views
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.OnShown(System.EventArgs)">
            <summary>
            Whent the form is first shown, hide it.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.ElementSummaryDisplay(System.Windows.Forms.ToolStripMenuItem,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map)">
            <summary>
            Initiate a new element summary display
            </summary>
            <param name="nMap"></param>
            <param name="ESWin"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.ElementSummary_Build(System.Object)">
            <summary>
            Initiate a new search display in the thread
            </summary>
            <param name="Parameters">Parmeters for the display</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.SearchDisplay(Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initiate a new one-line display, and show.
            </summary>        
            <param name="nMap">The network map associated with the one-line</param>
            <param name="TextToSearch">The text to search for</param>
            <param name="ControlPressed">Whether control is pressed</param>
            <param name="AltPressed">Whether alt is pressed</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Search_Build(System.Object)">
            <summary>
            Initiate a new search display in the thread
            </summary>
            <param name="Parameters">Parmeters for the display</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Search_Complete(System.Boolean,System.Boolean)">
            <summary>
            Complete the steps to completing the one-line UI.
            </summary>
            <param name="AltPressed"></param>
            <param name="ControlPressed"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.TestPoint(System.Drawing.PointF,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Check a point to see whether its latitude and/or longitude should replace the min and/or max.
            </summary>
            <param name="LatLng"></param>
            <param name="TopLeft"></param>
            <param name="BottomRight"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.SetRighthandPane(System.Windows.Forms.Control)">
            <summary>
            Set the right-hand pane for the display
            </summary>
            <param name="RightPane">The control to insert into the right-hand pane</param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Form_Builder.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Form_Builder.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.DataSet_Base">
            <summary>
            This class provides the bases for an underlying data set for a control, including its saving, loading, updating, etc. 
            In order to allow the controls to function across a wide variety of controls, this class is assigned to the Tag element as an object 
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.DataSet_Base.Data">
            <summary>The dataset containing information for the display component</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.DataSet_Base.BaseElement">
            <summary>The base element (if any) driving the display</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.DataSet_Base.ElementsByTEID">
            <summary>Our collection of elements by TEID</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.DataSet_Base.#ctor(System.String)">
            <summary>
            Initialize a new dataset base using the specified name for the window
            </summary>
            <param name="DisplayName"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.DataSet_Base.AddDataElement(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Add a data element to the appropriate table
            </summary>
            <param name="Elem">The element to be added</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.DataSet_Base.RefreshData(System.Data.DataRow,Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Refresh the data for a data row
            </summary>
            <param name="RowToUpdate">The row to be modified</param>
            <param name="Elem">The element associated with the row</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.DataSet_Base.UpdateRowData(System.Data.DataRow,System.String,System.Type,System.Object)">
            <summary>
            Update a row's data with specified parameters
            </summary>
            <param name="RowToUpdate">The data row to be updated</param>
            <param name="ColName">The name of the column</param>
            <param name="OutType">The outgoing type of the column</param>
            <param name="OutValue">The outgoing value of the column</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.DataSet_Base.Clear">
            <summary>
            Clear our collection of elements
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.DataSet_Base.Dispose">
            <summary>
            Dispose of the data set base
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Communication_Viewer">
            <summary>
            Display the communications state between the server and other components
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Communication_Viewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Communication_Viewer.CommStatus">
            <summary>The key indicators text box showing the summary of communication status</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Communication_Viewer.Queries">
            <summary>The collection of queries running</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Communication_Viewer.StartTime">
            <summary>The time when the comm viewer was instantiated</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Communication_Viewer.DataConnectors">
            <summary>Our collection of data connectors</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Communication_Viewer.Groups">
            <summary>Our collection of list view groups</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.#ctor(Macomber_Map.User_Interface_Components.Communication_Status)">
            <summary>
            Initialize the communication viewer
            <param name="CommStatus">The key indicators text box showing the summary of communication status</param>
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.OnShown(System.EventArgs)">
            <summary>
            Whent the form is first shown, hide it.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.CreateInstanceInSeparateThread(Macomber_Map.User_Interface_Components.Communication_Status)">
            <summary>
            Create a seperate thread to run the communications viewer, and run it.
            </summary>
            <param name="CommStatus">The communications status label</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.InstantiateForm(System.Object)">
            <summary>
            Instantiate a comm viewer
            </summary>
            <param name="state">The state of the form</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.SetControls">
            <summary>
            Assign the data integration layer to the control, and start the query
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Handle the closing event by instead hiding the window
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.UpdateDisplay(System.Object,System.EventArgs)">
            <summary>
            Every interval, update all of our statuses.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.UpdateLogText">
            <summary>
            Update the log text for mm
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.tcMain_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Handle the drawing of our tabs, based on our target 
            Thanks to http://stackoverflow.com/questions/2107463/is-there-a-way-to-color-tabs-of-a-tabpage-in-winforms for how to selectively color the tabs
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.UpdateServerStatusText">
            <summary>
            Update the server status text for server status tab | added 20130607 - mn
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.UpdateCommunicationsLinkages">
            <summary>
            Update the linkage status between the core systems and their data connections
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.CheckState(System.Data.ConnectionState,System.Windows.Forms.ToolStripLabel,System.Int32@)">
            <summary>
            Update a label based on the data connector's state
            </summary>
            <param name="State"></param>
            <param name="Label"></param>
            <param name="QueryStatus"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.UpdateMMCommStatus">
            <summary>
            Update the communications status between MM and the outside
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.ssMem_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            Run the garbage collector upon request
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.btnSpeech_Click(System.Object,System.EventArgs)">
            <summary>
            Update the speech preferences
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.ReportCommStatus">
            <summary>
            Report the status of our communications window
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Communication_Viewer.lbLog_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            When we double-click on an item, pop up a message box w/ needed info
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.Communication_Viewer.Server_Status_Details_Text">
            <summary>
            Get and set the server tab alert level and text for alert level | added 20130607 - mn
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.Communication_Viewer.Server_Status_Details_Level">
            <summary>
            Detailed server status
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.Weather.MM_WeatherStation">
            <summary>
            This class holds the collection of relevant weather stations for a county
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.StationID">
            <summary>The ID of the weather station</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.Description">
            <summary> The title of the weather station</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.LatLng">
            <summary>The latitude/longitude of the weather station</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.Elevation">
            <summary>The elevation of the weather site</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.Temperature">
            <summary>The temperature as recorded by the weather station</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.Humidity">
            <summary>The relative humidity at the weather station</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.WindDirection">
            <summary>The direction of the wind</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.WindSpeed">
            <summary>The speed of the wind</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.Pressure">
            <summary>Atmospheric pressure</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.Summary">
            <summary>The summary of the weather (e.g., overcast, raining)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.Dewpoint">
            <summary>The dew point</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.QueryPrepend">
            <summary>The query prepend for the weather station</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.#ctor(System.Xml.XmlElement)">
            <summary>
            Initialize a new weather station
            </summary>
            <param name="xE">The XML Element containing the station's ID and lat/long</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.UpdateWeather">
            <summary>
            Update the weather for this station
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.ConvertToSingle(System.String)">
            <summary>
            Convert a string to a single-precision number
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.Weather.MM_WeatherStation.XMLString">
            <summary>
            Get this weather station's information in XML format
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Line">
            <summary>
            This class contains information on lines
            Copyright © 2008, Electric Reliability Council of Texas, Michael E. Legatt, Ph.D.
            This document may not be modified or reused without the express permission of the owner.
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.Counties">
            <summary>The counties this line passes through</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.IsBlackstart">
            <summary>Whether the line is a blackstart component</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.IsZBR">
            <summary>Whether the line is a ZBR</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.ConnectedStations">
            <summary>The two substations the line connects</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.Estimated_MW">
            <summary>Estimated MW flow at each terminal</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.Telemetered_MW">
            <summary>Telemetered MW flow at each terminal</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.Estimated_MVAR">
            <summary>Estimated MVAR flow at each terminal</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.Telemetered_MVAR">
            <summary>Telemetered MVAR flow at each terminal</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.Estimated_MVA">
            <summary>Estimated MVA flow at each terminal</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.Telemetered_MVA">
            <summary>Telemetered MVA flow at each terminal</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.Limits">
            <summary>The normal, 2 Hour and 15-Minute limits on the line</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.LineTEID">
            <summary>The TEID of the cim:Line portion of the element</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.UpcomingOutage">
            <summary>The next schedeuld outage on the line</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line._Coordinates">
            <summary>The coordinates that handle the line's routing</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.FlipSides">
            <summary>Whether or not substations 1 and 2 should be flipped for optimal viewing</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.IsSeriesCompensator">
            <summary>Whether the line is connected to a series compensator</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Line.IsMultipleSegment">
            <summary>Whether the line is part of a multiple segment</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Line.#ctor">
            <summary>
            Initialize a new CIM Line
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Line.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new CIM Line
            </summary>
            <param name="ElementSource">The data source for this substation</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Line.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM Line
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Line.LineDisplay(System.Collections.Generic.Dictionary{Macomber_Map.Data_Elements.MM_AlarmViolation,System.Windows.Forms.ListViewItem},System.Object,System.Boolean)">
            <summary>
            Determine the appropriate display parameter for the line
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Line.MenuDescription(Macomber_Map.Data_Elements.MM_Substation)">
            <summary>
            Produce a description for this line, based on the core station (e.g., Line X to [other station])
            </summary>
            <param name="CoreStation"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Line.CalculateMVA(System.Single,System.Single)">
            <summary>
            Dynamically calculate MVA from MW and MVAR
            </summary>
            <param name="MW"></param>
            <param name="MVAR"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Line.LinePercentageTextFromValues(System.Single,System.Single)">
            <summary>
            Return the percentage this line is loaded
            </summary>
            <param name="MVA1">The first MVA terminal reading</param>
            <param name="MVA2">The second MVA terminal reading</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Line.MultiLinePercentageText(System.Collections.Generic.IEnumerable{Macomber_Map.Data_Elements.MM_Element})">
            <summary>
            Report the MVA flows of each of the lines
            </summary>
            <param name="Lines"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Line.CheckVisibility(Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            Determine whether a line is visible on the screen
            </summary>
            <param name="Coord">The coordinates to check against</param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.Substation1">
            <summary>
            Get the first substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.Substation2">
            <summary>
            Get the second substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.NormalLimit">
            <summary>The normal limit of our line</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.EmergencyLimit">
            <summary>The 2 hour limit of our line</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.LoadshedLimit">
            <summary>The 15 minute limit of our line</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.StationCounties">
            <summary>Return a the two counties to which the line is connected</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.Coordinates">
            <summary>
            The coordinates of our line
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.Length">
            <summary>
            Return the estimated length of the line
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.Midpoint">
            <summary>
            Determine the midpoint of the line
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.CenterLatLong">
            <summary>
            Return the center of the line
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.LineEnergizationState">
            <summary>
            Return the energization state of the line
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.LinePercentageText">
            <summary>
            Return the percentage this line is loaded
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.LinePercentage">
            <summary>
            Returns the percentage loading of a line's MVA against its normal limit
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.MVAFlowDirection">
            <summary>
            Return the substation to which the MVA flow is heading
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.MVARFlowDirection">
            <summary>
            Return the substation to which the MVAR flow is heading
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.MWFlowDirection">
            <summary>
            Return the substation to which the flow is heading
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.MWFlow">
            <summary>
            Return the largest MW flow (in absolute values)
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.MVAFlow">
            <summary>
            Return the largest MVA flow (in absolute values)
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Line.MVARFlow">
            <summary>
            Return the largest MW flow (in absolute values)
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Line.LineSorter">
            <summary>
            This class sorts lines based on blackstart corridor membership, voltage
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Line.LineSorter.Compare(Macomber_Map.Data_Elements.MM_Line,Macomber_Map.Data_Elements.MM_Line)">
            <summary>
            Compare two transmission lines
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target">
            <summary>
            This class holds information on a blackstart corridor path
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target.Blackstart_Corridor">
            <summary>The corridor associated with the target</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target.Primary">
            <summary>Our collection of blackstart corridor elements for the primary path</summary>        
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target.Secondary">
            <summary>Our collection of blackstart corridor elements for the primary path</summary>        
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target.Target">
            <summary>The target of the blackstart path</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target.xConfig">
            <summary>The XML configuration for our element</summary>       
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target.Description">
            <summary>The description of our target</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target.#ctor">
            <summary>
            Initilaize a new blackstart corridor target
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target.#ctor(System.Xml.XmlElement,Macomber_Map.Data_Elements.MM_Blackstart_Corridor)">
            <summary>
            Initialize a new blackstart corridor
            </summary>
            <param name="xElem"></param>
            <param name="Corridor"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target.ToString">
            <summary>
            Report the target name
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target.Elements">
            <summary>
            Our full list of elements
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.Display.MM_MapTile">
            <summary>
            (C) 2013, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc. All Rights Reserved.
            This class holds a map tile that will be displayed on the main map.
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.Tile">
            <summary>Our actual tile image</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.MapCoordinates">
            <summary>The coordinates of our map</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.TopLeft">
            <summary>The top-left point of our tile (in Lat/Long)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.BottomRight">
            <summary>The bottom-right point of our tile (in Lat/Long)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.TopLeftXY">
            <summary>The top-left point of our tile (in pixels)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.BottomRightXY">
            <summary>The bottom-right point of our tile (in pixels)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.Saving">
            <summary>The bitmap is saving</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.Failed">
            <summary>The bitmap has failed to download</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.ServerNumber">
            <summary>The current server number to be used for download</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.DownloadClient">
            <summary>Our web client for downloading all requested tiles</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Display.MM_MapTile.#ctor(Macomber_Map.Data_Elements.Display.MM_MapTile.Coordinates)">
            <summary>
            Load in a new tile
            </summary>
            <param name="MapCoordinates"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Display.MM_MapTile.GetImageURL">
            <summary>
            Get the download image URL
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Display.MM_MapTile.TileXYToQuadKey(System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts tile XY coordinates into a QuadKey at a specified level of detail.
            (from http://msdn.microsoft.com/en-us/library/bb259689.aspx)
            </summary>
            <param name="tileX">Tile X coordinate.</param>
            <param name="tileY">Tile Y coordinate.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>A string containing the QuadKey.</returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Display.MM_MapTile.DownloadTile">
            <summary>
            Download our tile
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Display.MM_MapTile.MM_MapTile_DownloadDataCompleted(System.Object,System.Net.DownloadDataCompletedEventArgs)">
            <summary>
            Handle the completion of our map tile download
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Display.MM_MapTile.Dispose">
            <summary>
            If we have a tile, dispose of it.
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Display.MM_MapTile.ToString">
            <summary>
            Report our tile name
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.Data_Elements.Display.MM_MapTile.enumMapType">
            <summary>This class holds the enumerations for the map tile types that can be retrieved for the appliation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.enumMapType.None">
            <summary>Do not display map tiles</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.enumMapType.MapQuest_OSM">
            <summary>MapQuest/OSM</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.enumMapType.MapQuest_Sat">
            <summary>MapQuest/Satellite</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.enumMapType.OpenStreetMap">
            <summary>Open street map</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.Display.MM_MapTile.Coordinates">
            <summary>
            This class holds our coordinates
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.Coordinates.TileXY">
            <summary>The X/Y coordinates of our tile</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.Coordinates.ZoomLevel">
            <summary>The zoom level of our map tile</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Display.MM_MapTile.Coordinates.MapType">
            <summary>The map type of the tile</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Display.MM_MapTile.Coordinates.#ctor(Macomber_Map.Data_Elements.Display.MM_MapTile.enumMapType,System.Drawing.Point,System.Int32)">
            <summary>
            Initialize a new set of coordinates
            </summary>
            <param name="MapType"></param>
            <param name="TileXY"></param>
            <param name="ZoomLevel"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Display.MM_MapTile.Coordinates.Equals(Macomber_Map.Data_Elements.Display.MM_MapTile.Coordinates)">
            <summary>Determine whether two coordinates are equal</summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Display.MM_MapTile.Coordinates.GetHashCode">
            <summary>
            Return a hash code for our map tile
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Display.MM_MapTile.Coordinates.ToString">
            <summary>            
            Report an easy to read string for our object
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Key_Indicators">
            <summary>
            This control displays the high-level indicators (e.g., ACE, Frequency, Generation, Load, etc.)
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicators.ShowValueType">
            <summary>Show the value type for the variable (MW, Hz)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicators.ShowWindPercent">
            <summary>Show the percentage of wind generation</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicators.networkMap">
            <summary>Network map below</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicators.DisplayConfiguration">
            <summary>The display configuration window</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicators.DeltaDisplay">
            <summary>Our delta display window</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicators.NoteViewer">
            <summary>Our note viewer</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicators.WindGen">
            <summary>The generation type information for wind</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicators.IndicatorLabels">
            <summary>Our collection of indicator labels</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.CreateForm(System.String,System.Drawing.Size,System.Windows.Forms.FormBorderStyle)">
            <summary>
            Create a new form with this control fully docked within it
            </summary>
            <param name="Title">The title of the window</param>
            <param name="TargetSize">The target size of the window</param>
            <param name="Style">The border style of the window</param>
            <returns>A newly creted form with a fully docked control</returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.#ctor">
            <summary>
            Set up our key indicators and their text boxes
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.SetControls(Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,Macomber_Map.User_Interface_Components.Mini_Map,Macomber_Map.User_Interface_Components.Violation_Viewer,System.Xml.XmlElement)">
            <summary>
            Assign the relevant controls to the control
            </summary>
            <param name="networkMap">The network map</param>
            <param name="miniMap">The mini-map</param>
            <param name="violViewer">The violation viewer</param>
            <param name="xKeyIndicators">The XML configuration for key elements</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.Data_Integration_NetworkSourceChanged(System.Object,System.EventArgs)">
            <summary>
            Handle the change of network source
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.UpdateElements">
            <summary>
            Shift elements around and display the appropriate ones, based on the user's preferences and requested data
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.CheckSplitterSize(System.Windows.Forms.SplitterPanel,System.Int32)">
            <summary>
            Check the distance on our splitter
            </summary>
            <param name="Panel"></param>
            <param name="TargetWidth"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.UpdateElementData">
            <summary>
            Update the data shown for the elements
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.KeyIndicators_Resize(System.Object,System.EventArgs)">
            <summary>
            Handle a resize of the form by updating the elements and handling accordingly.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle the painting of our key indicator background
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.UpdateSystemTime(System.Object,System.EventArgs)">
            <summary>
            Update the system time every second
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.btnMax_Click(System.Object,System.EventArgs)">
            <summary>
            Maximize the parent window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.btnMin_Click(System.Object,System.EventArgs)">
            <summary>
            Minimize the parent window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.txtSearch_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Handle a user's search request (use clicked the search icon)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.txtSearch_SearchClicked(System.Object,System.EventArgs)">
            <summary>
            Handle a user's search request (user hit enter in the search window)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.InitializeViews">
            <summary>
            Initialize the views menu
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.mnuWindows_DropDownItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            Focus a window when the user selects it
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.mnuWindows_DropDownOpening(System.Object,System.EventArgs)">
            <summary>
            Handle the dropdown menu window opening, so that we can provide the list of windows
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.AddMenuItem(System.Object,System.Xml.XmlElement)">
            <summary>
            Add a new view item (view or category) to the menu
            </summary>
            <param name="BaseMenu"></param>
            <param name="RootElement"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.mnuViews_ItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            Handle the clicking of a view menu item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.AddMap(System.Object)">
            <summary>
            Add a new network map display
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.NewForm_Shown(System.Object,System.EventArgs)">
            <summary>
            Show the new form, and bring it to the forefont
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.NewForm_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            Update the size of our new window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.mnuMain_ItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            Handle the menu click against the main menu
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.AssignResultsHelper(Macomber_Map.User_Interface_Components.SearchResultsHelper)">
            <summary>
            Assign our results helper
            </summary>
            <param name="ResultsHelper"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.ResultsHelper_SearchOptionSelected(System.Object,System.Windows.Forms.ListViewItemSelectionChangedEventArgs)">
            <summary>
            Handle the results of a search option selection
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.txtSearch_TextChanged(System.Object,System.EventArgs)">
            <summary>
            When our search text changes, update accordingly
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.ShowSAGame(System.Object)">
            <summary>
            Display our situation awareness game
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.cmbNetwork_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handle a change of data source or time
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.ChangeVisibility(System.Object,System.EventArgs)">
            <summary>
            When the user clicks on a key indicator, change that indicator's visibility
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.lblViews_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the click on the views - now left/right, etc.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.btnData_Click(System.Object,System.EventArgs)">
            <summary>
            Handle the click of the stop/go/refresh button
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.picERCOT_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the mouse left-click, to stop speech immediately
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.chkUseEstimates_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handle the change of estimate use
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.chkDisplayalarms_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handle the change of alarm use
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.chkPostCtgs_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handle the change of post-ctg value display
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicators.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicators.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.Key_Indicators.ShowMinMaxIndicators">
            <summary>
            Whether or not the Min/Max indicators are shown
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Key_Indicators.SafeChangeVisibility">
            <summary>
            A thread-safe delegate for changing visibility.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Company">
            <summary>
            This class contains information on companies (QSEs and TDSPs)
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Company.PrimaryPhone">
            <summary>
            The telephone number for the QSE/TDSP
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Company.DUNS">
            <summary>
            The DUNS for the company
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Company.Alias">
            <summary>The alias/acronym of the operator</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Company.OperatesEquipment">
            <summary>Whether the company has operatorship of an element</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Company.#ctor">
            <summary>
            Initialize a blank CIM company
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Company.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM Transformer
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Company.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new CIM Substation
            </summary>
            <param name="ElementSource">The data source for this substation</param>
            <param name="AddIfNew"></param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Limit">
            <summary>
            This class holds the information for our CSC/IROL limits
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Limit.Name">
            <summary>The name of the limit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Limit.Current">
            <summary>The current MW of the limit</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Limit.Max">
            <summary>The maximum MW of the limit</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Limit.#ctor">
            <summary>
            Initialize a new limit
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Limit.#ctor(System.Data.DataRow)">
            <summary>
            Create a new IROL/CSC limit
            </summary>
            <param name="dr"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Limit.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Create a new IROL/CSC limit
            </summary>
            <param name="ElementSource">The element source</param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Limit.Update(System.Data.DataRow)">
            <summary>
            Update an existing CSC/IROL limit
            </summary>
            <param name="dr"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Limit.Update(MM_Communication.Elements.MM_Element.enumAttributes,System.Object)">
            <summary>
            Update our value from teh server
            </summary>
            <param name="Attribute"></param>
            <param name="InValue"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer">
            <summary>Display a schematic of a substation or line, containing a violation viewer, mini-map, and a schematic view</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.OneLineGuid">
            <summary>The GUID of the current one-line</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.analogThreshold">
            <summary>Our threshold for highlighting analog differentials</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.HighlightedElement">
            <summary>The element we're highlighting</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.BaseData">
            <summary>Our base data</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.OneLineLoaded">
            <summary>The flag indicating the one-line has completed loading</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.OneLineUpdated">
            <summary>The flag indicating the one-line has completed loading</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.UnlinkedElements">
            <summary>Our collection of unlinked elements</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.ExportDate">
            <summary>The date/time of CIM export</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.LastCIM">
            <summary>The CIM file that contained the data</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.BaseElement">
            <summary>The element at the seed of the one-line</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.nMap">
            <summary>The network map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.DisplayElements">
            <summary>The collection of one-line elements</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.DisplayNodes">
            <summary>The collection of one-line nodes</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.Descriptors">
            <summary>The collection of descriptors</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.SecondaryDescriptors">
            <summary>The collection of secondary descriptors</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.PokePoints">
            <summary>The poke points on the display</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.ElementsByTEID">
            <summary>Our collection of elements by TEID</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.WindingsByTEID">
            <summary>Our collection of windings by TEID</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.ViolViewer">
            <summary>The violation viewer associated with the one-line</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.Blink">
            <summary>Whether violations are currently blinking</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.DataSource">
            <summary>The data source that's driving this display</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.#ctor(System.Boolean)">
            <summary>
            Initialize the one-line viewer
            </summary>
            <param name="AutoFollow">Whether to automatically follow the selections</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.UpdateViolation(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            If a violation changes, check to see whether we have it. If so, trigger accordingly.
            </summary>
            <param name="Violation"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.SetControls(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,Macomber_Map.User_Interface_Components.DataSet_Base,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.Data_Connections.Generic.MM_Data_Source)">
            <summary>
            Assign the controls to the one-line viewer
            </summary>
            <param name="BaseElement">The base element, from which the Data Integration layer should query for parameters</param>
            <param name="nMap">The network map</param>
            <param name="BaseData">The base data</param>
            <param name="ViolViewer">The violation viewer associated with the one-line</param>
            <param name="DataSource">The active data source</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.LoadOneLine(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Set up to open a one-line, and load it.
            </summary>
            <param name="BaseElement"></param>
            <param name="ElementToHighlight"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.HighlightElement(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Highlight an element 
            </summary>
            <param name="ElementToHighlight"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.Finalize">
            <summary>
            When our one-line viewer is shutting down, make sure our query is cancelled with the server
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.ShutDownQuery">
            <summary>
            Shut down our one-line query, if any.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.LoadOneLineConfiguration(System.String,Macomber_Map.Data_Connections.Generic.MM_Data_Source)">
            <summary>
            Retrieve the XML configuration for a one-line, and display.
            </summary>
            <param name="OneLineName">The one-line to load</param>
            <param name="DataSource">The data source being used for the display</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.AddOneLineDataColumn(System.Data.DataTable,System.String,System.Type)">
            <summary>
            Add a column to our one-line table
            </summary>
            <param name="tbl"></param>
            <param name="ColumnName"></param>
            <param name="ColumnType"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.AddElementTypeToQuery(Macomber_Map.Data_Elements.MM_Element_Type,System.Collections.Generic.List{Macomber_Map.Data_Elements.MM_Element_Type})">
            <summary>
            Add a new element type to the query
            </summary>
            <param name="ElemType">The element type to add</param>
            <param name="ShownTypes">The collection of already-parsed types</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.FindRow(System.Data.DataTable,Macomber_Map.Data_Elements.MM_TransformerWinding,Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Locate or create a row corresponding to our line and substation
            </summary>
            <param name="BaseTable"></param>
            <param name="AssociatedNode"></param>
            <param name="XFw"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.FindRow(System.Data.DataTable,Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Locate or create a new row in our data table
            </summary>
            <param name="BaseTable"></param>
            <param name="Elem"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.AddElementToQuery(Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element)">
            <summary>        
            Add an additional element to the query configuration
            </summary>
            <param name="Elem"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.AddElementToQuery(Macomber_Map.Data_Elements.MM_Element)">
            <summary>        
            Add an additional element to the query configuration
            </summary>
            <param name="Elem"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.Elem_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the clicking on a one-line element
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.Elem_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle a one-line element double-click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.DrawHeader(System.Drawing.Graphics,System.Drawing.Rectangle,Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Draw the header bar for our one
            </summary>
            <param name="g"></param>
            <param name="BaseElement"></param>
            <param name="Bounds"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.PanelPaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Set the background image of the panel (the lines connecting the one-line elements)
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.DrawArrow(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Graphics,System.Boolean)">
            <summary>
            Draw an arrow between two points
            </summary>
            <param name="SourceRect">The starting rectangle</param>
            <param name="TargetRect">The target rectangle</param>
            <param name="g">The graphics connection</param>
            <param name="ArrowEnd">Whether an arrow should appear at the end</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.RefreshOneLineItem(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Repaint a one-line item
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.tsMain_ItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            Handle the clicking of an item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.UpdateOneLine">
            <summary>
            Handle the updating of a one line's data.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.btnDataSource_DropDownItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            Handle the selection of the data source
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.LocatePoke(System.Drawing.Rectangle,Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node,Macomber_Map.Data_Elements.MM_Element,Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element.enumOrientations,System.Boolean,System.Boolean)">
            <summary>
            Locate a poke point at a specified location. If not found, create it.
            </summary>
            <param name="Bounds"></param>
            <param name="BaseNode"></param>
            <param name="Elem"></param>
            <param name="Orientation"></param>
            <param name="IsJumper"></param>
            <param name="IsVisible"></param>
            <returns></returns>                
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.DisplayDropDown_Click(System.Object,System.EventArgs)">
            <summary>
            Handle the drop-down item click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.btnSwapDetails_Click(System.Object,System.EventArgs)">
            <summary>
            Swap the position of the slider
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.ProcessValueUpdates(System.Byte[])">
            <summary>
            The set of value updates for processing
            </summary>
            <param name="InMessages"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.RefreshDisplay">
            <summary>
            Refresh the display
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.dToolStripMenuItem_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Update our display threshold
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.cmbZoom_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            When our zoom update changes, invalidate our panel
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.OneLineLoadCompleted">
            <summary>Our event handler for a new one-line being loaded</summary>
        </member>
        <member name="E:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.OneLineElementClicked">
            <summary>This event is fired whenever the user clicks on a one-line element</summary>
        </member>
        <member name="E:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.OneLineDataUpdated">
            <summary>This event is fired whenever the user clicks on a one-line element</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.SCADAThreshold">
            <summary>
            The threshold by which SCADA to other values are flagged as different.
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.MaxSize">
            <summary>
            Report the maximum size this window should be.
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.DataSourceApplication">
            <summary>
            Report the data source application
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.OneLineElementClickedDelegate">
            <summary>
            The delegate to handle the clicking of a one-line element
            </summary>
            <param name="ClickedElement">The clicked element</param>
            <param name="e">Information on the mouse click</param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer.OneLineDataUpdatedDelegate">
            <summary>
            The delegate to handle the clicking of a one-line element
            </summary>
            <param name="OutData">The outgoing data set</param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Note_Writer">
            <summary>
            This class allows the operator to create a new note on an element
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Writer.#ctor(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Initialize the note writer
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Writer.CreateNote(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Create a new note, and if selected, upload it.
            </summary>
            <param name="NoteElement">The element about which the note is being written</param>        
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Note_Writer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Writer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Note_Writer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Model_Selector">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D., Electrical Reliability Council of Texas, Inc. All Rights Reserved.
            This form allows for selection of a model from our Oracle back-end modeling database 
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Model_Selector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Model_Selector.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.Models">
            <summary>Our collection of models</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.ActiveModels">
            <summary>Our collection of active models</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.Updating">
            <summary>Whether our form is updating</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.SelectedModel">
            <summary>Our selected model</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Model_Selector.#ctor(System.Data.OracleClient.OracleConnection)">
            <summary>
            Initialize our model selector
            </summary>
            <param name="oConn"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Model_Selector.cmbModelCategory_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update our list of models based on the category selected
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Model_Selector.cmbModelClass_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update our selection of models based on the selected category
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Model_Selector.cmbModel_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handle the selection of our model
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Model_Selector.UpdateDisplays">
            <summary>
            Update our displays based on our current collection of active models
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Model_Selector.calModel_DateChanged(System.Object,System.Windows.Forms.DateRangeEventArgs)">
            <summary>
            Update our list of options available when a user clicks on a date
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Model_Selector.btnOk_Click(System.Object,System.EventArgs)">
            <summary>
            Handle the ok button
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Model_Selector.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Handle the cancel button
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.MM_Model_Selector.SelectedModelID">
            <summary>The ID of the selected model</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Model_Selector.MM_Database_Model">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc.
            This class provides an internal representation of a network model
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.MM_Database_Model.ID">
            <summary>The ID of our model</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.MM_Database_Model.ValidStart">
            <summary>The valid start date of our model</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.MM_Database_Model.FullPath">
            <summary>The full path to our model</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.MM_Database_Model.ModelCategory">
            <summary>The category of our model</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.MM_Database_Model.Name">
            <summary>The name of our model</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.MM_Database_Model.ModelClass">
            <summary>The class of the model</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Model_Selector.MM_Database_Model.FullClass">
            <summary>The full class of our model</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Model_Selector.MM_Database_Model.#ctor(System.Data.OracleClient.OracleDataReader,System.Boolean)">
            <summary>
            Initialize our new model
            </summary>
            <param name="oRd"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Element_Summary">
            <summary>
            This class displays summaries of elements in a region
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Element_Summary.BaseData">
            <summary>The tables on which the data are based</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Element_Summary.cms">
            <summary>The menu for handling export to Excel</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Element_Summary.#ctor">
            <summary>
            Initialize a new element summary list view
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Element_Summary.SetControls(Macomber_Map.User_Interface_Components.DataSet_Base)">
            <summary>
            Asssign controls to the summary viewer
            </summary>
            <param name="BaseData">The base data for the display</param>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Element_Summary.MM_Repository_ViewChanged(Macomber_Map.Data_Elements.MM_Display_View)">
            <summary>
            Update the KV level colors as needed
            </summary>
            <param name="ActiveView"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Element_Summary.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the mouse clicking in the list view
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Element_Summary.cms_ItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            Handle the user's clicking a menu item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Element_Summary.ExportToExcel">
            <summary>
            Handle exporting to Excel
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Element_Summary.BoxSubItem(System.Windows.Forms.ListViewItem.ListViewSubItem)">
            <summary>
            Go through all elements in the list view, and only box the one we've selected
            </summary>
            <param name="SubItem"></param>
        </member>
        <member name="E:Macomber_Map.User_Interface_Components.Element_Summary.TypeSelected">
            <summary>This event is fired when the user selects a particular type. If the type has a voltage level, that is passed as well.</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Element_Summary.TypeSelectedDeletage">
            <summary>
            This delegate allows transferring selected types and KV Levels
            </summary>
            <param name="SelectedTable">The table underlying the row selected</param>
            <param name="SelectedKVLevel">The KV Level underlying the Column selected</param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Process">
            <summary>
            This class holds all relevant information for a process
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Process.BaseElement">
            <summary>The configuration element for this process</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Process.LastExecution">
            <summary>The last execution time for this process</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Process.lvItem">
            <summary>The list view item associated with this process</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Process.WarningTime">
            <summary>The time at which the process viewer goes into a warning state</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Process.ErrorTime">
            <summary>The time at which the process viewer goes into an error state</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Process.#ctor(System.Xml.XmlElement)">
            <summary>
            Initialize the Macomber Map Process viewer
            </summary>
            <param name="BaseElement"></param>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Process.Application">
            <summary>
            Return the application of the process
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Process.Database">
            <summary>
            Return the database of the process
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Process.Record">
            <summary>
            Return the Record of the process
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Process.TableName">
            <summary>The table name </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Process.ColumnName">
            <summary>
            Return the column name for the process
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Process.Name">
            <summary>
            Return the name for the process
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Process.Key">
            <summary>
            Return the key for the process
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Process.Field">
            <summary>
            Return the field for the process
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration">
            <summary>
            This class holds the information necessary to execute a query
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration.FullRecords">
            <summary>Whether the filter specifies the full row lookups to be returned </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration.UpdateProcedure">
            <summary>The procedure to be run upon data table update</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration.QueryGUID">
            <summary>The GUID of the query</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration.QueryName">
            <summary>The name of the query</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration.Priority">
            <summary>The priority of the query</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration.DataSource">
            <summary>The data source for the query</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration.TargetData">
            <summary>The target table to be updated</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration.Connector">
            <summary>The data connector associated with the query</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration.TargetObjects">
            <summary>The list of objects associated with our query</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration.TargetWindow">
            <summary>The target window for our query</summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Generic.MM_Query_Configuration.UpdateProcedureDelegate">
            <summary>The procedure to be run upon data table update</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Process_Viewer">
            <summary>
            This class retrieves updated information every second on the status of all base processes (EMS, MMS, etc.)
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Process_Viewer.ProcessOverview">
            <summary>The text box in key indicators whose color will be changed depending on process status</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Process_Viewer.#ctor(System.Windows.Forms.Label)">
            <summary>
            Initialize the process viewer
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Process_Viewer.SetControls">
            <summary>
            Assign an integration layer to the control
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Process_Viewer.UpdateTimer(System.Object,System.EventArgs)">
            <summary>
            Handle the timer update
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Process_Viewer.SetProcessColor(System.Int32)">
            <summary>
            Set the color of the worst process
            </summary>
            <param name="WorstProcess"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Process_Viewer.Process_Viewer_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Handle the closing of our processing viewer
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Process_Viewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Process_Viewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Process_Viewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Process_Viewer.SafeSetProcessColor">
            <summary>
            A thread-safe delegate for setting the worst process color
            </summary>
            <param name="WorstProcess"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Mini_Map">
            <summary>
            A small network map that can be zoomed and panned, show violations and zoom regions, and key indicators
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.StateBoundary">
            <summary>The bounds of the state</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.networkMap">
            <summary>The network map associated with the mini-map (if any)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.Violations">
            <summary>The violation viewer associated within the mini-map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.DisplayViolations">
            <summary>Display selected violations on the map?</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.DisplayElementsWithinZoomRegion">
            <summary>Show elements within the zoom region?</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.DisplayMapPosition">
            <summary>Show the white box signifying the map's position?</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.ShowFlowIn">
            <summary>Show flow in to the selected region (flow in from DCTies if the overall map)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.ShowFlowOut">
            <summary>Show flow out to the selected region (flow out to DCTies if the overall map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.ShowGen">
            <summary>Show generation within the selected region (total gen if the overall map)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.ShowLoad">
            <summary>Show load wihtin the selected region (total load if the overall map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.ShowMVA">
            <summary>Whether the total MVA should be shown, rather than total MW.</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.ShowCaps">
            <summary>Whether the capacitors should be shown</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.ShowEmergencyMode">
            <summary>Whether the operator should be shown emergency information (E.g., capacity = hsl-gen as opposed to hasl-gen).</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.ShowReactors">
            <summary>Whether the reactors should be shown</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.Coord">
            <summary>The coordinates used to signify position (set to network map's if master, or the selected region otherwise)</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.HighlightedElements">
            <summary>The collection of elements passed to the mini-map, when the result of a one-line or lasso</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.BorderingLines">
            <summary>The collection of lines on the boundary of the mini-map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.BaseData">
            <summary>The base data for the display</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.UserCanZoomPan">
            <summary>Whether the user can zoom and pan the mini-map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.MiniMapMenu">
            <summary>The menu strip for handling right-click menus</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.ZoomPanPoints">
            <summary>The points to hold zoom/pan instructions</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.ZoomPanTimer">
            <summary>The timer to handle moving events</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.BlankStateMap">
            <summary>A bitmap containing the blank state map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.isNetworkMap">
            <summary>Whether or not the mini-map is associated with a network map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.MileDistance">
            <summary>The distance in miles from one side of the mini-map to the other</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.TopLeft">
            <summary>The top-left and bottom-right points, when displaying a lasso</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.BottomRight">
            <summary>The top-left and bottom-right points, when displaying a lasso</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.ShowRegionalView">
            <summary>Whether to display a regional view of the map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.RegionalElements">
            <summary>The graphics paths for regional elements shown on the display</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.tTip">
            <summary>Our tool tip for displaying relevant information to the user</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.RefreshTimer">
            <summary>A timer to handle refreshing the mini-map every 4 seconds</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.TextFont">
            <summary>The font for drawing text on the mini-map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.StationFont">
            <summary>The font for drawing substation names on the mini-map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.TestPen">
            <summary>A pen for hit-testing elements</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.BackBrush">
            <summary>A brush for slightly altering the background</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.Island">
            <summary>The island to be displayed, if any</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.#ctor(System.Boolean)">
            <summary>
            Initialize the mini-map
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.#ctor">
            <summary>
            Initialize the mini-map (as a network map)
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.OnResize(System.EventArgs)">
            <summary>
            Handle the form's resizing
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.SetControls(Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.DataSet_Base,Macomber_Map.Data_Elements.MM_Line[],System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Set controls for the mini-map, including all lines on the border (around the lassoed area, or connected to the substation), and
            all units and loads within
            </summary>
            <param name="networkMap">The associated network map</param>
            <param name="Viol">The violations viewer, showing currently-displayed violations</param>        
            <param name="BaseData">The base data for the display</param>
            <param name="BorderingLines">The lines on the border of the region, and loads/units within.</param>
            <param name="TopLeft">The top-left point of the lasso</param>
            <param name="BottomRight">The bottom-right point on the lasso</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.SetControls(Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,Macomber_Map.User_Interface_Components.Violation_Viewer)">
            <summary>
            Set the controls and data sources associated with the violation viewer
            </summary>
            <param name="networkMap">The associated network map</param>
            <param name="Viol">The violations viewer, showing currently-displayed violations</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.RefreshTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Every 4 seconds, update the mini-map
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.Repository_ViewChanged(Macomber_Map.Data_Elements.MM_Display_View)">
            <summary>
            Refresh our mini-map when the view changes
            </summary>
            <param name="ActiveView"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.Coordinates_Zoomed(System.Single,System.Single)">
            <summary>
            Handle a pan event by resetting the mini-map
            </summary>
            <param name="OldZoom"></param>
            <param name="NewZoom"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.Coordinates_Panned(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Handle a pan event by resetting the mini-map
            </summary>
            <param name="OldCenter"></param>
            <param name="NewCenter"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.Coordinates_LassoDrawing">
            <summary>
            Handle the lasso drawing by resetting the mini-map
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.RefreshContent">
            <summary>
            Refresh the mini map content
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.HandleResize(System.Object,System.EventArgs)">
            <summary>
            Rebuild our bitmap of the state image on the resize event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.ConvertPoint(System.Drawing.PointF)">
            <summary>
            Convert a Latitude/Longitude to single-precision X/Y coordinate on the mini-map.
            If the map is in state view, use the state boundaries. If not, use the lasso boundaries
            </summary>
            <param name="LatLng">The Lat/Long to convert</param>
            <returns>The resulting point on the mini-map</returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.ConvertPoints(System.Collections.Generic.List{System.Drawing.PointF})">
            <summary>
            Convert a Latitude/Longitude array to single-precision X/Y coordinates on the mini-map.
            If the map is in state view, use the state boundaries. If not, use the lasso boundaries
            </summary>
            <param name="InPoints">The Lat/Long to convert</param>
            <returns>The resulting point on the mini-map</returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.ConvertRectangle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Convert two Latitude/Longitude points to a single-precision X/Y rectangle on the mini-map
            </summary>
            <param name="Start">The first point to convert</param>
            <param name="End">The second point to convert</param>
            <returns>The resulting point on the mini-map</returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.UnconvertPoint(System.Drawing.PointF)">
            <summary>
            Convert a single-precision X/Y coordinate on the mini-map to a Latitude/Longitude
            </summary>
            <param name="XY">The point on the mini-map</param>
            <returns>The resulting lat/long</returns>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.RefreshMiniMap">
            <summary>
            Refresh the mini-map
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.HandleRepaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Repaint the mini-map
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.DrawSubstation(System.Drawing.Graphics,Macomber_Map.Data_Elements.MM_Substation,System.Boolean)">
            <summary>
            Draw a substation on the display, and add it to the list of elements
            </summary>
            <param name="g">The graphics connector</param>
            <param name="Substation">The substation to draw</param>
            <param name="DisplayName">Wheter or not the substation's name should be displayed</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.DrawRegionalAroundSubstation(Macomber_Map.Data_Elements.MM_Substation,System.Drawing.Graphics)">
            <summary>
            Draw a regional view around a substation
            </summary>
            <param name="Substation">The core substation to be drawn around</param>
            <param name="g">The graphics connector</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.DrawLine(System.Drawing.Graphics,Macomber_Map.Data_Elements.MM_Line)">
            <summary>
            Draw a line on the mini-map
            </summary>
            <param name="g">The graphics connector</param>
            <param name="Line">The line to be drawn</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.DrawRequestedIndicators(System.Drawing.Graphics)">
            <summary>
            Draw the key indicators as requested by the user
            </summary>
            <param name="g">The graphics connector</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.DrawViolation(System.Drawing.Graphics,Macomber_Map.Data_Elements.MM_AlarmViolation,System.Boolean,System.Boolean)">
            <summary>
            Draw a violation on the mini-map
            </summary>
            <param name="g">The graphics connector to the mini-map</param>
            <param name="ViolToDraw">The violation to be drawn</param>
            <param name="Selected">Whether the violation is selected by the user</param>
            <param name="SingleViolation">Whether only a single violation should be shown</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.DrawLassoBorder(System.Drawing.Graphics,Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            Draw the white rectangle signifying the lasso's position        
            </summary>
            <param name="g">Graphics connector</param>
            <param name="Coord">The coordinates class with boundaries</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.DrawMapPosition(System.Drawing.Graphics,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draw the white rectangle signifying the map's position
            </summary>
            <param name="g">Graphics connector</param>
            <param name="TopLeft">Top-left point</param>
            <param name="BottomRight">Bottom-right point</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse down
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse movement
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse wheel
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the right mouse-click to bring up a popup menu
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.ZoomPanToPoint(System.Drawing.PointF)">
            <summary>
            Zoom/pan the mini-map (and therefore associated larger maps) to the specified point
            </summary>
            <param name="TargetLatLng">The target latitude and longitude</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.ZoomPanTimer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            A timer event has occurred. Zoom/pan the map to the next point in the stack, and if none are left close the timer
            </summary>  
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Mini_Map.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Mini_Map.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Overrides.MM_SearchBox">
            <summary>
            This class provides a search box
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Overrides.MM_SearchBox.#ctor">
            <summary>
            Initialize a new text box and assign our hooks
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Overrides.MM_SearchBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Intercept the paint call
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Overrides.MM_SearchBox.SearchTextBox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            When our text has changed, repaint our icon
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Overrides.MM_SearchBox.SearchTextBox_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Update the mouse cursor depending on location
            </summary>
            <param name="Sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Overrides.MM_SearchBox.SearchTextBox_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the search button click
            </summary>
            <param name="Sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:Macomber_Map.User_Interface_Components.Overrides.MM_SearchBox.SearchClicked">
            <summary>Our event handler for clicking search</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Historical_Viewer">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc.
            This form provides a real-time and historical view into data.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.GraphDataRecords">
            <summary>This is the new container for the graph data</summary>
            
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.HistoricQueriesCompleted">
            <summary>The number of historical queries associated with this display that have returned</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.HistoricQueriesTotal">
            <summary>The number of historical queries associated with this display that have been sent out</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.LastMouseOverTime">
            <summary>Our most recently moused-over point</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.LastPane">
            <summary>The last pane that was used in searching</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.HistoricPointList">
            <summary>Our collection of historical points for interpolation.</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.GraphMode">
            <summary>The item's current graph mode</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.EMSMappings">
            <summary>The mappings between the data and their titles</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.LastDate">
            <summary>The date from which the data was last pulled</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.StartTime">
            <summary>The start time for our query</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.EndTime">
            <summary>The end time for our query</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.TimeSpans">
            <summary>Our collection of appropriate time spans</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.BackBrush">
            <summary>Our background brush for rendering our display</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.#ctor(Macomber_Map.User_Interface_Components.Historical_Viewer.GraphModeEnum,System.String[],System.String[])">
            <summary>
            Set up the historical viewer
            </summary>
            <param name="GraphMode">Our graphics mode</param>        
            <param name="HistoricMappings">The historic mappings</param>
            <param name="EMSMappings">The mappings</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.cmbHistoricRange_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            When the user changes our requested time span, update
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.GetMappings(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Find all appropriate mappings for our element
            </summary>
            <param name="BaseElement"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.LoadTags(System.Object)">
            <summary>
            Load one or more tags to the list
            </summary>
            <param name="State"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.CheckRequery">
            <summary>
            Check when a query is completed, whether we have all the tags
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.SafeSetCursor">
            <summary>Safely reset our cursor</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.AddTag(Macomber_Map.Data_Connections.Historic.MM_Historic_DataPoint)">
            <summary>
            Add a tag to the check box
            </summary>
            <param name="Tag"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.Renderer_RenderToolStripBackground(System.Object,System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Handle the background painting of our toolstrip
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.Trend_Graph(System.String,Macomber_Map.User_Interface_Components.Historical_Viewer.GraphModeEnum,System.String[],System.String[])">
            <summary>
            Initialize a new trend graph form
            </summary>
            <param name="GraphMode">The graph mode</param>
            <param name="EMSMappings">The EMS mappings</param>
            <param name="HistoricQueries">The historic queries</param>
            <param name="Title">The title of the windo</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.TrendForm_VisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Handle the visibility change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.TrendForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Handle the form closing
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.btnDataSource_Click(System.Object,System.EventArgs)">
            <summary>
            Update the data source request
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.tvTags_AfterCheck(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Update our view based on the check change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.cmbRange_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            When the selected range changes, update accordingly
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.tmrUpdate_Tick(System.Object,System.EventArgs)">
            <summary>
            Handle the updated timer
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.RedrawNow">
            <summary>
            Update the trend graph from an external source
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.RequeryHistory">
            <summary>
            Requery the history database for the requested information
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.UpdateGenTypes">
            <summary>
            Update the generation types.
            Thanks to http://goorman.free.fr/ZedGraph/zedgraph.org/wiki/indexc40e.html?title=Multi-Pie_Chart_Demo for the ZedGraph multi-pie chart demo
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.UpdateLFData">
            <summary>
            Update Load Forecast Data
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.CreateTabletoAdd(System.String)">
            <summary>
            This is a test SystemWideHandler set to use since one one is DOA - nataros
            
             </summary>
            
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.UpdateSystemWideData">
            <summary>
            Update SystemWide data
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.cmbData_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update the view based on the current type
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.btnRefresh_Click(System.Object,System.EventArgs)">
            <summary>
            When the user requests a history refresh, do so.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.btnLog_Click(System.Object,System.EventArgs)">
            <summary>
            Change the log scale value of our indicator
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.zg_PointValueEvent(ZedGraph.ZedGraphControl,ZedGraph.GraphPane,ZedGraph.CurveItem,System.Int32)">
            <summary>
            Return a human-readable point-value tooltip
            </summary>
            <param name="sender"></param>
            <param name="pane"></param>
            <param name="curve"></param>
            <param name="iPt"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.zgHistoricOverview_MouseMoveEvent(ZedGraph.ZedGraphControl,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the user clicking on the historic overview graph
            </summary>
            <param name="sender"></param>
            <param name="e"></param>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.RefreshMouseOver">
            <summary>
            Refresh our mouseover information
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.btnDetailedView_Click(System.Object,System.EventArgs)">
            <summary>
            Handle the request for a more detailed view
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Historical_Viewer.GraphModeEnum">
            <summary>The types of graphs that can be drawn.</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.GraphModeEnum.HistoricalOnly">
            <summary>Only show historical data</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.GraphModeEnum.LoadVsLoadForecast">
            <summary>Load vs. Load forecast</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.GraphModeEnum.SystemWide">
            <summary>Data from RTGEN SystemWide</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.GraphModeEnum.GenTypes">
            <summary>Generation Types</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Historical_Viewer.GraphModeEnum.Island">
            <summary>Island display</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Historical_Viewer.UpdateGraphData">
            <summary>The delegate to handle the updating of graph data</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Historical_Viewer.SafeSetCursorDelegate">
            <summary>A thread-safe delegate for assigning the cursor</summary>        
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Historical_Viewer.SafeAddTag">
            <summary>
            Safely add a tag to the check box
            </summary>
            <param name="Tag"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.GenComparer.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initialize a new gen comparer
            </summary>
            <param name="CompareField"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Historical_Viewer.GenComparer.Compare(Macomber_Map.Data_Elements.MM_Generation_Type,Macomber_Map.Data_Elements.MM_Generation_Type)">
            <summary>
            Compare two generation types
            </summary>
            <param name="x">The first generation type</param>
            <param name="y">The second generation type</param>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.Data_Elements.Weather.MM_WeatherStationCollection">
            <summary>
            This class is responsible for maintaining the collection of weather stations, and loading them appropriately
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStationCollection.QueryPrepend">
            <summary>The URL that begins the query to retrieve a list of stations within a particular county</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStationCollection.AlertsPrepend">
            <summary>The weather alerts for the county</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStationCollection.ForecastPrepend">
            <summary>The weather forecast for the county</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Weather.MM_WeatherStationCollection.WeatherStations">
            <summary>The collection of weather stations</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Weather.MM_WeatherStationCollection.LoadWeatherStations">
            <summary>
            Load the list of weather stations for each county
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Weather.MM_WeatherStationCollection.WeatherManager(System.Object)">
            <summary>
            Manage the weather by continuously updating the weather for each county every 10 minutes
            </summary>
            <param name="state">The state of the thread</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Weather.MM_WeatherStationCollection.LoadWeatherStation(Macomber_Map.Data_Elements.MM_Boundary)">
            <summary>
            Load the weather stations for each county
            </summary>
            <param name="County">The county to be loaded</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Weather.MM_WeatherStationCollection.LoadWeatherAlerts(Macomber_Map.Data_Elements.MM_Boundary)">
            <summary>
            Load the weather alerts for a county
            </summary>
            <param name="County">The county for which alerts should be loaded</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Weather.MM_WeatherStationCollection.LoadWeatherForecast(Macomber_Map.Data_Elements.MM_Boundary)">
            <summary>
            Load the weather forecast for a county
            </summary>
            <param name="County">The county for which forecasts should be loaded</param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Display_View">
            <summary>
            This class holds all of the parameters for a display view
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display_View.Name">
            <summary>The name of the view</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display_View.BaseElement">
            <summary>The base element for the view</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display_View.DisplayParameters">
            <summary>The collection of parameters for the display view</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Display_View.FullName">
            <summary>The full path of the view</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Display_View.#ctor(System.String)">
            <summary>
            Create a display view for the default set of parameters
            </summary>
            <param name="Name">The name of the view</param>        
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Display_View.#ctor(System.Xml.XmlElement)">
            <summary>
            Create a new display view based on the XML parameters
            </summary>
            <param name="ViewElement">The XML configuration for this view</param> 
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Display_View.Activate">
            <summary>
            Activate this display view
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Display_View.Save">
            <summary>
            Save the configuration for this display view
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Display_View.XmlDepth">
            <summary>
            Return the depth of the current Xml element (so that tabs can properly be set).
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_KVLevel">
            <summary>
            Store display information on a particular KV level
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_KVLevel.Energized">
            <summary>The display parameters for energized state</summary>        
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_KVLevel.PartiallyEnergized">
            <summary>The display parameters for energized state</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_KVLevel.Unknown">
            <summary>The display parameters for an unknown state</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_KVLevel.DeEnergized">
            <summary>The display parameters for deenergized state</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_KVLevel.Index">
            <summary>
            The integer value of the KV level (used by the SQL-based versions of the CIM server)
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_KVLevel.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new KV Level
            </summary>
            <param name="ElementSource">Our element source</param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_KVLevel.#ctor">
            <summary>
            Intiaizlize a new KV level
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_KVLevel.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new KV level
            </summary>
            <param name="dRd"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_KVLevel.#ctor(System.String,System.String)">
            <summary>
            Initialize a new KV level based on its name and foreground color
            </summary>
            <param name="Name">The name of the KV level</param>
            <param name="ForeColor">The foreground color </param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_KVLevel.ReadXML(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Update the KV level, and its underlying components
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_KVLevel.CompareTo(System.Object)">
            <summary>
            Handle the comparison between KV levels to allow for sorting
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_KVLevel.ToString">
            <summary>
            Display the name of the KV level
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.VisibilityByZoom">
            <summary>
            The zoom levels at which equipment of this type is visible
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.StationMW">
            <summary>
            Whether buses of this KV level are shown on the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.StationNames">
            <summary>
            Whether buses of this KV level are shown on the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.Nominal">
            <summary>Our nominal voltage level</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowOnMap">
            <summary>
            Whether buses of this KV level are shown on the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowInMenu">
            <summary>
            Whether buses of this KV level are shown in menus
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowLineRouting">
            <summary>
            Show the full routing of transmission lines
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowEnergized">
            <summary>
            Show energized lines in the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowUnknown">
            <summary>
            Show unknown-state lines in the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowPartiallyEnergized">
            <summary>
            Show partially energized lines in the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowDeEnergized">
            <summary>
            Show de-energized lines in the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.SimpleVisibility">
            <summary>
            Show the overall visibility of this KV level
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowMVA">
            <summary>
            Show MVA flow in the network map
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.MVAThreshold">
            <summary>
            The threshold (in percent) at or over which the MVA flow should be shown
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.VisibilityThreshold">
            <summary>
            The threshold (in percent) at or over which the MVA flow should be shown
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.MVASize">
            <summary>
            The base size of an MVA flow line at 100% of normal limit
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowMWText">
            <summary>
            Whether the MW flow and direction should be displayed above the line
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowLineName">
            <summary>
            Whether the line's name should be displayed
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowMVARText">
            <summary>
            Whether the MVAR flow and direction should be displayed above the line
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowMVAText">
            <summary>
            Whether the MVA flow and direction should be displayed above the line
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_KVLevel.ShowPercentageText">
            <summary>
            Whether the Percentage flow and direction should be displayed above the line
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Node">
            <summary>
            This class holds information on a connectivity node
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Node._ConnectedElements">
            <summary>The elements to which the node is connected</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Node._BusbarSection">
            <summary>The busbar section corresponding to the node</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Node.Dead">
            <summary>Whether the node is dead</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Node.Open">
            <summary>Whether the node is open</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Node._ElectricalBus">
            <summary>The electrical bus corresponding to the node</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Node.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new node from a data reader
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Node.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new node from an XML document
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Node.#ctor">
            <summary>
            Initialize a parameterless node
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Node.ConnectedElements">
            <summary>The elements to which the node is connected</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Node.BusbarSection">
            <summary>
            The busbar section corresponding to the node
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Node.Estimated_Angle">
            <summary>
            THe estimated angle of the bus
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Node.Estimated_kV">
            <summary>
            The estimated KV of the bus
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Node.PerUnitVoltage">
            <summary>
            The estimated KV of the bus
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Node.IslandNumber">
            <summary>
            The island number associated with the bus
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Node.LowNormalLimit">
            <summary>
            The low normal limit on voltage
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Node.LowEmergencyLimit">
            <summary>
            The low emergency limit on voltage
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Node.HighNormalLimit">
            <summary>
            The high normal limit on voltage
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Node.HighEmergencyLimit">
            <summary>
            The high emergency limit on voltage
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Node.ElectricalBus">
            <summary>
            The electrical bus corresponding to the node
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Element">
            <summary>
            This class holds information on a blackstart element
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Element.Blackstart_Target">
            <summary>The blackstart corridor target associated with our element</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Element.AssociatedElement">
            <summary>The element associated with the action</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Element.Action">
            <summary>The action to be carried out</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Element.#ctor">
            <summary>
            Initialize a new blackstart corridor target
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Element.#ctor(System.Xml.XmlElement,Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Target)">
            <summary>
            Initialize a new blacstart corridor element
            </summary>
            <param name="xElem"></param>
            <param name="Target"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Blackstart_Corridor_Element.ToString">
            <summary>
            Report the name of our string 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Overrides.MM_TabPage">
            <summary>
            This class offers transparent backgrounds for a tab page
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Overrides.MM_TabPage.#ctor">
            <summary>
            Initialize our tab page
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Overrides.MM_TabPage.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle the background painting of our page
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Overrides.MM_TabPage.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle the painting of our page
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Transformer">
            <summary>
            (C) 2012, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc. All Rights Reserved.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Transformer.TransformerWindings">
            <summary>Our collection of transformer windings</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Transformer.AssociatedNodes">
            <summary>The nodes associated with this transformer</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Transformer.#ctor(System.Xml.XmlElement,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer)">
            <summary>
            Initialize a new transformer
            </summary>
            <param name="xCh"></param>
            <param name="violViewer"></param>
            <param name="olView"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Transformer.AssignNode(Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Node)">
            <summary>
            Assign a node to our transformer
            </summary>
            <param name="Node"></param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_ShuntCompensator">
            <summary>
            This class holds information on capacitors and reactors
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_ShuntCompensator.Estimated_MVAR">
            <summary>Estimated MVAR flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_ShuntCompensator.Nominal_MVAR">
            <summary>Nominal MVAR flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_ShuntCompensator.Open">
            <summary>Whether the cap/reactor is open</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_ShuntCompensator.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM Transformer
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_ShuntCompensator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new CIM capactior or reactor
            </summary>
            <param name="ElementSource">The SQL source for this line</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_ShuntCompensator.#ctor">
            <summary>
            Initialize a new CIM capactior or reactor
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_ShuntCompensator.CompareShuntCompensators(Macomber_Map.Data_Elements.MM_ShuntCompensator)">
            <summary>
            Compare two shunt compensators
            </summary>
            <param name="SC">The other shunt compensator to which it should be compared</param>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_AlarmViolation">
            <summary>
            This class covers alarms, violations, and other events that will be shown in the viewer
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation.Type">
            <summary>The type of the alarm/violation/event</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation.ViolatedElement">
            <summary>The violated element</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation.Contingency">
            <summary>The contingency definition (if any) associated with the alarm/violation/event</summary>        
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation.Text">
            <summary>The alarm text</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation.EventTime">
            <summary>The date/time of the event</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation.ReportedStart">
            <summary>When the violation was reported to start (e.g., OS)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation.ReportedEnd">
            <summary>When the violation was reported to end (e.g., OS)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation.New">
            <summary>Whether this violation is flagged as new</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation.PostCtgValue">
            <summary>The post-contingency flow or voltage on our contingency violation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_AlarmViolation.PreCtgValue">
            <summary>The pre-contingency flow or voltage on our contingency violation</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_AlarmViolation.#ctor">
            <summary>
            Create a new alarm violation with no parameters
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_AlarmViolation.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Create a new alarm violation with values (from an XML savecase)
            </summary>
            <param name="Violation"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_AlarmViolation.CompareTo(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            Determine whether two alarm violations are comparable
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_AlarmViolation.Equals(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            Determine whether two violations are equal
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_AlarmViolation.GetHashCode">
            <summary>
            Return a hash code oriented around the TEID and violation type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_AlarmViolation.CreateViolation(Macomber_Map.Data_Elements.MM_Element,System.String,Macomber_Map.Data_Elements.MM_AlarmViolation_Type,System.DateTime,System.Boolean,Macomber_Map.Data_Elements.MM_Contingency,System.Single,System.Single)">
            <summary>
            Create a new violation
            </summary>
            <param name="ViolatedElement"></param>
            <param name="ViolText"></param>
            <param name="ViolType"></param>
            <param name="EventTime"></param>
            <param name="New"></param>
            <param name="ViolatedCtg"></param>
            <param name="PostCtgValue"></param>
            <param name="PreCtgValue"></param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation.Recency">
            <summary>
            Report the recency on our item
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_AlarmViolation.SubstationOrLine">
            <summary>
            Provide the substation or line associated with the violation
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_DCTie">
            <summary>
            This class handles the ties (overloads on lines
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_DCTie.Unit">
            <summary>The unit associated with this DCTie</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_DCTie.Load">
            <summary>The load associated with this DCTie</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_DCTie.TieDescriptor">
            <summary>The descriptor of the tie</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_DCTie._MW_Integrated">
            <summary>Our integrated MW (from RTGEN)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_DCTie.MW_Monitored">
            <summary>Our monitored MW (from RTMONI)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_DCTie.AssociatedLine">
            <summary>The line associated with the DCTie</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DCTie.#ctor">
            <summary>
            Initialize a new DCTie instance
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DCTie.IntegrateFromLine(Macomber_Map.Data_Elements.MM_Line)">
            <summary>
            Integrate the information from a base line into the DCTie.
            </summary>
            <param name="BaseLine"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DCTie.#ctor(Macomber_Map.Data_Elements.MM_Line,System.String)">
            <summary>
            Initialize a new DCTie around its base line.
            </summary>
            <param name="BaseLine">The line on which the tie is based</param>
            <param name="TieDescriptor">The descriptor of the tie</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DCTie.CountLines(Macomber_Map.Data_Elements.MM_Substation)">
            <summary>
            Return the number of lines connecting a substation
            </summary>
            <param name="Sub">The substation to check</param>
            <returns></returns>        
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DCTie.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM Transformer
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DCTie.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new DCTie instance
            </summary>
            <param name="ElementSource">The element source</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DCTie.CalculateDistance(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Determine the distance between two points
            </summary>
            <param name="Point1">The first point</param>
            <param name="Point2">The second point</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DCTie.UpdateMonitored(System.Boolean,System.Single,System.Single)">
            <summary>
            Update the telemetry on a DCTie from RTMONI
            </summary>
            <param name="Import">Whether this update is an import</param>
            <param name="CurrentMW">The current MW</param>
            <param name="LimitMW">The maximum MW</param>       
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_DCTie.UpdateGenerated(System.Single)">
            <summary>
            Update the telemetry on a DCTie from RTGEN
            </summary>
            <param name="CurrentMW">The current MW</param>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_DCTie.MW_Integrated">
            <summary>
            Handle our integrated MW
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_DCTie.MVAFlowDirection">
            <summary>
            Report the MVA flow direction for DC Ties (which is really MW direction)
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_DCTie.MWFlowDirection">
            <summary>
            Report the MW flow direction for DC ties
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_DCTie.MVARFlowDirection">
            <summary>
            Report the MVAR flow direction of a DC tie (uses MW instead)
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.Positional.MM_Coordinate_Suggestion">
            <summary>
            This class holds information on a coordinate suggestion
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Positional.MM_Coordinate_Suggestion.BaseElement">
            <summary>The base element associated with our suggestion</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Positional.MM_Coordinate_Suggestion.OriginalCoordinates">
            <summary>The coordinates originally associated with our content</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Positional.MM_Coordinate_Suggestion.SuggestedCoordinates">
            <summary>The collection of suggested coordinates</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Positional.MM_Coordinate_Suggestion.SuggestedCoordinatesXY">
            <summary>The collection of X/Y coordinates</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.Positional.MM_Coordinate_Suggestion.LineIndex">
            <summary>The index of our line that's being handled</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Positional.MM_Coordinate_Suggestion.#ctor(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            Initialize our coordinate suggestion
            </summary>
            <param name="BaseElement"></param>
            <param name="Coordinates"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Positional.MM_Coordinate_Suggestion.UpdateSubstationCoordinates(System.Drawing.PointF)">
            <summary>
            Update a substation coordinates and fix all lines
            </summary>
            <param name="NewPos"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.Positional.MM_Coordinate_Suggestion.UpdateLineCoordinates(System.Drawing.PointF,System.Drawing.Point)">
            <summary>
            Update a line coordinates
            </summary>
            <param name="LatLng"></param>
            <param name="PixelPoint"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel">
            <summary>
            This class displays a control panel, based on the configuration information provided in the display
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.OutMessage">
            <summary>The message associated with the control panel</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.SourceElement">
            <summary>The element associated with the control panel</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.xConfiguration">
            <summary>The configuration of our control panel</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.DisplayedControls">
            <summary>Our collection of controls</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.RetrievedValues">
            <summary>Our collection of values retrieved from the source system</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.SourceApplication">
            <summary>The source application for our display</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.QueryGUID">
            <summary>The GUID of our data-bound query</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.Locators">
            <summary>Our collection of record locators</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.GetSingle(System.String)">
            <summary>
            Retrieve a floating-point number from our incoming data
            </summary>
            <param name="Title"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.GetInt(System.String)">
            <summary>
            Retrieve a floating-point number from our incoming data
            </summary>
            <param name="Title"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.GetBoolean(System.String)">
            <summary>
            Retrieve a boolean from our incoming data
            </summary>
            <param name="Title"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.GetString(System.String)">
            <summary>
            Retrieve a string from our incoming data
            </summary>
            <param name="Title"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.#ctor(Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element,System.Xml.XmlElement,System.String,Macomber_Map.Data_Connections.Generic.MM_Data_Source)">
            <summary>
            Initialize a new control panel
            </summary>
            <param name="SourceElement">Our source element</param>
            <param name="xConfiguration">The configuration for the control panel</param>
            <param name="SourceApplication"></param>
            <param name="DataSource"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.pG_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            When a property value changes, update everything.
            </summary>
            <param name="s"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.AddElement(System.Windows.Forms.Control,System.Xml.XmlElement,Macomber_Map.Data_Connections.Generic.MM_Data_Source)">
            <summary>
            Add an element to our display
            </summary>
            <param name="ParentControl"></param>
            <param name="xElem"></param>
            <param name="DataSource"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.NewCtl_GotFocus(System.Object,System.EventArgs)">
            <summary>
            When a text box gets focus, highlight the whole box
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.MouseDownPoint">
            <summary>Our tracking of our element movement</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.NewCtl_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the mouse up event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.NewCtl_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Our mouse handler for a mouse down event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.NewCtl_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Our mouse handler for a mouse move event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.OnClosed(System.EventArgs)">
            <summary>
            When our form closes, shut the query down.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.ShutDownQuery">
            <summary>
            Shut down our query 
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.NewCtl_Click(System.Object,System.EventArgs)">
            <summary>
            Handle clicking on the item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.NewCtl_LostFocus(System.Object,System.EventArgs)">
            <summary>
            When our control loses focus, consider it available for updating
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.NewCtl_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            When the user presses enter, update our value
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Display the name of our panel on display
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.UpdateDisplay">
            <summary>
            Update our data as appropriate
            </summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel.Editable">
            <summary>Our flag for editable mode</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Key_Indicator_Label">
            <summary>
            This class provides a label for a high-level label
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicator_Label.Format">
            <summary>The format for this label</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicator_Label.Title">
            <summary>The title of the application</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicator_Label.Indicator">
            <summary>The values to be displayed</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicator_Label.Comparison">
            <summary>Our comparison indicator</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicator_Label.Axis">
            <summary>The axis type</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicator_Label.PercentageFormat">
            <summary>The percentage format to be used when comparisons are made</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Key_Indicator_Label.ComparisonAxis">
            <summary>Whether this label should be compared to another indicator</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicator_Label.#ctor(System.Xml.XmlElement,System.Windows.Forms.Form,System.EventHandler)">
            <summary>
            Initialize a new key indicator level
            </summary>
            <param name="xElem"></param>
            <param name="InForm"></param>
            <param name="Click"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicator_Label.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle painting of the key indicator label
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Key_Indicator_Label.UpdateText(System.Boolean,System.Boolean)">
            <summary>
            Update the current information
            </summary>
            <param name="ShowValueType">Show the value type</param>
            <param name="Compare">Whether the value should be compared to a second</param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_TransformerWinding">
            <summary>
            This class holds the transformer winding information
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_TransformerWinding.Transformer">
            <summary>The transformer with which the winding is connected</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_TransformerWinding.Estimated_MW">
            <summary>Estimated MW flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_TransformerWinding.Telemetered_MW">
            <summary>Telemetered MW flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_TransformerWinding.Estimated_MVAR">
            <summary>Estimated MVAR flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_TransformerWinding.Estimated_MVA">
            <summary>Estimated MVA flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_TransformerWinding.Telemetered_MVA">
            <summary>Telemetered MVA flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_TransformerWinding.Telemetered_MVAR">
            <summary>Telemetered MVAR flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_TransformerWinding.Tap">
            <summary>The transformer tap position</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_TransformerWinding.Voltage">
            <summary>The nominal voltage on the winding</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_TransformerWinding.NodeName">
            <summary>The name of the node associated with the winding</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_TransformerWinding.#ctor">
            <summary>Initialize a new transformer winding</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_TransformerWinding.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>Initialize a new transformer winding</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_TransformerWinding.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>Initialize a new transformer winding</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Violation_Viewer">
            <summary>
            This control displays violations, as customizable by the user
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.miniMap">
            <summary>The mini-map associated with the violation view</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.UpdateTimer">
            <summary>Our update timer</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.networkMap">
            <summary>The network map associated with the violation view</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.oneLine">
            <summary>The one-line viewer associated with the violation view</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.BaseElements">
            <summary>The base element for the violation viewer. If none, it's the VV for the overall display.</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.lvSorter">
            <summary>The item comparer for the list view</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.NewButton">
            <summary>The button for storing totals and new data</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.TypeButtons">
            <summary>The collection of violations by violation type</summary>        
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.TypeVoltageButtons">
            <summary>The collection of violations by violation type and voltage</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.TypeElementButtons">
            <summary>The collection of violations by violation type and element type</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ShownViolations">
            <summary>The collection of violations shown on the screen</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ShownViolationList">
            <summary>Our list of shown violations</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.RetrieveUIDs">
            <summary>
            Retrieve the IDs of violations
            </summary>
            <returns></returns>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.RightClickMenu">
            <summary>The right click menu for the violation viewer</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.BackBrush">
            <summary>The background brush</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.#ctor">
            <summary>
            Initialize the violation viewer
            </summary>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.Data_Integration_NetworkSourceChanged(System.Object,System.EventArgs)">
            <summary>
            When the network source changes, refresh the toolstrip background
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.SetControls(Macomber_Map.User_Interface_Components.Mini_Map,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,Macomber_Map.Data_Elements.MM_Element[])">
            <summary>
            Set the controls and data sources associated with the violation viewer
            </summary>
            <param name="miniMap">The associated mini-map</param>
            <param name="networkMap">The associated network map</param>
            <param name="BaseElements">The base element for the violations</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.SetControls(Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer)">
            <summary>
            Associate this control with the one-line control
            </summary>
            <param name="oneLine">The one line control</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.SetControls(Macomber_Map.User_Interface_Components.Mini_Map,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map)">
            <summary>
            Set the controls and data sources associated with the violation viewer
            </summary>
            <param name="miniMap">The associated mini-map</param>
            <param name="networkMap">The associated network map</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.Repository_ViewChanged(Macomber_Map.Data_Elements.MM_Display_View)">
            <summary>
            Handle the change of active view by altering our image colors
            </summary>
            <param name="ActiveView"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer._ViolationModified(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            Handle the modification of a violation
            </summary>
            <param name="Violation"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer._ViolationAcknowledged(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            Handle the acknowledgement of a violation
            </summary>
            <param name="Violation"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.AddViolationToButton(Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button,Macomber_Map.Data_Elements.MM_AlarmViolation,System.Boolean)">
            <summary>
            Add a violation to the button
            </summary>
            <param name="btnType">The button to which the violation should be added</param>
            <param name="Violation">The violation to add</param>
            <param name="Visibility">The visiblity to add</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.RemoveViolationFromButton(Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button,Macomber_Map.Data_Elements.MM_AlarmViolation,System.Boolean)">
            <summary>
            Remove a violation from a button
            </summary>
            <param name="btnType">The button to which the violation should be added</param>
            <param name="Violation">The violation to add</param>
            <param name="Visibility">The visiblity to add</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.AcknowledgeButtonViolation(Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button,Macomber_Map.Data_Elements.MM_AlarmViolation,System.Boolean)">
            <summary>
            Acknowledge a button violation
            </summary>
            <param name="btnType">The button to which the violation should be added</param>
            <param name="Violation">The violation to add</param>
            <param name="Visibility">The visiblity to add</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.UpdateSummaryButton(Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button,System.Boolean)">
            <summary>
            Update a summary button to reflect the new count
            </summary>
            <param name="btnType">The button type</param>
            <param name="Visibility">Whether the button should be visible</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer._ViolationAdded(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            Add a new violation into the view
            </summary>
            <param name="Violation"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.AddViolationToDisplay(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            Add a violation to the display
            </summary>
            <param name="Violation"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.UpdateViolations(Macomber_Map.Data_Elements.MM_AlarmViolation_Type)">
            <summary>
            Update violations for a particular alarm type (when the property is changed)
            </summary>
            <param name="ViolType">The alarm violation type</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.RemoveViolationFromDisplay(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            Remove a violation from the display
            </summary>
            <param name="Violation">The violation to be removed</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.TriggerUpdate">
            <summary>
            Trigger an update
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.UpdateTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handle our update timer
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.CreateSummaryButtons">
            <summary>
            Create the collection of summary buttons, both by type and by type/voltage
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.CreateToolStripButton(System.Int32,System.String,System.Drawing.Color,System.Boolean,Macomber_Map.Data_Elements.MM_AlarmViolation_Type,System.Object)">
            <summary>
            Create a new ToolStrip button containing the specified image, title and color
            </summary>
            <param name="ImageNumber">The image number for this violation type</param>
            <param name="ButtonTitle">The tooltip description of the button</param>
            <param name="TextColor">The color for the count text</param>                
            <param name="Visible">Whether the button should be visible</param>
            <param name="BaseType">The base type for the button (e.g., forced outage)</param>
            <param name="SecondaryValue">The secondary value (e.g., null, voltage, element type)</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.HandleSummaryItem_Click(System.Object,System.EventArgs)">
            <summary>
            Handle the clicking of a button. Swap white/black backgrounds for readability.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.FindGroup(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            Determine the appropriate grouping for an item
            </summary>
            <param name="Viol">The violation to group</param>
            <returns>The appropriate group for the item, which is created if necessary</returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.HandleNewSelection(System.Object,System.EventArgs)">
            <summary>
            If our selection has changed, refresh the associated mini-map.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.ViolationViewer_Resize(System.Object,System.EventArgs)">
            <summary>
            Handle the resizing of the violation viewer, by updating the tile size
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.tsSummary_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the mouse clicking within the summary viewer
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.PopupMenu(System.Windows.Forms.ListViewHitTestInfo,System.Drawing.Point)">
            <summary>
            Display the popup menu for a listview item
            </summary>
            <param name="ht">The hit-test results of the item</param>
            <param name="Location">The location to show the menu</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.UpdateAlarmButtons">
            <summary>
            Update the alarm buttons, showing only the requested ones, and altering visibility depending on the counts
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.SetListViewGroupColor(System.Windows.Forms.ListView,System.Drawing.Color)">
            <summary>
            Send a Win32 API call to the ListView control, in order to specify the color for the group.
            </summary>
            <param name="lv"></param>
            <param name="LVGroupColor"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.lvViolations_ColumnClick(System.Object,System.Windows.Forms.ColumnClickEventArgs)">
            <summary>
            Handle the column double-click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.SetSort(Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum)">
            <summary>
            Set the sorting parameter for the violation viewer
            </summary>
            <param name="SortType"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.SetSplit(Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum)">
            <summary>
            Set the splitting parameter for the violation viewer
            </summary>
            <param name="SplitType"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.SetGrouping(Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum)">
            <summary>
            Set the grouping parameter for the violation viewer
            </summary>
            <param name="GroupType"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.HandleSelection(System.String)">
            <summary>
            Handle a group-level selection
            </summary>
            <param name="Selection"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.SearchSummary(System.Object)">
            <summary>
            Search through summary items for a particular text
            </summary>
            <param name="ComparisonObject">The button to be clicked</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.tmrUpdate_Tick(System.Object,System.EventArgs)">
            <summary>
            Go through all violations, to update recency as needed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.lvViolations_RetrieveVirtualItem(System.Object,System.Windows.Forms.RetrieveVirtualItemEventArgs)">
            <summary>
            Return our virtual item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.lvViolations">
            <summary>Our list of violations</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.Violation_Viewer.SelectedUIDs">
            <summary>Return the UID of the selected violation</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Violation_Viewer.SafeGetUIDs">
            <summary>
            A delegate for retrieving UIDs
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Violation_Viewer.SafeViolationModification">
            <summary>
            This delegate handles safe addition and removal of violations from the list view.
            </summary>
            <param name="Violation"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Violation_Viewer.LVGroupMetrics">
            <summary>
            This structure holds the GroupMetrics list
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer">
            <summary>
            This class is responsible for comparing items in order to properly sort the list
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonType">
            <summary>The current comparison type</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.Grouping">
            <summary>The current grouping</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.Split">
            <summary>The current split (none, by voltage, or by element type)</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.Compare(System.Windows.Forms.ListViewItem,System.Windows.Forms.ListViewItem)">
            <summary>
            Compare two alarm violations
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.Compare(System.Object,System.Object)">
            <summary>
            Compare two alarm violations
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum">
            <summary>The different comparison types available</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.Title">
            <summary>Title</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.Name">
            <summary>The name of our element</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.ViolType">
            <summary>Violation Type</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.ElemType">
            <summary>Element Type</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.Date">
            <summary>Date / hour</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.Recency">
            <summary>Recency</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.Voltage">
            <summary>Voltage</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.Substation">
            <summary>Substation</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.Owner">
            <summary>Owner</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.Operator">
            <summary>Operator</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.Contingency">
            <summary>Contingency Definition</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer.ComparisonTypeEnum.None">
            <summary>None</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button">
            <summary>
            This class holds an a summary button for an alarm violation
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button.Violations">
            <summary>The collection of violations for this button</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button.VoltageLevel">
            <summary>The voltage level of our alarm button</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button.ElemType">
            <summary>The element type of our alarm button</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button.BaseType">
            <summary>The Alarm violation type</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button.#ctor(System.Object)">
            <summary>
            Initialize a new alarm button with detailed information
            </summary>
            <param name="InVal"></param>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button.Total">
            <summary>The total number of violations within the type</summary>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button.New">
            <summary>The number of new violations within the type</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Renderer">
            <summary>
            Handle the rendering of the buttons 
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Renderer.Parent">
            <summary>Our parent viewer</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Renderer.#ctor(Macomber_Map.User_Interface_Components.Violation_Viewer)">
            <summary>
            Initialize the renderer
            </summary>
            <param name="Parent"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Renderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Handle the rendering of our background of a button
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Renderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Handle the rendering of our parent
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_County">
            <summary>
            This class holds the information for a county, including its path and whether it is visible
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_County.CountyPath">
            <summary>
            The path for the county
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_County.CountyPen">
            <summary>
            The pen for drawing the county
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_County.Visible">
            <summary>
            Whether the county is visible
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.GDIPlus.MM_GDI_County.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Single)">
            <summary>
            Initialize a new county
            </summary>
            <param name="CountyPath">The graphics path for hte county</param>
            <param name="PenColor"></param>
            <param name="PenWidth"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Overrides.MM_TabControl">
            <summary>
            This class overrides the tabcontrol, allowing for custom backgrounds
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Overrides.MM_TabControl.#ctor">
            <summary>
            Initialize our custom tab control
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Overrides.MM_TabControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override our paint background
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Overrides.MM_TabControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override our painting
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Repository">
            <summary>
            The CIM Repository stores all elements retrieved from the CIM model for rapid lookup. This provides the base for the network model and most lookups.
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.PanCursors">
            <summary>The set of cursors used for panning</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.TEIDs">
            <summary>The collection of CIM elements based on TEID</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Counties">
            <summary>The collection of counties based on name</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.KVLevels">
            <summary>The collection of KV levels used within the region</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.GenerationTypes">
            <summary>The collection of generation types used within the network</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Contingencies">
            <summary>The collection of contingency definitions</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.MapTiles">
            <summary>The collection of map tiles that are displayed on the screen</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.BasecaseViolations">
            <summary>Our collection of basecase violations</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.RASs">
            <summary>The collection of remedial action schemes</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Companies">
            <summary>The collection of companies (TDSPs and QSEs)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Substations">
            <summary>The collection of substations</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Training">
            <summary>Our interface to our trainer</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.ViolationTypes">
            <summary>The collection of violation types</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Lines">
            <summary>The collection of lines</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.BlackstartCorridors">
            <summary>The collection of blackstart corridors</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.MultipleLineSegments">
            <summary>The collection of multiple line segments</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.EBs">
            <summary>The collection of electrical buses</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Busbars">
            <summary>The collection of electrical buses</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.BusNumbers">
            <summary>The collection of electrical buses by number</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Units">
            <summary>The collection of units</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Islands">
            <summary>The collection of islands</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.DCTies">
            <summary>The collection of DCTies</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Loads">
            <summary>The collection of loads</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.ShuntCompensators">
            <summary>The collection of shunt compensators</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.ElemTypes">
            <summary>The collection of element types</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.SubstationDisplay">
            <summary>The display options for substations</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.OverallDisplay">
            <summary>The overall display parameters for the Macomber Map</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.xConfiguration">
            <summary>The XML configuration document, responsible for handling updates to the system</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.RenderMode">
            <summary>Our current rendering mode</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.AdaptiveRendering">
            <summary>Whether to use adaptive rendering</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.ViolationImages">
            <summary>The collection of violation images</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Views">
            <summary>The collection of display views</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.ActiveView">
            <summary>The currently active view</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Zones">
            <summary>The collection of load and weather zones</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Notes">
            <summary>The collection of operator notes, linked to TEIDs.</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.ArchivedViolations">
            <summary>Our collection of violations that are archived and shouldn't reappear</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.Violations">
            <summary>Our collection of violations</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.SystemCPUUsage">
            <summary>Our system CPU usage</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.CPUCounter">
            <summary>Our CPU performance counter</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.Initialize">
            <summary>
            Initialize the MM Repository
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.StartCPUMonitor">
            <summary>
            Initialize and start our CPU monitor
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.CPUMonitor(System.Object)">
            <summary>
            Run the CPU monitoring thread
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.ReinitializeDisplayParameters">
            <summary>
            Go through all display parameters, and reinitialize them
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.LoadXmlConfiguration">
            <summary>
            Load the XML Configuration file for the Macomber Map system
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.SetProperty(System.Object,System.String,System.String)">
            <summary>
            Retrieve the current value from a property
            </summary>        
            <param name="BaseObject">The object to modify</param>
            <param name="PropertyName">The name of the object's property to be modified</param>
            <param name="NewValue">The new value</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.FindElementType(System.String)">
            <summary>
            Locate or create an element type
            </summary>
            <param name="TypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.FindKVLevel(System.String)">
            <summary>
            Locate an KV Level. If one is not found, add it in.
            </summary>
            <param name="KVLevel">The KV level to search for</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.FindGenerationType(System.String)">
            <summary>
            Locate a generation type by the specified name
            </summary>
            <param name="GenType">The type to search for</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.SetActiveView(Macomber_Map.Data_Elements.MM_Display_View)">
            <summary>
            Assign a view as being active
            </summary>
            <param name="ActiveView">The active view</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.LocateElement(System.Object)">
            <summary>
            Attempt to locate an element by its TEID
            </summary>
            <param name="TEID"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.LocateElement(System.String,System.String,System.String,System.String)">
            <summary>
            Locate an element, based on its substation name, element name, element type and KV level.
            </summary>
            <param name="SubstationName">The name of the substation</param>
            <param name="ElementName">The name of the element</param>
            <param name="ElementType">The type of the element</param>
            <param name="ElementKVLevel">The KV level of the element</param>
            <returns>The appropriate element</returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.GetVoltageLevel(System.String)">
            <summary>
            Return the voltage level of an element
            </summary>
            <param name="VoltageLevel">The incoming voltage level</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Repository.TitleCase(System.String)">
            <summary>
            Convert text so that the first letter of each word is capitalized
            </summary>
            <param name="InString"></param>
            <returns></returns>
        </member>
        <member name="E:Macomber_Map.Data_Elements.MM_Repository.ViewChanged">
            <summary>Alert other classes to a view change</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Repository.ViewChangedDelegate">
            <summary>The delegate for a view change</summary>        
            <param name="ActiveView">The active view</param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Repository.enumRenderMode">
            <summary>
            Our collection of network map rendering modes
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.enumRenderMode.DirectX">
            <summary>Use a DirectX network map for rendering</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.enumRenderMode.GDIPlus">
            <summary>Use a GDI+ network map for rendering</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Repository.enumRenderMode.WPF">
            <summary>Use a Windows Presentation Framework (.NET 3.5) network map for rendering</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Note">
            <summary>
            This class handles a note on a particular object
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Note.ID">
            <summary>The unique identifier for this note</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Note.CreatedOn">
            <summary>When the note was created</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Note.Author">
            <summary>Who authored the note</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Note.Note">
            <summary>The text of the note</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Note.AssociatedElement">
            <summary>The element associated with the note.</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Note.Acknowledged">
            <summary>If the note has been acknowledged</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Note.#ctor(System.Int32,System.DateTime,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Initialize a new note from the CIM server
            </summary>
            <param name="ID">The unique ID of the note</param>
            <param name="CreatedOn">When the note was created or updated</param>
            <param name="Author">The author of the note</param>
            <param name="Note">The text of the note</param>
            <param name="TEID">The TEID of the note</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Note.#ctor(System.Int32,System.DateTime,System.String,System.String,Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Initialize a new note
            </summary>
            <param name="ID"></param>
            <param name="CreatedOn"></param>
            <param name="Author"></param>
            <param name="Note"></param>
            <param name="Element"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Note.#ctor(System.Xml.XmlElement)">
            <summary>
            Create a new note from XML configuration
            </summary>
            <param name="xBase">The base document</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Note.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Create a new note from the database
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Note.ToString">
            <summary>
            Provide the string definition of our note
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Note.XMLString">
            <summary>
            Get this note in XML format
            </summary>        
        </member>
        <member name="T:Macomber_Map.Misc._Components.ProcessDetails">
            <summary>
            This class provides details of CPU and memory usage on the current process    
            Adapted from http://www.philosophicalgeek.com/2009/01/03/determine-cpu-usage-of-current-process-c-and-c/
            </summary>
        </member>
        <member name="F:Macomber_Map.Misc._Components.ProcessDetails._prevSysKernel">
            <summary>The previous system kernel usage</summary>
        </member>
        <member name="F:Macomber_Map.Misc._Components.ProcessDetails._prevSysUser">
            <summary>The previous system user usage</summary>
        </member>
        <member name="M:Macomber_Map.Misc._Components.ProcessDetails.Initialize">
            <summary>
            Initialize our CPU monitoring system
            </summary>
        </member>
        <member name="M:Macomber_Map.Misc._Components.ProcessDetails.GetUsage">
            <summary>
            Determine the current CPU usage in percent
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Misc._Components.ProcessDetails.SubtractTimes(System.Runtime.InteropServices.ComTypes.FILETIME,System.Runtime.InteropServices.ComTypes.FILETIME)">
            <summary>
            Subtract two times
            </summary>
            <param name="a">Time 1</param>
            <param name="b">Time 2</param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Misc._Components.ProcessDetails.EnoughTimePassed">
            <summary>
            Determine whether enough time has passed for an accurate reading
            </summary>
        </member>
        <member name="P:Macomber_Map.Misc._Components.ProcessDetails.IsFirstRun">
            <summary>
            Determine whether this is the first CPU run
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Island">
            <summary>
            This class holds information on an island
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Island.ID">
            <summary>The ID of our island</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Island.OnlineCapacity">
            <summary>The total capacity of online units in the island</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Island.Generation">
            <summary>Generation in the island</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Island.MWLosses">
            <summary>MW Losses on the island</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Island.Island_Load">
            <summary>The load of the island</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Island.Frequency">
            <summary>The frequency of the island</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Island.FrequencyControl">
            <summary>Whether the island is on frequency control</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Island.#ctor">
            <summary>
            Initialize a new island
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Island.#ctor(System.Int32)">
            <summary>
            Initialize a new island
            </summary>
            <param name="ID"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Island.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Create a new island information point from XML
            </summary>
            <param name="xElem"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Island.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Create a new island point from a database
            </summary>
            <param name="dRd"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Island.ComputeBounds(System.Drawing.PointF@,System.Drawing.PointF@,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,System.Boolean)">
            <summary>
            Compute the bounds for our island
            </summary>
            <param name="StartPoint"></param>
            <param name="EndPoint"></param>
            <param name="nMap"></param>
            <param name="ControlDown"></param>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Island.Units">
            <summary>
            Report the list of units associated with this island
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Island.ShuntCompensators">
            <summary>
            Report the list of units associated with this island
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Island.Loads">
            <summary>
            Report the list of units associated with this island
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Island.AvailableCapacity">
            <summary>
            The maximum capacity for all units
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Breaker_Switch">
            <summary>
            This class holds information on a breaker, including its open/closed state
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Breaker_Switch.BreakerState">
            <summary>The current state of the breaker</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Breaker_Switch.HasSynchroscope">
            <summary>Whether the breaker has a syncrhoscope</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Breaker_Switch.HasSynchrocheckRelay">
            <summary>Whether the breaker has a synchrocheck relay</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Breaker_Switch.#ctor">
            <summary>
            Initialize a new breaker
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Breaker_Switch.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM Breaker or switch
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Breaker_Switch.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a breaker or switch from CIM Server SQL
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Breaker_Switch.Open">
            <summary>
            Whether the breaker/switch is opened
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Breaker_Switch.BreakerStateEnum">
            <summary>The possible states of the breaker</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Breaker_Switch.BreakerStateEnum.Closed">
            <summary>The breaker is closed</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Breaker_Switch.BreakerStateEnum.Open">
            <summary>The breaker is opened</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Breaker_Switch.BreakerStateEnum.Unknown">
            <summary>The breaker's state is unknown</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Search_Results">
            <summary>
            This class executes a search and stores the results
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Search_Results.nMap">
            <summary>The calling network map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Search_Results.violView">
            <summary>The associated violation viewer</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Search_Results.miniMap">
            <summary>The associated mini-map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Search_Results.AbortSearch">
            <summary>Whether the current search should be aborted</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Search_Results.BaseElements">
            <summary>The collection of base elements returned from the search </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Search_Results.SearchText">
            <summary>
            The search text used
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Search_Results.lvSorter">
            <summary>
            The sorter for the list view
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Search_Results.RightClickMenu">
            <summary>The menu for handling right clicks on a cell</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.#ctor">
            <summary>
            Initialize the search results
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.lvSearch_ItemSelectionChanged(System.Object,System.Windows.Forms.ListViewItemSelectionChangedEventArgs)">
            <summary>
            Handle the change in an item's selection, by calling up the appropriate property page.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.SetControls(Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.Mini_Map,System.String,Macomber_Map.User_Interface_Components.Form_Builder,Macomber_Map.User_Interface_Components.DataSet_Base@,Macomber_Map.User_Interface_Components.Element_Summary,System.Boolean,System.Boolean)">
            <summary>
            Assign controls to the search results window
            </summary>
            <param name="nMap">Network Map</param>
            <param name="violView">Violations view</param>
            <param name="miniMap">The mini-map</param>
            <param name="SearchText">Search Text</param>
            <param name="Parent">The parent builder</param>
            <param name="BaseData">The base data tables</param>                
            <param name="ControlPressed">Whether the control button is pressed</param>
            <param name="viewSummary"></param>
            <param name="AltPressed">Whether the alt button is pressed</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.ConfigureSearch">
            <summary>
            Configure our search menu
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.Repository_ViewChanged(Macomber_Map.Data_Elements.MM_Display_View)">
            <summary>
            Update our list view's image list to reflect our new active view.
            </summary>
            <param name="ActiveView">The updated view</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.SetPropertyPage(Macomber_Map.User_Interface_Components.Property_Page)">
            <summary>
            Assign a property page to the search results form
            </summary>
            <param name="propPage"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.lvSearch_ColumnClick(System.Object,System.Windows.Forms.ColumnClickEventArgs)">
            <summary>
            Handle a column click in the search results
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.PerformSearch(System.Object,System.EventArgs)">
            <summary>
            Handle the search within the search window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.PerformSearch(System.Boolean,System.Boolean)">
            <summary>
            Perform the actual searching
            </summary>
            <param name="ControlPressed">Whether to return just substations with one item</param>
            <param name="AltPressed">Whether alt is pressed</param>
            <returns>True if a succesful match has been found</returns>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.CheckElement(Macomber_Map.Data_Elements.MM_Element,Macomber_Map.Data_Elements.MM_KVLevel,Macomber_Map.Data_Elements.MM_Element_Type,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Boolean})">
            <summary>
            Check to see whether an element meets the inclusion criteria
            </summary>
            <param name="Elem">The element to be checked </param>
            <param name="KVLevel">The KV Level to be used</param>
            <param name="ElemType">The Element type to be used</param>
            <param name="Words">The words to search for</param>
            <param name="ElementWords">The collection of words for an element, for testing</param>        
            <returns>True if the element passes all criteria</returns>        
            
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.BuildWords(Macomber_Map.Data_Elements.MM_Element,System.Collections.Generic.Dictionary{System.String,System.Boolean})">
            <summary>
            Build the list of words for this item
            </summary>
            <param name="Elem"></param>
            <param name="OutWords"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.AddWord(System.Collections.Generic.Dictionary{System.String,System.Boolean},System.String)">
            <summary>
            Add a word into the search words collection
            </summary>
            <param name="OutWords"></param>
            <param name="WordToAdd"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.AddElement(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Add an element to the list view
            </summary>
            <param name="Elem">The element to add</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.SetViolationViews(Macomber_Map.User_Interface_Components.Violation_Viewer)">
            <summary>
            Update with our new violation viewer, and set everything up.
            </summary>
            <param name="ViolViewer">The violation viewer</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.FindWord(System.String)">
            <summary>
            Search for a word within our context
            </summary>
            <param name="Word">The word to search for</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.FailError(System.String)">
            <summary>
            Show a message box with the specified error text, and return false
            </summary>
            <param name="ErrorText">The error text to be displayed</param>
            <returns>False</returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.lvSearch_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the user's right-click on an item, to bring up the appropriate menu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.SetViewSummary(Macomber_Map.User_Interface_Components.Element_Summary)">
            <summary>
            Set our summary view
            </summary>
            <param name="viewSummary"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.picAbort_Click(System.Object,System.EventArgs)">
            <summary>
            Abort the current search
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Search_Results.txtSearch_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Handle the enter key press
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:Macomber_Map.User_Interface_Components.Search_Results.ItemSelectionChanged">
            <summary>Handle an item selection change</summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Search_Results.ItemSelectionDelegate">
            <summary>
            A delegate for handling item selection
            </summary>
            <param name="SelectedElement"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Search_Results.SafeUpdateView">
            <summary>
            This delegate handles updating the view safely
            </summary>
            <param name="ActiveView">The new active view</param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Search_Results.SimpleListViewItemSorter">
            <summary>
            This class handles the list view item sorting
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.NetworkMap.Generic.MM_NetworkMap_FlowPath">
            <summary>
            This class contains all of the information to send a MW/MVAR flow arrow from one side of a line to another
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Generic.MM_NetworkMap_FlowPath.StartPoint">
            <summary>The starting point</summary> 
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Generic.MM_NetworkMap_FlowPath.EndPoint">
            <summary>The ending point</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Generic.MM_NetworkMap_FlowPath.Delta">
            <summary>The delta to be carried out each step</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Generic.MM_NetworkMap_FlowPath.MaxDimension">
            <summary>The maximum number of points the line flow will traverse</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Generic.MM_NetworkMap_FlowPath.CurDimension">
            <summary>The current dimension</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Generic.MM_NetworkMap_FlowPath.sint">
            <summary>The sinusoidal component of the flow line</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.NetworkMap.Generic.MM_NetworkMap_FlowPath.cost">
            <summary>The cosinusoidal component of the flow line</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Generic.MM_NetworkMap_FlowPath.#ctor(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Initialize a new flow path
            </summary>
            <param name="Point1">The first part of the line</param>
            <param name="Point2">The second part of the line</param>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.NetworkMap.Generic.MM_NetworkMap_FlowPath.RecomputeFlow(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Recompute the flow of a line
            </summary>
            <param name="Point1">The first part of the line</param>
            <param name="Point2">The second part of the line</param>                
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.NetworkMap.Generic.MM_NetworkMap_FlowPath.Current">
            <summary>
            Retrieve the current flow path point
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Limit_Reserve_Viewer">
            <summary>
            This class holds the information for a viewer for CSC/IROL and reserve information
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Limit_Reserve_Viewer.InitializeComponent">
            <summary>
            Initialize a new limit reserve viewer
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Limit_Reserve_Viewer.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Handle the closing of the form (to hide instead of shut down)
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Limit_Reserve_Viewer.#ctor(System.Xml.XmlElement)">
            <summary>
            Initialize a new reserve viewer
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Limit_Reserve_Viewer.tmrUpdate_Tick(System.Object,System.EventArgs)">
            <summary>
            Handle the timer update
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.Data_Table">
            <summary>
            The data table provides an interface into the core data
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Data_Table.AssociatedPropertyPage">
            <summary>The property page associated with this item</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Data_Table.SettingDataSource">
            <summary>This flag will prevent the property page from firing during a refresh</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Data_Table.RightClickMenu">
            <summary>The menu for handling right clicks on a cell</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Data_Table.nMap">
            <summary>The network map associated with the large display (for zooming/panning the map on right-click</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Data_Table.violView">
            <summary>The violation viewer associated with this display</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.Data_Table.miniMap">
            <summary>The mini-map associated with this display</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Data_Table.#ctor(Macomber_Map.User_Interface_Components.Property_Page,Macomber_Map.User_Interface_Components.NetworkMap.Network_Map,Macomber_Map.User_Interface_Components.Violation_Viewer,Macomber_Map.User_Interface_Components.Mini_Map)">
            <summary>
            Initialize a new data table
            </summary>
            <param name="AssociatedPropertyPage">The property page associated with the table</param>
            <param name="miniMap">The mini-map associated with the table</param>
            <param name="nMap">The network map associated with the table</param>
            <param name="violView">The violation view assocaited with the table</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Data_Table.Data_Table_CellValueChanged(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            Handle a value change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Data_Table.Data_Table_DataError(System.Object,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
            <summary>
            Handle a grid data error
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Data_Table.OnSelectionChanged(System.EventArgs)">
            <summary>
            Handle a selection change within the data table, and send it to the associated property page
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Data_Table.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Handle the right-click event on a cell
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Data_Table.SetDataSource(System.Windows.Forms.BindingSource)">
            <summary>
            Set the data source for a table, and make sure we don't accidently call up a property page
            </summary>
            <param name="bindingSource">The data binding and source for the table</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.Data_Table.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)">
            <summary>
            Handle the row post-paint, in order to show violations when they occur.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_CombinedCycleConfiguration">
            <summary>
            This class holds information on a combined cycle unit
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_CombinedCycleConfiguration.Units">
            <summary>Our collection of units</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_CombinedCycleConfiguration.Configurations">
            <summary>Our collection of configurations</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_CombinedCycleConfiguration.#ctor">
            <summary>
            Initialize a new Combined cycle configuration
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_CombinedCycleConfiguration.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new Combined cycle configuration
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_CombinedCycleConfiguration.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new Combined cycle configuration
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_BusbarSection">
            <summary>
            This class holds information on the busbar section
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_BusbarSection.PerUnitVoltage">
            <summary>The current voltage (pU) of the electrical bus</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_BusbarSection.Estimated_kV">
            <summary>The current voltage (kV) of the electrical bus</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_BusbarSection.Estimated_Angle">
            <summary>The angle of the electrical bus</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_BusbarSection.Limits">
            <summary>The voltage limits of the bus (High normal, Low normal, High emergency, Low emergency)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_BusbarSection.IslandNumber">
            <summary>The island associated with the bus</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_BusbarSection.UpcomingOutage">
            <summary>The next scheduled outage, if any</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_BusbarSection._Node">
            <summary>The node associated with the busbar section</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_BusbarSection.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new node from a data reader
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_BusbarSection.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new node from an XML document
            </summary>
            <param name="ElementSource"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_BusbarSection.#ctor">
            <summary>
            Initialize a parameterless node
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_BusbarSection.CompareBusbarSections(Macomber_Map.Data_Elements.MM_BusbarSection)">
            <summary>
            Compare two busbar sections
            </summary>
            <param name="BB">The other busbar section</param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_BusbarSection.Node">
            <summary>The node associated with the busbar section</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_BusbarSection.PerUnit">
            <summary>
            Report the per-unit voltage of the busbar section, whether real-time or post-ctg.
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_BusbarSection.VoltageText">
            <summary>
            Return the text string indicating this item's voltage
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Transformer">
            <summary>
            This class holds information on transformers
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Transformer.Limits">
            <summary>The limits of MVA flow on the transformer</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Transformer.Windings">
            <summary>The transformer windings of the transformer</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Transformer.PhaseShifter">
            <summary>Whether the transformer is a phase shifter</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Transformer.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM Transformer
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew">Whether to add the new element</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Transformer.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Instantiate a new transformer element from the CIM Server
            </summary>
            <param name="ElementSource">The data row for the element</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Transformer.#ctor">
            <summary>
            Initialize a blank transformer
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Transformer.CheckElementValue(System.Xml.XmlElement,System.String,System.Single[]@)">
            <summary>
            Check an element for its value, and add it in.
            </summary>
            <param name="ElementSource"></param>
            <param name="AttributeName"></param>
            <param name="OutValues"></param>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.Estimated_MW">
            <summary>Estimated MW flow at each terminal</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.Telemetered_MW">
            <summary>Telemetered MW flow at each terminal</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.Estimated_MVAR">
            <summary>Estimated MVAR flow at each terminal</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.Telemetered_MVAR">
            <summary>Telemetered MVAR flow at each terminal</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.Estimated_MVA">
            <summary>Estimated MVA flow at each terminal</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.Telemetered_MVA">
            <summary>Telemetered MVA flow at each terminal</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.Voltage">
            <summary>Voltage levels</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.Estimated_Tap">
            <summary>Transformer tap positions</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.NormalLimit">
            <summary>Get/set the normal limit of our winding</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.LoadshedLimit">
            <summary>Get/set the load shed limit of our winding</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.EmergencyLimit">
            <summary>Get/set the emergency limit of our winding</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.Winding1">
            <summary>The first transformer winding</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.Winding2">
            <summary>The second transformer winding</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.WindingName">
            <summary>Report the names of our windings</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.KVLevel1">
            <summary>The first transformer KVLevel</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.KVLevel2">
            <summary>The second transformer KVLevel</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.MVAFlowDirection">
            <summary>
            Return the substation to which the MVA flow is heading
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.MVAFlow">
            <summary>
            Return the largest MVA flow (in absolute values)
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.MVARFlow">
            <summary>
            Return the largest MW flow (in absolute values)
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.MWFlow">
            <summary>
            Return the largest MW flow (in absolute values)
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.MVARFlowDirection">
            <summary>
            Return the substation to which the MVAR flow is heading
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.KVLevelList">
            <summary>
            Return a string of KV levels within the substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.FlowPercentageText">
            <summary>
            Return the percentage this transformer is loaded
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Transformer.MWFlowDirection">
            <summary>
            Return the substation to which the flow is heading
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.MM_Server.MM_Server_ValueUpdate">
            <summary>
            This class holds information on a value update
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server.MM_Server_ValueUpdate.Attribute">
            <summary>Our attribute</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server.MM_Server_ValueUpdate.Index">
            <summary>The index of our data point</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server.MM_Server_ValueUpdate.InValue">
            <summary>Our incoming value</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server.MM_Server_ValueUpdate.#ctor(MM_Communication.Elements.MM_Element.enumAttributes,System.Byte,System.Object)">
            <summary>
            Initialize a new value update message
            </summary>
            <param name="Attribute"></param>
            <param name="Index"></param>
            <param name="InValue"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server.MM_Server_ValueUpdate.ToString">
            <summary>
            Report an easy-to-read identifier for our element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.Data_Connections.MM_Server_Connector">
            <summary>
            This class is responsible for connecting to the CIM server
            
            Open Source note: most of the code associated in this class is commented or removed, as it provides the connectivity information to the Macomber Map server, which will be released an integrated in Phase II. 
            Some code snippets are provided as example.
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.LoginDebugMode">
            <summary>Login debug mode - infinite time for the server to process login</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.ConnectionInProgress">
            <summary>The server is attempting to connect to the server, don't spawn new instances</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.UserOperatorships">
            <summary>The operatorships the user has</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.OperatorshipCompanies">
            <summary>The list of companies the operator has usership for, based on their permissions</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.IsSuperUser">
            <summary>Whether the user is ERCOT/superuser who can see all equipment and states</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.LastEMSHeartbeat">
            <summary>Our last EMS heartbeat</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.LastDataReceived">
            <summary>When our last data were received from the server</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.EMSConsoleName">
            <summary>The name of our EMS console</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.ModelLoadCompleted">
            <summary>Our flag for model load completion</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.ActiveOneLines">
            <summary>Our collection of active one-lines</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.ActiveControlPanels">
            <summary>Our collection of active control panels</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.StudyMode">
            <summary>Whether MM is in study or real-time mode</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.CIMVersion">
            <summary>The version number of our CIM file.</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.HaveCIMVersion">
            <summary>The flag for our CIM version completion</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.BaseElement">
            <summary>The base configuration element</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.Name">
            <summary>The name of our connector</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.Primary">
            <summary>The name/IP address of our primary server</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.PrimaryPort">
            <summary>The TCP/IP port for our primary server</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.Secondary">
            <summary>The name/IP address of our secondary server</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.OneLineMappings">
            <summary>Our one-line mapping and control panel data</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.SecondaryPort">
            <summary>The TCP/IP port for our primary server</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.UserName">
            <summary>The user name associated with the connection</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.Password">
            <summary>The password associated with the connection</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.ConnectionAttempt">
            <summary>The connection counter to resolve multi-connect issues</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.DataSource">
            <summary>The data source associated with the connection</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.CommandStart">
            <summary>When a command is started</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.CommandRunning">
            <summary>Track whether a command is being sent</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.LoginMessage">
            <summary>Our login message</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.ExportModel">
            <summary>Whether to export the network model for quick loading next time.</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.readyToUpdate">
            <summary>Whether we're ready for an update</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.Reserves">
            <summary>Our collection of reserves</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.SystemWideData">
            <summary>Our collection of SystemWide data</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.StudyVerified">
            <summary>Whether the user is verified against the study system.</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.RTVerified">
            <summary>Whether the user is verified against the real-time or simulator systems.</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.StudiesEnabled">
            <summary>Whether the user has access to studies</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.#ctor(System.Xml.XmlElement,System.String,System.String,System.String,System.Int32)">
            <summary>
            Initialize a new CIM Server connector
            </summary>
            <param name="xCIMServer"></param>
            <param name="UserName"></param>
            <param name="Password"></param>
            <param name="ConnectionAttempt">The connection attempt number</param>
            <param name="DataSource">The data source for our connector</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadOneLineMappings">
            <summary>
            Load in our infromation on one-lines
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.ValidateCIMModel">
            <summary>
            Validate our CIM model, and load the most current one if not available.
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.RetrieveStudyData">
            <summary>
            Initiate our StudySystem retrieval
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.RetrieveData">
            <summary>
            Initiate our initial state + model retrieval
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LookupCounty(System.Drawing.PointF)">
            <summary>
            Locate a substation's county by its latitude/longitude
            </summary>
            <param name="LatLng"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.Initialize">
            <summary>Connect to the CIM Server</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.RetrieveRealTimeData">
            <summary>
            Retrieve the collection of real-time data
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.NewClient_ServerConnectionLost(System.Object)">
            <summary>
            Handle the loss of a server connection
            </summary>
            
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.AssignBoolean(System.Object,System.Boolean@)">
            <summary>
            Assign a boolean value if possible
            </summary>
            <param name="NewValue"></param>
            <param name="TargetBool"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.AssignSingle(System.Object,System.Single@)">
            <summary>
            Assign a value to a particular item. If it's a dbNull, assign to float.NaN.
            </summary>
            <param name="NewValue">The value to write</param>
            <param name="TargetFloat">The target variable for the value</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.CompletedSystemWide">
            <summary>
            Handle incoming system-wide data after the MM server has sent all values
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.Connect">
            <summary>
            Connect to our Macomber Map server
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.Close(System.Int32)">
            <summary>
            Close the connection to our server
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LogIn">
            <summary>
            Log in to the MM server
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadBoundaries">
            <summary>Load the boundaries</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadElement(System.Int32,System.Boolean)">
            <summary>Load an element by TEID</summary>
            <param name="TEID">The TEID of the element</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadElement(System.Int32,Macomber_Map.Data_Elements.MM_Element_Type,System.Boolean)">
            <summary>Load an element by TEID and element type</summary>
            <param name="TEID">The TEID of the element</param>
            <param name="ElementType">The element type</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LocateElements(System.String[])">
            <summary>
            Locate all elements that are within the bounds of a substation (for lasso purposes)
            </summary>
            <param name="Substations">The collection of substations to search</param>
            <returns>A collection of elements </returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LocateElements(System.Int32[])">
            <summary>
            Locate all elements that are within the bounds of a substation (for lasso purposes)
            </summary>
            <param name="Substations">The collection of substations to search</param>
            <returns>A collection of elements </returns>
        </member>
        <member name="F:Macomber_Map.Data_Connections.MM_Server_Connector.State">
            <summary>
            Update the state of the current object
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadElement(System.String,System.String,Macomber_Map.Data_Elements.MM_Element_Type)">
            <summary>
            Load an element by substation name and element name
            </summary>
            <param name="SubstationName">The name of the substation</param>
            <param name="ElementName">The name of the element</param>
            <param name="ElementType">The element type</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadCompanies">
            <summary>Load the collection of companies</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadKVLevels">
            <summary>Load KV levels</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadElementTypes">
            <summary>Load the collection of element types</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadReserves">
            <summary>
            Load our collection of reserves
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadBlackstartCorridors">
            <summary>Load in our collection of blackstart corridors</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadLines">
            <summary>Load the collection of lines</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadZones">
            <summary>Load the collection of load and weather zones</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadNotes">
            <summary>Load the collection of notes</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadSubstations">
            <summary>Load the collection of substations</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadTransformers">
            <summary>Load the collection of transformers</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadUnits">
            <summary>Load the collection of units</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadLoads">
            <summary>Load the collection of loads</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadDCTies">
            <summary>Load the collection of DCTies</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadElectricalBuses">
            <summary>Load the collection of loads</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadBusbarSections">
            <summary>Load the collection of busbar sections</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadShuntCompensators">
            <summary>Load the collection of capacitors and reactors</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadContingencyDefinitions">
            <summary>Load the collection of contingency definitions</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadRemedialActionSchemes">
            <summary>Load the collection of remedial action schemes</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadOneLineControlPanel(Macomber_Map.User_Interface_Components.OneLines.MM_ControlPanel,Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element,System.Xml.XmlElement,System.String,System.Guid)">
            <summary>
            Load a one-line control panel
            </summary>
            <param name="Panel"></param>
            <param name="Elem"></param>
            <param name="SourceApplication"></param>
            <param name="xConfig"></param>
            <param name="QueryGUID"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.ToggleBoolean(System.Guid,System.Int32,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Send a request for a Boolean toggle
            </summary>
            <param name="PanelGuid"></param>
            <param name="Substring"></param>
            <param name="ColumnName"></param>
            <param name="ColumnDescription"></param>
            <param name="NewValue"></param>
            <param name="Substation"></param>
            <param name="ElemType"></param>
            <param name="ElemName"></param>
            <param name="DataSourceName"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.SendMessage(System.Guid,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Send a message to our server
            </summary>
            <param name="PanelGuid"></param>
            <param name="Substring"></param>
            <param name="Message"></param>
            <param name="MessageDescription"></param>
            <param name="Substation"></param>
            <param name="ElemType"></param>
            <param name="ElemName"></param>
            <param name="OldValue"></param>
            <param name="NewValue"></param>
            <param name="DataSourceName"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.UpdateValue(System.Guid,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update our value in control panel
            </summary>
            <param name="PanelGuid"></param>
            <param name="Substring"></param>
            <param name="ColumnName"></param>
            <param name="ColumnDescription"></param>
            <param name="UpdatedValue"></param>
            <param name="OldValue"></param>
            <param name="Substation"></param>
            <param name="ElemType"></param>
            <param name="ElemName"></param>    
            <param name="DataSourceName"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadOneLine(System.String,Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer,System.Guid@)">
            <summary>
            Load a one-line XML
            </summary>
            <param name="OneLineName">The name of the substation or element</param>
            <param name="OLView">The one-line viewer</param>
            <param name="OneLineGuid">The GUID of the one-line</param>
            <returns>The XML document containing the one-line configuration</returns>        
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.LoadOneLineFromFile(System.String,Macomber_Map.User_Interface_Components.OneLines.OneLine_Viewer,System.Guid@)">
            <summary>
            Load a one-line XML from a file
            </summary>
            <param name="OneLineName"></param>
            <param name="OLView"></param>
            <param name="OneLineGuid"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.ShutdownOneLine(System.Guid)">
            <summary>
            Shut down a one-line query
            </summary>
            <param name="OneLineGuid"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.MM_Server_Connector.UploadNote(Macomber_Map.Data_Elements.MM_Element,System.String,System.String)">
            <summary>
            Upload a note to the CIM server
            </summary>
            <param name="Elem">The element to be updated</param>
            <param name="Author">The author of the note</param>
            <param name="NoteText">The text of the note</param>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Generic.MM_Data_Source">
            <summary>
            This class holds information on data sources
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Application">
            <summary>The application driving the data source</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Database">
            <summary>The database driving the data source</summary>        
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Name">
            <summary>The display name for the data source</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Telemetry">
            <summary>Whether the data source offers telemetered data</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Estimates">
            <summary>Whether the data source offers estimated data</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.RefreshOnly">
            <summary>Whether this connector should be kept up in real-time</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.ConnectorType">
            <summary>The connector type for the data source</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.BackColor">
            <summary>The background color for the data source</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.ForeColor">
            <summary>The foreground color for the data source</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Default">
            <summary>This data source is the default one</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Master">
            <summary>This data source is associated with the master/real-time information</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Primary">
            <summary>The first host, if specified</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Secondary">
            <summary>The second host, if specified</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.ViolationApp">
            <summary>The application holding violation information</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.UseMasterForViolations">
            <summary>Whether the master data source should be used for violations</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Port">
            <summary>The specified port, if any</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.NioArc">
            <summary>Whether or not the connection should use NioArc</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.State">
            <summary>The connection state of our binding object</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Connector">
            <summary>Our EMS connector</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Data_Source.ConnectionStatuses">
            <summary>The collection of connection statuses for our source</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Generic.MM_Data_Source.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a pseudo-data source from a savecase
            </summary>
            <param name="xElem"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Generic.MM_Data_Source.#ctor(System.Xml.XmlElement,System.Type,System.Boolean)">
            <summary>
            The data source related to the assigned connector
            </summary>
            <param name="xConfig">The Xml configuration for the data source</param>
            <param name="ConnectorType">The connector type</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Generic.MM_Data_Source.#ctor">
            <summary>
            Initialize a blank (for model usage) data source
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Generic.MM_Data_Source.DataSourceEquivalentTo(Macomber_Map.Data_Connections.Generic.MM_Data_Source)">
            <summary>
            Determine whether this data source is equivalent to another (same type, APname and Pri/Sec/Port/Nioarc
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Generic.MM_Data_Source.ToString">
            <summary>
            Report an easy to read name
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Decrypt(System.String)">
            <summary>
            Decrypt the specified encrypted text
            </summary>
            <param name="EncryptedText">The encrypted text</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Generic.MM_Data_Source.Encrypt(System.String)">
            <summary>
            Encrypt the specified clear text
            </summary>
            <param name="ClearText">The decrypted text</param>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line">
            <summary>
            This class holds the information needed to render a line
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.LineFlow">
            <summary>The graphic of our line flow</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.LineImage">
            <summary>The graphic of the line</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.MoveForward">
            <summary>Whether the line should move forwards or backwards</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.FlowPaths">
            <summary>The paths the flow arrow will take when it's moving forward</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.PathPosition">
            <summary>The current position of the arrow within our specified path (e.g., between point 0 and 1</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.FlowSize">
            <summary>The size for a flow</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.FlowIncrement">
            <summary>How many pixels the line should increment by every timer trip</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.FlowPoints">
            <summary>Our collection of inflection points and their associated angles</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.Visible">
            <summary>Whether the line is visible</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.ViolationVisible">
            <summary>Whether the line is visible due to a violation</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.LineAngle">
            <summary>The rotation needed to draw the line text</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.OwnerForm">
            <summary>The owner of the line</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.MultipleLine">
            <summary>If this line is shared with other lines connecting the same substations, the definition for it</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.CenterLine">
            <summary>The center of the line</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.#ctor(Macomber_Map.Data_Elements.MM_Line,Macomber_Map.Data_Elements.MM_Coordinates,System.Collections.Generic.Dictionary{Macomber_Map.Data_Elements.MM_AlarmViolation,System.Windows.Forms.ListViewItem},Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI,Macomber_Map.Data_Elements.MM_Boundary)">
            <summary>
            Initialize a new GDI Line
            </summary>
            <param name="Line">The associated line</param>
            <param name="Coords">The current system coordinates</param>
            <param name="ShownViolations">Our list of visible violations</param>
            <param name="CallingForm">The owning form of the violations</param>
            <param name="State">The state boundary</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.Line_ValuesChanged(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            When a line's telemetry values change, update the appropriate information
            </summary>
            <param name="ChangedLine">The changed line</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.FlipCoordinates(Macomber_Map.Data_Elements.MM_Line)">
            <summary>
            Flip the coordiantes of a transmission line, because its from and to substations differ in ordering from the coordinates start/stop
            </summary>
            <param name="Line">The transmission line to flip coordinates</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.ComputeLine(Macomber_Map.Data_Elements.MM_Line,System.Collections.Generic.Dictionary{Macomber_Map.Data_Elements.MM_AlarmViolation,System.Windows.Forms.ListViewItem},Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI,Macomber_Map.Data_Elements.MM_Coordinates,Macomber_Map.Data_Elements.MM_Boundary,System.Boolean)">
            <summary>
            Update the line flow information on our line
            </summary>        
            <param name="Line">The line on which this image is based</param>
            <param name="ShownViolations">Our collection of visible violations</param>
            <param name="CallingForm">The network map calling the line</param>
            <param name="Coordinates">Our system coordinates</param>
            <param name="State">The state border</param>
            <param name="RedrawText">Whether the text should be redrawn</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.SetFlowPoints(System.Collections.Generic.List{System.Drawing.Point})">
            <summary>
            Recompute the points for the line
            </summary>
            <param name="InPoints">The series of incoming points</param>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.IncrementLineFlow">
            <summary>
            Increment the line flow's position based on the increment assigned to it.
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.DrawLine(Macomber_Map.Data_Elements.MM_Line,System.Drawing.Graphics,System.Collections.Generic.Dictionary{Macomber_Map.Data_Elements.MM_AlarmViolation,System.Windows.Forms.ListViewItem},Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI,System.Boolean)">
            <summary>
            Draw the line
            </summary>
            <param name="Line">The line upon which the image is based</param>
            <param name="g">The graphics connector</param>
            <param name="ShownViolations">The collection of shown violations</param>
            <param name="CallingForm">The network map calling the line</param>
            <param name="DisplayAlternate">Display the alternate view if blinking on standard</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.DrawLineText(Macomber_Map.Data_Elements.MM_Line,System.Drawing.Graphics,Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            Draw the line text for the requested line
            </summary>
            <param name="Line">The underlying line ot use</param>
            <param name="g">The graphics connector</param>
            <param name="Coordinates"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.DrawFlowLine(System.Drawing.Graphics,Macomber_Map.Data_Elements.MM_Line,System.Collections.Generic.Dictionary{Macomber_Map.Data_Elements.MM_AlarmViolation,System.Windows.Forms.ListViewItem},Macomber_Map.User_Interface_Components.GDIPlus.Network_Map_GDI,System.Boolean,System.Single)">
            <summary>
            Draw the flow line
            </summary>
            <param name="g">The graphics connector</param>
            <param name="Line">The underlying line ot use</param>        
            <param name="CallingForm">The calling form</param>
            <param name="DisplayAlternate">Whether the alternate display should be used</param>
            <param name="ShownViolations">The collection of shown violations</param>
            <param name="ZoomLevel">The current zoom level</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.GDIPlus.MM_GDI_Line.LineText(Macomber_Map.Data_Elements.MM_Line)">
            <summary>
            Rebuild our line text
            </summary>
            <param name="Line">The line for which text should be built</param>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Popup_Menu">
            <summary>
            This class provides a menu strip across multiple windows for the right-click popup on an item, along with unified handling.
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Popup_Menu.BaseElement">
            <summary>The element for which the popup menu is showing items</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AllowMapMoving">
            <summary>Whether the user is permitted to move the map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.MM_Popup_Menu.OwnerObject">
            <summary>The object owning the control</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.Show(Macomber_Map.User_Interface_Components.OneLines.MM_OneLine_Element,System.Drawing.Point,Macomber_Map.Data_Elements.MM_Element,System.Boolean,System.String)">
            <summary>
            Show the context menu strip, after assigning the MM element and click handler
            </summary>
            <param name="Element"></param>
            <param name="Location"></param>
            <param name="BaseElement"></param>
            <param name="AllowMapMoving"></param>
            <param name="SourceApplication"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.Show(System.Windows.Forms.Control,System.Drawing.Point,Macomber_Map.Data_Elements.MM_Element,System.Boolean)">
            <summary>
            Show the context menu strip, after assigning the MM element and click handler
            </summary>
            <param name="ParentControl">The parent control for the item</param>
            <param name="Location">The location at which the menu should be shown (relative to the parent control)</param>
            <param name="BaseElement">The MM element driving the event</param>
            <param name="AllowMapMoving">Whether the user can move the map</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Collections.Generic.IEnumerable{Macomber_Map.Data_Elements.MM_Element},System.Boolean)">
            <summary>
            Show the context menu strip, for multiple elements.
            </summary>
            <param name="ParentControl">The parent control for the item</param>
            <param name="Location">The location at which the menu should be shown (relative to the parent control)</param>
            <param name="BaseElements">The MM element driving the event</param>
            <param name="AllowMapMoving">Whether the user can move the map</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.Show(Macomber_Map.User_Interface_Components.Violation_Viewer,System.Drawing.Point,Macomber_Map.User_Interface_Components.Violation_Viewer.AlarmViolation_Button,Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer)">
            <summary>
            Show the summary violation view
            </summary>
            <param name="ParentControl">The violation viewer</param>
            <param name="Location"></param>        
            <param name="btn">The tool strip button driving the display</param>
            <param name="ViolComparer">The list view comparer</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.Show(Macomber_Map.User_Interface_Components.Violation_Viewer,System.Drawing.Point,System.Windows.Forms.ToolStrip,Macomber_Map.User_Interface_Components.Violation_Viewer.ListViewItemComparer)">
            <summary>
            Show a tooltip popup menu for the violation viewer
            </summary>
            <param name="ParentControl"></param>
            <param name="Location"></param>
            <param name="ts">The toolstrip to process</param>
            <param name="lvSorter">The list view sorter</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Collections.Generic.List{Macomber_Map.Data_Elements.MM_AlarmViolation},System.Int32,System.Boolean)">
            <summary>
            Show the context menu strip, for multiple elements.
            </summary>
            <param name="ParentControl">The parent control for the item</param>
            <param name="Location">The location at which the menu should be shown (relative to the parent control)</param>
            <param name="Violations">The collection of violations driving the display</param>
            <param name="NewCount">The number of new elements</param>
            <param name="AllowMapMoving">Whether the user can move the map</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.Show(Macomber_Map.User_Interface_Components.Mini_Map,System.Drawing.Point)">
            <summary>
            Set an MM click handler, and display the mini-map control
            </summary>
            <param name="ParentControl"></param>
            <param name="Location"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AssignClickHandler(System.Windows.Forms.ToolStripItem)">
            <summary>
            Recursively assign a click handler to menu items
            </summary>
            <param name="Item"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.IsTransmissionElement(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Determine if an element is a transmission element
            </summary>
            <param name="ElementToTest"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.BuildItems(Macomber_Map.Data_Elements.MM_Element,System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Build all of the items for the element
            </summary>
            <param name="BaseElement">The MM element for which the items should be developed</param>
            <param name="Items">The collection of items</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.ItemLocation(System.String,System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Locate and/or build a path for items.
            </summary>
            <param name="Path"></param>
            <param name="Collection"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddBusAndShuntItems(Macomber_Map.Data_Elements.MM_Substation[],System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Build summary items 
            </summary>
            <param name="Substations"></param>
            <param name="Items"></param>
            <returns>Whether new items were added</returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddBoundaryItemDetails(Macomber_Map.Data_Elements.MM_Boundary,System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Add a boundary's details to the menu
            </summary>
            <param name="BaseElement"></param>
            <param name="Items"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddNoteItemDetails(Macomber_Map.Data_Elements.MM_Note,System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Add details for a note
            </summary>
            <param name="BaseElement">The note to be added</param>
            <param name="Items">The item list</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddSubstationItemDetails(Macomber_Map.Data_Elements.MM_Substation,System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Add a substation's detials to a menu
            </summary>
            <param name="BaseElement"></param>
            <param name="Items"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddLineFlowItems(System.Windows.Forms.ToolStripItemCollection,System.Object)">
            <summary>
            Add in menu items corresponding to line flows
            </summary>
            <param name="Items">The menu collection</param>
            <param name="ComparisonElement">The collection of items to parse through</param>        
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddLineValue(Macomber_Map.Data_Elements.MM_Line,Macomber_Map.Data_Elements.MM_Substation,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.SortedDictionary{Macomber_Map.Data_Elements.MM_KVLevel,System.Collections.Generic.List{Macomber_Map.Data_Elements.MM_Line}}},System.Int32)">
            <summary>
            Add a line to a list of line flows
            </summary>
            <param name="TestLine">The line to be added</param>
            <param name="ComparisonSubstation">The substation to which the line should be compared</param>
            <param name="Flows">The collection of flows</param>
            <param name="ThroughWithinOrSC">Whether the line is flagged as going through or within our region, or a SC</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.WorstViolation(System.Collections.IEnumerable)">
            <summary>
            Determine the worst violation from a series of elements
            </summary>
            <param name="Elements"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.ViolationImage(Macomber_Map.Data_Elements.MM_AlarmViolation_Type)">
            <summary>
            Retrieve the appropriate image for a violation type
            </summary>
            <param name="ViolationType"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddLineItemDetails(Macomber_Map.Data_Elements.MM_Line,System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Add an line's details to a menu
            </summary>
            <param name="BaseElement">The element for which the items should be added</param>
            <param name="Items">The collection of menu items</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.BuildInformation(System.Single[],System.Single[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Build information containing one or two arrays
            </summary>
            <param name="Array1">The first array</param>
            <param name="Array2">The second array</param>
            <param name="Array1Allowed">Whehter the first array is allowed</param>
            <param name="Array2Allowed">Whether the second array is allowed</param>
            <param name="Array1First">Whether the first array is first</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.BuildInformation(System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Build information containing one or two arrays
            </summary>
            <param name="Val1">The first array</param>
            <param name="Val2">The second array</param>
            <param name="Val1Allowed">Whehter the first array is allowed</param>
            <param name="Val2Allowed">Whether the second array is allowed</param>
            <param name="Val1First">Whether the first array is first</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddItemDetails(Macomber_Map.Data_Elements.MM_Element,System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Add an item's details to a menu
            </summary>
            <param name="BaseElement">The element for which the items should be added</param>
            <param name="Items">The collection of menu items</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddTransformerItemDetails(Macomber_Map.Data_Elements.MM_Transformer,System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Add details for a transformer
            </summary>
            <param name="BaseElement"></param>
            <param name="Items"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddTransformerWindingItemDetails(Macomber_Map.Data_Elements.MM_TransformerWinding,System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Add details for a transformer winding
            </summary>
            <param name="BaseElement"></param>
            <param name="Items"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.LineSummary(System.Collections.Generic.List{Macomber_Map.Data_Elements.MM_Line},System.Boolean)">
            <summary>
            Produce a string description about a group of lines
            </summary>
            <param name="Lines"></param>
            <param name="IncludePercentage"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddOwnershipItems(Macomber_Map.Data_Elements.MM_Element,System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Add ownership items to a menu
            </summary>
            <param name="BaseElement">The element for which the items should be added</param>
            <param name="Items">The collection of menu items</param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddMenuItem(System.Windows.Forms.ToolStripItemCollection,System.String,System.Boolean)">
            <summary>
            Create a new menu item
            </summary>
            <param name="ItemSource">The repository for this item</param>
            <param name="Text">The text of the item</param>
            <param name="SetDeactivated">Whether the item should be flagged as being deactivated</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddMenuItem(System.Windows.Forms.ToolStripItemCollection,System.String,System.Boolean,System.Drawing.Image,System.Object)">
            <summary>
            Crete a new menu item, with a specified image and element
            </summary>
            <param name="ItemSource">The repository for this item</param>
            <param name="Text">The text of the item</param>
            <param name="SetDeactivated">Whether the item should be flagged as being deactivated</param>
            <param name="Image">The image for the item</param>
            <param name="TagObject">The element or other object associated with the menu item</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.AddExpandableMenuItem(System.Windows.Forms.ToolStripItemCollection,System.String,System.Boolean,System.Drawing.Image,System.Object)">
            <summary>
            Crete a new menu item that can be expanded
            </summary>
            <param name="ItemSource">The repository for this item</param>
            <param name="Text">The text of the item</param>
            <param name="SetDeactivated">Whether the item should be flagged as being deactivated</param>
            <param name="Image">The image for the item</param>
            <param name="TagObject">The element or other object associated with the menu item</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.HandleDropDownOpening(System.Object,System.EventArgs)">
            <summary>
            Handle the opening of a dropdown menu by propigating its elements
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.MM_Popup_Menu.HandleItemClick(System.Object,System.EventArgs)">
            <summary>
            Handle an item being clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Macomber_Map.User_Interface_Components.MM_Popup_Menu.LocateNetworkMap">
            <summary>
            Locate the network map associated with the display
            </summary>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.MM_Popup_Menu.BusPhaseSorter">
            <summary>
            This class sorts bus voltages by phase angle
            </summary>
        </member>
        <member name="T:Macomber_Map.ModelRandomizer">
            <summary>
            (C) 2013, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc. All Rights Reserved.
            This class provides the interfaces for randomizing a network model file for sharing, in order to support diagnostic and demonstration needs
            </summary>
        </member>
        <member name="F:Macomber_Map.ModelRandomizer.RndBuffer">
            <summary>Our random buffer</summary>
        </member>
        <member name="F:Macomber_Map.ModelRandomizer.UpdatedTEIDsAndContingencies">
            <summary>Our collection of updated TEIDs and contingencies</summary>
        </member>
        <member name="F:Macomber_Map.ModelRandomizer.OriginalTEIDsAndContingencies">
            <summary>The collection of original TEIDs and contingencies</summary>
        </member>
        <member name="F:Macomber_Map.ModelRandomizer.csp">
            <summary>Our pseudorandom generator</summary>
        </member>
        <member name="F:Macomber_Map.ModelRandomizer.AssignedTEIDs">
            <summary>Our collection of assigned TEIDs to prevent duplication</summary>
        </member>
        <member name="F:Macomber_Map.ModelRandomizer.DictionaryWords">
            <summary>Our collection of dictionary words</summary>
        </member>
        <member name="M:Macomber_Map.ModelRandomizer.RandomizeNetworkModel(System.String,System.String)">
            <summary>
            NOTE: This subroutine takes a network model from a user and randomizes the information such 
            that it can be publically shared for demonstrating Macomber Map. This routine was ran against the 
            ERCOT MM_Model file (Macomber Map network model) in order to create random offsets of equipment, naming conventions, ownership and operatorship.
            </summary>
            <param name="XmlFileName"></param>
            <param name="DictionaryList"></param>
        </member>
        <member name="M:Macomber_Map.ModelRandomizer.UpdateNode(System.Xml.XmlNode,System.String[],System.String[])">
            <summary>
            Update a node
            </summary>
            <param name="xNode"></param>
            <param name="TEIDsToUpdate"></param>
            <param name="TitlesToUpdate"></param>
        </member>
        <member name="M:Macomber_Map.ModelRandomizer.GenerateTEID">
            <summary>
            Generate a new TEID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.ModelRandomizer.RandomizePosition(System.Xml.XmlAttribute)">
            <summary>
            Randomize a position
            </summary>
            <param name="xAttr"></param>
        </member>
        <member name="M:Macomber_Map.ModelRandomizer.UpdateTEIDs(System.Xml.XmlAttribute)">
            <summary>
            Update our list of TEIDs
            </summary>
            <param name="xAttr"></param>
        </member>
        <member name="M:Macomber_Map.ModelRandomizer.RandomizeNumber(System.Xml.XmlAttribute)">
            <summary>
            Randomize a number
            </summary>
            <param name="xAttr"></param>
        </member>
        <member name="M:Macomber_Map.ModelRandomizer.RandomizeSubString(System.String,System.Int32)">
            <summary>
            Randomize a substring
            </summary>
            <param name="InString"></param>
            <param name="StartPos"></param>
        </member>
        <member name="M:Macomber_Map.ModelRandomizer.RandomizeString(System.Xml.XmlAttribute,System.Int32,System.Boolean)">
            <summary>
            Generate a random string based on our text
            </summary>
            <param name="xAttr"></param>
            <param name="StartPos"></param>
            <param name="PreserveLength"></param>
        </member>
        <member name="M:Macomber_Map.ModelRandomizer.RandomInteger(System.Int32,System.Int32)">
            <summary>
            Use our random number generator to create an integer between an upper bound (exclusive) and lower bound (inclusive)
            Thanks to http://msdn.microsoft.com/en-us/magazine/cc163367.aspx
            </summary>
            <param name="Minimum"></param>
            <param name="Maximum"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.ModelRandomizer.RandomDouble">
            <summary>
            Use our random number generator to create a double-precision number
            Thanks to http://msdn.microsoft.com/en-us/magazine/cc163367.aspx
            </summary>
            <param name="rng"></param>
            <param name="Minimum"></param>
            <param name="Maximum"></param>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_StaticVarCompensator">
            <summary>
            This class holds information on capacitors and reactors
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_StaticVarCompensator.Estimated_MVAR">
            <summary>Estimated MVAR flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_StaticVarCompensator.Telemetered_MVAR">
            <summary>Telemetered MVAR flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_StaticVarCompensator.Nominal_MVAR">
            <summary>Nominal MVAR flow</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_StaticVarCompensator.Open">
            <summary>Whether the cap/reactor is open</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_StaticVarCompensator.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM SVS
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_StaticVarCompensator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new CIM SVS
            </summary>
            <param name="ElementSource">The SQL source for this line</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_StaticVarCompensator.#ctor">
            <summary>
            Initialize a new CIM capactior or reactor
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_StaticVarCompensator.CompareStaticVarCompensators(Macomber_Map.Data_Elements.MM_StaticVarCompensator)">
            <summary>
            Compare two StaticVar compensators
            </summary>
            <param name="SC">The other StaticVar compensator to which it should be compared</param>
            <returns></returns>
        </member>
        <member name="T:Macomber_Map.User_Interface_Components.SearchResultsHelper">
            <summary>
            (C) 2013, Michael E. Legatt, Ph.D., Electric Reliability Council of Texas, Inc. All Rights Reserved.
            This class provides a keyboard-based search helper to assist with navigating through the map
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.SearchResultsHelper.Elements">
            <summary>
            Our collection of search elements
            </summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.SearchResultsHelper.MainMap">
            <summary>Our main map</summary>
        </member>
        <member name="F:Macomber_Map.User_Interface_Components.SearchResultsHelper.PopupMenu">
            <summary>Our popup menu</summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.SearchResultsHelper.#ctor(Macomber_Map.MacomberMap)">
            <summary>
            Initialize our search results helper
            </summary>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.SearchResultsHelper.AddElement(System.String,Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Add an element to our collection list
            </summary>
            <param name="Title"></param>
            <param name="Elem"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.SearchResultsHelper.UpdateSearchText(System.String)">
            <summary>
            Update our search text
            </summary>
            <param name="CurrentText"></param>
        </member>
        <member name="M:Macomber_Map.User_Interface_Components.SearchResultsHelper.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle our mouse click event
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Macomber_Map.User_Interface_Components.SearchResultsHelper.SearchOptionSelected">
            <summary>
            Our event handler for the selection of a search option
            </summary>
        </member>
        <member name="T:Macomber_Map.Program">
            <summary>
            This class handles the application startup and configuration points
            </summary>
        </member>
        <member name="F:Macomber_Map.Program.Console">
            <summary>Whether to activate the system console</summary>
        </member>
        <member name="F:Macomber_Map.Program.MapStarted">
            <summary>Our global indicator of when the map started</summary>
        </member>
        <member name="F:Macomber_Map.Program.ErrorLog">
            <summary>The error log</summary>
        </member>
        <member name="F:Macomber_Map.Program.MainFormChecker">
            <summary>This timer checks the presence of the main form every 15 seconds, if the thread isn't running, kill the application</summary>
        </member>
        <member name="F:Macomber_Map.Program.Events">
            <summary>A queue of events</summary>
        </member>
        <member name="F:Macomber_Map.Program.MM">
            <summary>Our MM instance</summary>
        </member>
        <member name="M:Macomber_Map.Program.Main(System.String[])">
            <summary>The main entry point for the application.</summary>  
        </member>
        <member name="M:Macomber_Map.Program.CurProc_OutputDataReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)">
            <summary>
            Handle console-based output data
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.Program.Program_ErrorDataReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)">
            <summary>
            Handle error data
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.Program.StartLog">
            <summary>
            Start logging
            </summary>
        </member>
        <member name="M:Macomber_Map.Program.StaStateEstimatorworkMap(System.Object)">
            <summary>
            Start the network map in its own thread
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Macomber_Map.Program.MMContext_ThreadExit(System.Object,System.EventArgs)">
            <summary>
            Handle the thread exit by shutting everything down
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.Program.ThreadChecker(System.Object)">
            <summary>
            This is the main checking thread to be run every 15 seconds
            </summary>
            <param name="MainFormThread"></param>
        </member>
        <member name="M:Macomber_Map.Program.LogError(System.String,System.Object[])">
            <summary>
            Log a system error.
            </summary>
            <param name="ErrorText">The text of the error</param>
            <param name="args">The formatting parameters</param>
        </member>
        <member name="M:Macomber_Map.Program.WriteConsoleLine(System.String)">
            <summary>
            If our console is enabled, write text out to it
            </summary>
            <param name="ConsoleText">The text to write out to the console</param>
        </member>
        <member name="M:Macomber_Map.Program.LogError(System.Exception)">
            <summary>
            Log a system error
            </summary>
            <param name="ex">The exception to be logged</param>
        </member>
        <member name="M:Macomber_Map.Program.WriteLineInformation">
            <summary>
            Write out a line's information (including points, distacnce, etc.)
            </summary>
        </member>
        <member name="M:Macomber_Map.Program.ActivateConsole">
            <summary>
            Activate the system console on demand
            </summary>
            <returns>True</returns>
        </member>
        <member name="M:Macomber_Map.Program.InputBox(System.String,System.String,System.String@)">
            <summary>
            Offer a simple input box, a-la VB
            </summary>
            <param name="title"></param>
            <param name="promptText"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Program.MessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Display a messagebox against the MM thread
            </summary>
            <param name="text"></param>
            <param name="caption"></param>
            <param name="buttons"></param>
            <param name="icon"></param>
        </member>
        <member name="M:Macomber_Map.Program.MessageBoxInSeparateThread(System.Object)">
            <summary>
            Kick off a messagebox in a separate thread
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Substation">
            <summary>
            This class contains information on substations
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.LongName">
            <summary>
            The long name of the substation
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.IsBlackstart">
            <summary>Whether the substation is has blackstart components</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.HasSynchroscope">
            <summary>Whether the substation has a synchroscope</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.HasSynchrocheck">
            <summary>Whether the substation has a synchrocheck relay</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.LatLong">
            <summary>
            The longitude and latitude of the substation
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.DisplayName">
            <summary>
            Return the display name of the substation (Name or Long name, depending on the preference
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation._Operators">
            <summary>Our collection of operators</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.KVLevels">
            <summary>
            The collection of KV levels found within the substation
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.County">
            <summary>
            The county in which the substation resides
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.ElemTypes">
            <summary>
            The collection of element types within the substation
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.Units">
            <summary>Units within this substation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.Loads">
            <summary>Loads within this substation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.Transformers">
            <summary>Transofrmers within this substation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.StaticVarCompensators">
            <summary>Our collection of static var compensators within the substation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.BusbarSections">
            <summary>Electrical buses within this substation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.ShuntCompensators">
            <summary>Capacitors and reactors within this substation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.WeatherZone">
            <summary>The current weather zone</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.LoadZone">
            <summary>The current load zone</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new CIM Substation
            </summary>
            <param name="ElementSource">The XML source for this line</param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.#ctor">
            <summary>
            Initialize a new CIM substation
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new CIM Substation
            </summary>
            <param name="ElementSource">The data source for this substation</param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.SubstationToXml(System.Xml.XmlDocument)">
            <summary>
            Convert the boundary into an XML element
            </summary>
            <param name="xDoc">The XML Document used to create the element</param>
            <returns>The newly-created element</returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.DistanceTo(Macomber_Map.Data_Elements.MM_Substation)">
            <summary>
            Return the distance between this substation and another, in miles
            </summary>
            <param name="Substation">The other substation</param>
            <returns>Distance, in miles.</returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.DistanceTo(System.Drawing.PointF)">
            <summary>
            Return the distance between this substation and another, in miles
            </summary>
            <param name="OtherLatLong">The other lat/long</param>
            <returns>Distance, in miles.</returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.ComputeDistance(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Compute the distances between two lat/longs
            </summary>
            <param name="LatLong"></param>
            <param name="OtherLatLong"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.AngleTo(Macomber_Map.Data_Elements.MM_Substation)">
            <summary>
            Return the angle between this substation and another, in radians
            </summary>
            <param name="Substation">The other substation</param>
            <returns>Angle, in radians</returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.CheckVisibility(Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            Determine whether the substation is visible on the screen
            </summary>
            <param name="Coordinates">The coordinates of the viewport</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.SubstationDisplay(System.Collections.Generic.Dictionary{Macomber_Map.Data_Elements.MM_AlarmViolation,System.Windows.Forms.ListViewItem},System.Object)">
            <summary>
            Determine the appropriate display parameter for the substation
            </summary>
            <param name="CallingObject">The calling object</param>
            <param name="ShownViolations">The shown violations</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Substation.MapText(System.Single)">
            <summary>
            Return the appropriate text for the substation, as requested
            </summary>
            <param name="ZoomLevel">The current zoom level</param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation.Longitude">
            <summary>
            The longitude of the substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation.Latitude">
            <summary>
            The latitude of the substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation.Operators">
            <summary>Our collection of operators found within our substation</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation.TotalHSL">
            <summary>
            Report the total generation HSL in the substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation.TotalLines">
            <summary>
            Report the total number of lines connected to our substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation.TotalLineCapacity">
            <summary>
            Report the total transmission capacity into/out of the substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation.FrequencyControlStatus">
            <summary>
            Determine the frequency control state of the substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation.ElementTypeList">
            <summary>
            Return a string of element types within the substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation.KVLevelList">
            <summary>
            Return a string of KV levels within the substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation.KVLevelFullList">
            <summary>
            Return a string of KV levels (including 'KV') within the substation
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Substation.Average_pU">
            <summary>
            Return the average voltage deviation 
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Substation.enumFrequencyControlStatus">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.enumFrequencyControlStatus.None">
            <summary>No frequency control</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.enumFrequencyControlStatus.Unit">
            <summary>Unit on frequency control</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Substation.enumFrequencyControlStatus.Island">
            <summary>Island on frequency control</summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Data_Integration">
            <summary>
            This class is the data integration layer, pulling information from a variety of sources and integrating them for the UI.
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.UseSpeech">
            <summary>Whether to use speech for violations</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.SaveTime">
            <summary>If a savecase is being used, when it was last done</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.TEIDRandomizer">
            <summary>Our random TEIDs.</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.LoadForecast">
            <summary>The load forecast table</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.LoadForecastDates">
            <summary>The load forecast dates table</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.LoadForecastUseEndDates">
            <summary>Whether the end dates should be used from LF</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.LFDate">
            <summary>The date when the load forecast was last refreshed</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.RTGenDate">
            <summary>The date when the RTGen data was last refreshed</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.ValueChangeLog">
            <summary>Our log file to capture value changes</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.ActiveData">
            <summary>The collection of currently-active data sets, for serialization purposes</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OneLineDirectory">
            <summary>The path for locally-cached one-lines</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.Weather">
            <summary>The weather station loader and maintenance system</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration._UseEstimates">
            <summary>Whether to use estimates or telemetered values</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration._ShowPostCtgValues">
            <summary>Whether to show post-contignency values</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration._NetworkSource">
            <summary>The network source for the data</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.CommLoaded">
            <summary>Whether all communications points have yet been loaded</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration._DisplayAlarms">
            <summary>Whether to show Alarms</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.CurrentTime">
            <summary>The current time, according to CIM</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.UsePipe">
            <summary>Whether the named pipe communications should be used</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.TestMode">
            <summary>Whether the system is in test mode (no data connectors)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.InitializationComplete">
            <summary>Whether all main components and UI loading are complete.</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.Permissions">
            <summary>The access-level permissions for the Macomber Map</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.MMServerName">
            <summary>The name of the MM server to which we're connected</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.MMSServerName">
            <summary>The name of the MMS server to which we're connected</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.HistoryServerName">
            <summary>The name of the Historic server to which we're connected</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.ImportCompleted">
            <summary>Whether the state estimator import has completed.</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.Speech">
            <summary>The speech synthesizer</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration._Commands">
            <summary>The repository of commands that MM can execute</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.DataSources">
            <summary>The full list of available data sources</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.ModelName">
            <summary>The name of the network model</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.ModelDate">
            <summary>The date of the network model</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.MMServer">
            <summary>The connection to the CIM server (can be Microsoft SQL, Oracle data connector, MySQL connector, Microsoft Access connector)</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.StartupModel(Macomber_Map.Data_Connections.MM_Server_Connector,System.String,System.String,System.String,System.Boolean,Macomber_Map.User_Interface_Components.Startup_Form,Macomber_Map.Data_Connections.Generic.MM_Data_Source,System.String,System.String,System.Boolean)">
            <summary>
            Initialize the data integration layer 
            </summary>
            <param name="MMServer">Our MM Server</param>
            <param name="MMServerName">The name of the MM Server</param>
            <param name="MMS_Server_Name">The name of the MMS Server</param>
            <param name="History_Server_Name">The name of the historic server</param>
            <param name="WeatherData">Whether weather data should be downloaded</param>
            <param name="Startup">The startup form</param>
            <param name="NetworkSource">The network source to be used</param>
            <param name="UserName">The user's name</param>
            <param name="Password">The user's password</param>
            <param name="WriteValueUpdates">Whether to write out value updates</param>
            <returns>True on full success</returns>                        
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.CreateValueUpdateLogFile">
            <summary>
            Create a log file for value updates
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.EstimateSubstationPositioning">
            <summary>
            Go through all substations, and find ones with no latitude/longitude. When we find them, estimate their positions
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.LoadWeatherStations">
            <summary>
            Load our weather stations
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.LoadMMS">
            <summary>
            Connect to the MMS database
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.LoadHistoricDatabase">
            <summary>
            Connect to the historic database
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.BuildMMSTableMappings">
            <summary>
            Build our MMS table mappings
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.TryLoadStep(System.String,Macomber_Map.Data_Connections.Data_Integration.LoadEventDelegate,Macomber_Map.User_Interface_Components.Startup_Form)">
            <summary>
            Try a startup load step
            </summary>
            <param name="EventText">The text of the event</param>
            <param name="EventToRun">The delegate to attempt to run</param>
            <param name="Startup">Our startup form</param>
            <returns>The success state of the step</returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.ApplyPermissions">
            <summary>
            Go through all elements, and remove those for which we do not have permission
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.StartupSavecase(System.String,Macomber_Map.User_Interface_Components.Startup_Form,System.String,System.String)">
            <summary>
            Initialize the data integration model
            </summary>
            <param name="NetworkModelPath">The path to the model to be used</param>
            <param name="Startup">The startup form</param>
            <param name="OneLineDirectory"></param>                
            <param name="HistoryConnector">The connection to our historic server</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.SaveXMLData(System.String,Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            Save the full network model, as requested by the user.
            </summary>
            <param name="FileName">The file to output</param>
            <param name="Coordinates">The network map coordinates</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.SaveXMLDataRequest(Macomber_Map.Data_Elements.MM_Coordinates)">
            <summary>
            This process is handled when the user requests a network model/savecase save.
            </summary>
            <param name="Coordinates">The coordinates to be exported</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.SaveXMLUI(System.Object)">
            <summary>
            This provides the user with the save options, and runs accordingly.
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.LocateElement(System.Int32,System.Boolean)">
            <summary>
            Locate an element. If it's not found, crete it, and queue it for later
            </summary>
            <param name="TEID">The TEID of the element</param>        
            <param name="AddIfNew"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.LocateElement(System.Int32,System.Type,System.Boolean)">
            <summary>
            Locate an element of the requested type. If it's not found, crete it, and queue it for later
            </summary>
            <param name="TEID">The TEID of the element</param>
            <param name="DestinationType">The target type of the element</param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
            <returns></returns>        
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.GetTEID">
            <summary>
            Return a new TEID
            </summary>
            <returns>A new unique TEID</returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.LocateElement(System.Xml.XmlElement,System.Type,System.Boolean)">
            <summary>
            Locate an element of the requested type. If it's not found, crete it, and queue it for later
            </summary>
            <param name="xElem">The XML element to read</param>
            <param name="DestinationType">The target type of the element</param>
            <param name="AddIfNew"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.LoadXMLData(System.Xml.XmlDocument,Macomber_Map.Data_Elements.MM_Coordinates,System.String)">
            <summary>
            Load an XML configuration file from a stream, and parse it
            </summary>
            <param name="xDoc">The XML Document containing the model/state information</param>
            <param name="Coordinates">The coordinate information</param>
            <param name="OneLineDirectory"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.RollUpElementsToSubstation">
            <summary>
            Go through all units and loads, and assign to their respective substations
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.CheckAddViolation(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            Check a violation, and add it if it's not in the model yet
            </summary>
            <param name="Viol"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.SpeakText(System.Object)">
            <summary>
            Speak text in a new thread
            </summary>
            <param name="state">The violation to be spoken</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.SpeakText(System.String)">
            <summary>
            Speak text
            </summary>
            <param name="TextToSpeak"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.HandleSpeechRequest">
            <summary>
            Cancel the queued text to be spoken.
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.PrepareSpeech(System.String)">
            <summary>
            Prepare text to be readable as a string
            </summary>
            <param name="InString">The incoming string</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.UpdateViolation(Macomber_Map.Data_Elements.MM_AlarmViolation,System.String,System.DateTime)">
            <summary>
            Update an existing violation (text/date)
            </summary>
            <param name="Viol">The violation to be updated</param>
            <param name="ViolText">The text of the violation</param>
            <param name="ViolDate">The date/time of the violation</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.RemoveViolation(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            Remove a violation from the collection
            </summary>
            <param name="Violation">The violation to be removed</param>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicators">
            <summary>Overall indicators on the state of the network</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.Savecases">
            <summary>Our collection of StudySystem cases</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.SystemValues">
            <summary>The collection of system values</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.ACEColor">
            <summary>The color that ACE should be assigned</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.ValidateColumn(System.Data.DataTable,System.String,System.Type)">
            <summary>
            Determine whether a column exists in a table. If not, create it.
            </summary>
            <param name="InTable">The data table</param>
            <param name="ColumnName">The column name</param>
            <param name="ColumnType">The column type</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.AddSystemValues(System.Single,System.Single,System.DateTime)">
            <summary>
            Add a series of system-level values to our collection
            </summary>
            <param name="RTGenTime">The time stamp for RTGEN</param>
            <param name="Wind">Current wind value</param>
            <param name="TotalGen">Total generation</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.ReportSystemLevelData(System.String,System.String[])">
            <summary>
            Report system-level data - something so important it should be spoken
            </summary>
            <param name="Data">The data for the string</param>
            <param name="args">The arguments for the string</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.Query(Macomber_Map.Data_Connections.Generic.MM_Query_Configuration,Macomber_Map.Data_Connections.Generic.MM_Data_Source)">
            <summary>
            Initate a new query, and return its GUID.
            </summary>
            <param name="Configuration">The configuration for the query</param>
            <param name="DataSource">The data source for the query</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.ShutDown">
            <summary>
            Shut down all connections, threads, etc.
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.HandleNoteEntry(Macomber_Map.Data_Elements.MM_Note)">
            <summary>
            Add/update a note entry from XML
            </summary>
            <param name="InNote"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.HandleNoteEntry(System.Int32,System.DateTime,System.String,System.String,System.Int32)">
            <summary>
            Add/update a note entry
            </summary>
            <param name="ID">The unique ID of the note</param>
            <param name="CreatedOn">When the note was created or updated</param>
            <param name="Author">The author of the note</param>
            <param name="Note">The text of the note</param>
            <param name="TEID">The TEID of the note</param>
            <returns>The note passed to the integration layer</returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.RemoveNoteEntry(System.Int32)">
            <summary>
            Remove the referenced note
            </summary>
            <param name="ID">The ID of the note to be removed</param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.AcknowledgeViolation(Macomber_Map.Data_Elements.MM_AlarmViolation)">
            <summary>
            Acknowledge a violation, and let all elements know it's been done
            </summary>
            <param name="Viol"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.ClearPoint(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Clear all float data on a point
            </summary>
            <param name="Elem"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.DisplayForm(Macomber_Map.User_Interface_Components.MM_Form,System.Threading.Thread)">
            <summary>
            Display a form and store it accordingly
            </summary>
            <param name="FormToDisplay"></param>
            <param name="ThreadToHold"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.FormToDisplay_Shown(System.Object,System.EventArgs)">
            <summary>
            When our new form is shown, bring it to the forefront.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Data_Integration.ConvertError(System.Exception)">
            <summary>
            Build a string export of an error
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.RunningThreads">
            <summary>The collection of runnign threads</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.RunningForms">
            <summary>The collection of running forms</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.UserName">
            <summary>The current user name</summary>
        </member>
        <member name="E:Macomber_Map.Data_Connections.Data_Integration.ViolationAdded">
            <summary>A violation has been added</summary>
        </member>
        <member name="E:Macomber_Map.Data_Connections.Data_Integration.ViolationAcknowledged">
            <summary>A violation has been added</summary>
        </member>
        <member name="E:Macomber_Map.Data_Connections.Data_Integration.ViolationRemoved">
            <summary>A violation has been removed</summary>
        </member>
        <member name="E:Macomber_Map.Data_Connections.Data_Integration.ViolationModified">
            <summary>A violation has been modified</summary>
        </member>
        <member name="E:Macomber_Map.Data_Connections.Data_Integration.NetworkSourceChanged">
            <summary>The network source has changed</summary>
        </member>
        <member name="E:Macomber_Map.Data_Connections.Data_Integration.NoteAdded">
            <summary>A note has been added</summary>
        </member>
        <member name="E:Macomber_Map.Data_Connections.Data_Integration.NoteModified">
            <summary>A note has been modified</summary>
        </member>
        <member name="E:Macomber_Map.Data_Connections.Data_Integration.NoteRemoved">
            <summary>A note has been removed</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.DataConnections">
            <summary>The data connections available within the Macomber Map system</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.Processes">
            <summary>The time of last execution for a process</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.Communications">
            <summary>Our collection of communications linkages</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.ActiveView">
            <summary>The currently activated view</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.NetworkSource">
            <summary>The network source</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.ShowPostCtgValues">
            <summary>
            Whether components with contingeny violations should show post-Ctg values
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.UseEstimates">
            <summary>
            Whether estimates should be shown
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.DisplayAlarms">
            <summary>
            Whether alarms should be shown
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.Reserves">
            <summary>Our reserve status</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.CSCIROLLimits">
            <summary>Our collection of CSC/IROL limits</summary>
        </member>
        <member name="P:Macomber_Map.Data_Connections.Data_Integration.Commands">
            <summary>The repository of commands that MM can execute</summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Data_Integration.ViolationChangeDelegate">
            <summary>
            An delegate for changes in violations, either addition or removal
            </summary>        
            <param name="Violation">The added / removed violation</param>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Data_Integration.NoteChangeDelegate">
            <summary>
            A delegate for changes in notes, either addition, removal, or modification
            </summary>
            <param name="Note">The added/changed/removed note</param>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum">
            <summary>
            The overall indicators stored and updated by the MM system
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.ACE">
            <summary>ACE</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.Frequency">
            <summary>Frequency</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.Gen">
            <summary>Total Generation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.Load">
            <summary>Total Load</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.Wind">
            <summary>Total Wind Generation</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.LoadRes">
            <summary>Load Res</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.DCTieIn">
            <summary>DCTie incoming MW</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.DCTieOut">
            <summary>DCTie outgoing MW</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.AverageLMP">
            <summary>The average LMP</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.LMPSpread">
            <summary>The maximimum absolute difference between the average and its maxima or minima</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.MaximumLMP">
            <summary>The highest LMP</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.MinimumLMP">
            <summary>The lowest LMP</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.PRC">
            <summary>Physical responsive</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.GenCapacity">
            <summary>The remaining capacity for generation (to HASL)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.GenEmrgCapacity">
            <summary>The remaining emergency capacity for generation (to HSL)</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Data_Integration.OverallIndicatorEnum.IslandCount">
            <summary>The number of islands on the system</summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Element_Type">
            <summary>
            This class stores information on an element type
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element_Type.Name">
            <summary>The name of the element type</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element_Type.Acronym">
            <summary>The acroym (short name) for the element type</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element_Type.CIMName">
            <summary>The name used to represent the type in CIM</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element_Type.CIMParameter">
            <summary>The parameter needed to identify this object from CIM</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element_Type.Configuration">
            <summary>
            The XML configuration for this element
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Element_Type.Index">
            <summary>
            The integer value, used in the SQL versions of the CIM server
            </summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element_Type.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>        
            Initialize a new element type
            </summary>
            <param name="Configuration">The XML configuration element</param>        
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element_Type.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            Initialize a new element type
            </summary>
            <param name="dRd"></param>
            <param name="AddIfNew">Whether to add any new elements that may be created</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element_Type.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize a new element type
            </summary>
            <param name="Name">The name of the element type</param>
            <param name="Acronym">The acronym for the element type</param>
            <param name="CIMName">The CIM name of the type</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Element_Type.ToString">
            <summary>
            Return the element type name as a string
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Element_Type.ElementParameters">
            <summary>
            Handle the loading and saving of element parameters
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Coordinates">
            <summary>
            Store the coordinate system used by a map, corresponding to the Google Maps coordinate system
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Coordinates._GConstants">
            <summary>Our collection of constants to improve map rendering</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Coordinates._LassoStart">
            <summary>The starting point for a lasso</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Coordinates._LassoEnd">
            <summary>The ending for a lasso</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Coordinates._ZoomLevel">
            <summary>The current zoom level</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Coordinates._TopLeft">
            <summary>The top/left coordinates</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Coordinates._LassoPoints">
            <summary>The collection of points to draw a lasso if it's not in rectangular mode</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Coordinates._ControlDown">
            <summary>Whether the user is holding down the control key (indicating the lasso should be include all elements, not just visible ones.</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Coordinates.DisplayRectangle">
            <summary>The display size of the network map</summary>
        </member>
        <member name="F:Macomber_Map.Data_Elements.MM_Coordinates.Rotation">
            <summary>The rotation of the main map</summary>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Initialize the coordinate system
            </summary>
            <param name="TopLeft">The top/left latitude/longitude</param>
            <param name="BottomRight">The bottom/right latitude/longitude</param>
            <param name="ZoomLevel">The zoom level</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initialize the coordinate system
            </summary>
            <param name="Longitude_Min">The minimim longitude</param>
            <param name="Latitude_Min">The minimum latitude</param>
            <param name="Longitude_Max">The maximum longitude</param>
            <param name="Latitude_Max">The maximum latitude</param>
            <param name="ZoomLevel">The zoom level</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.SetControls">
            <summary>
            Assign the appropriate controls to the coordinate structure
            </summary>      
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.AddLassoPoint(System.Drawing.PointF)">
            <summary>
            Add a point to the lasso point collection
            </summary>
            <param name="LatLng"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.LatLngToXY(System.Drawing.PointF,System.Int32)">
            <summary>
            Convert a latitude/longitude to pixel based on the current zoom level
            </summary>
            <param name="LatLng">The latitude/longitude</param>
            <param name="ZoomLevel">Zoom level</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.SetTopLeftAndBottomRight(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Set our top left and bottom right coordinates
            </summary>
            <param name="TopLeft"></param>
            <param name="BottomRight"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.ConvertInvertedPoint(System.Drawing.PointF)">
            <summary>
            Compute an inverted point
            </summary>
            <param name="LatLng"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.UpdateFromXY(System.Drawing.Point)">
            <summary>
            Update our coordinates to reflect a new top-left pixel
            </summary>
            <param name="TopLeftXY">The top-left pixel</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.UpdateZoom(System.Int32)">
            <summary>
            Zoom the coordinates so that our center is maintained at the present zoom level
            </summary>
            <param name="ZoomLevel">The current zoom level</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.UpdateZoom(System.Int32,System.Int32,System.Drawing.Point)">
            <summary>
            Zoom our coordinates so a particular X/Y coordinate maintains the same Lat/Long in different zoom levels.
            </summary>
            <param name="ZoomLevel"></param>
            <param name="OldZoomLevel"></param>
            <param name="CursorPosition"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.UpdateFromLatLng(System.Drawing.PointF)">
            <summary>
            Update our coordinates to reflect a new top/left lat/long
            </summary>
            <param name="TopLeft">The top-left latitude and longitude</param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.UpdateFromLatLngAndZoom(System.Drawing.PointF,System.Int32)">
            <summary>
            Update our coordinates to reflect a new top/left lat/long and zoom level
            </summary>
            <param name="TopLeft"></param>
            <param name="ZoomLevel"></param>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.ConvertRectangle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Return a rectangle of our coordinates
            </summary>
            <param name="TopLeft"></param>
            <param name="BottomRight"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.ConvertPoint(System.Drawing.PointF)">
            <summary>
            Convert a latitude/longitude to screen point
            </summary>
            <param name="inPoint">The point to convert</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.ConvertPoint(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Convert a latitude/longitude to screen point
            </summary>
            <param name="inPoint">The point to convert</param>
            <param name="BottomRight"></param>
            <param name="TopLeft"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.XYToTile(System.Drawing.Point)">
            <summary>
            Convert a pixel to tile coordinate
            </summary>
            <param name="XY"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.TileTopLeft(System.Drawing.Point,System.Int32)">
            <summary>
            Determine the top/left Lat/Long of a map tile at a particular zoom level
            </summary>
            <param name="Tile"></param>
            <param name="ZoomLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.TileBottomRight(System.Drawing.Point,System.Int32)">
            <summary>
            Determine the bottom-right point of a tile at the requested zoom level
            </summary>
            <param name="Tile">The tile to be measured</param>
            <param name="ZoomLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.XYToLatLng(System.Drawing.Point,System.Int32)">
            <summary>
            Convert a pixel to latitude/longitude based on the current zoom level
            </summary>
            <param name="XY">The current pixel</param>
            <param name="ZoomLevel">The current zoom level</param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.UnconvertPoint(System.Drawing.Point)">
            <summary>
            Convert a screen point to lat/long
            </summary>
            <param name="XY"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Elements.MM_Coordinates.IsValidTile(System.Drawing.Point)">
            <summary>
            Determine if a tile is valid based on its coordinates
            </summary>
            <param name="TileCoordinates">The coordinates of the tile</param>
            <returns></returns>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.GConstants">
            <summary>Our collection of constants to improve map rendering</summary>
        </member>
        <member name="E:Macomber_Map.Data_Elements.MM_Coordinates.LassoDrawing">
            <summary>This event is fired when our lasso is being drawn, and its end is moved.</summary>
        </member>
        <member name="E:Macomber_Map.Data_Elements.MM_Coordinates.Panned">
            <summary>This event is fired when our coordinates are panned.</summary>
        </member>
        <member name="E:Macomber_Map.Data_Elements.MM_Coordinates.Zoomed">
            <summary>
            This event is fired when our coordinates are zoomed.
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.TopLeft">
            <summary>Our top-left Latitude/Longitude</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.TopLeftXY">
            <summary>Our top-left Pixel</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.BottomRight">
            <summary>Our bottom-right Latitude/Longitude</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.BottomRightXY">
            <summary>Our bottom-right pixel</summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.ZoomLevel">
            <summary>
            Report our zoom level
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.ControlDown">
            <summary>Whether the user is holding down the control key (indicating the lasso should be include all elements, not just visible ones.</summary>        
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.LassoEnd">
            <summary>
            The end point on the lasso
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.LassoColor">
            <summary>
            Get the lasso color
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.LassoBrush">
            <summary>
            Get the lasso color
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.LassoPen">
            <summary>
            Get the lasso pen
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.LassoPoints">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.LassoStart">
            <summary>
            The starting point on the lasso
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.LassoMultiplePoints">
            <summary>
            Determine whether the lasso contains multiple points.
            </summary>
        </member>
        <member name="P:Macomber_Map.Data_Elements.MM_Coordinates.Center">
            <summary>
            Determine the center of our display
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Coordinates.PanEvent">
            <summary>
            A delegate for handling changes in coordates
            </summary>
            <param name="OldCenter">The old center of the coordinates</param>
            <param name="NewCenter">The new center of the coordinates</param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Coordinates.ZoomEvent">
            <summary>
            A delegate for handling zoom events
            </summary>
            <param name="OldZoom">The previous zoom level</param>
            <param name="NewZoom"></param>
        </member>
        <member name="T:Macomber_Map.Data_Elements.MM_Coordinates.LassoDrawingEvent">
            <summary>
            A delegate to fire when a lasso is being drawn
            </summary>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Historic.MM_Historic_DataValue">
            <summary>
            This class holds information on a historic value
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_DataValue.Value">
            <summary>The value retrieved</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Historic.MM_Historic_DataValue.TimeStamp">
            <summary>The time stamp associated with our value</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Historic.MM_Historic_DataValue.#ctor(System.DateTime,System.Object)">
            <summary>
            Initialize a new data value
            </summary>
            <param name="TimeStamp"></param>
            <param name="value"></param>
        </member>
        <member name="T:Macomber_Map.Data_Connections.Generic.MM_Command">
            <summary>
            This class holds the information on a command that can be executed
            </summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Command.ConnectorType">
            <summary>The data connector type with which the command is associated</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Command.TargetType">
            <summary>The type for which the command is available</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Command.Title">
            <summary>The title of the command</summary>
        </member>
        <member name="F:Macomber_Map.Data_Connections.Generic.MM_Command.Command">
            <summary>The text of the command</summary>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Generic.MM_Command.#ctor(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Initialize a new MM command
            </summary>
            <param name="xConfig"></param>
            <param name="AddIfNew"></param>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Generic.MM_Command.Validate(Macomber_Map.Data_Elements.MM_Element)">
            <summary>
            Determine whether a command applies to a particular element
            </summary>
            <param name="BaseElement"></param>
            <returns></returns>
        </member>
        <member name="M:Macomber_Map.Data_Connections.Generic.MM_Command.ExecuteCommandInThread(System.Object)">
            <summary>
            Execute the command within its own thread
            </summary>
            <param name="AssignedObject"></param>
            
        </member>
        <member name="M:Macomber_Map.Data_Connections.Generic.MM_Command.Execute(System.Object)">
            <summary>
            Execute the command based on the element
            </summary>
            <param name="AssignedObject">The assigned object, from which parameters should be retrieved</param>
        </member>
    </members>
</doc>
